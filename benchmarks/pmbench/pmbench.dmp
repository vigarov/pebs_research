
pmbench:     file format elf64-x86-64


Disassembly of section .pmbench_code_page:

0000000000408000 <perform_benchmark_st>:
  408000:	f3 0f 1e fa          	endbr64 
  408004:	41 57                	push   %r15
  408006:	49 89 f7             	mov    %rsi,%r15
  408009:	be 48 00 00 00       	mov    $0x48,%esi
  40800e:	41 56                	push   %r14
  408010:	41 55                	push   %r13
  408012:	41 54                	push   %r12
  408014:	55                   	push   %rbp
  408015:	53                   	push   %rbx
  408016:	48 83 ec 78          	sub    $0x78,%rsp
  40801a:	48 89 7c 24 10       	mov    %rdi,0x10(%rsp)
  40801f:	bf 01 00 00 00       	mov    $0x1,%edi
  408024:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  40802b:	00 00 
  40802d:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
  408032:	31 c0                	xor    %eax,%eax
  408034:	e8 47 a4 bf ff       	call   2480 <calloc@plt>
  408039:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
  40803e:	48 85 c0             	test   %rax,%rax
  408041:	0f 84 ba 05 00 00    	je     408601 <perform_benchmark_st+0x601>
  408047:	48 8b 5c 24 30       	mov    0x30(%rsp),%rbx
  40804c:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
  408051:	ba 08 00 00 00       	mov    $0x8,%edx
  408056:	66 0f ef c0          	pxor   %xmm0,%xmm0
  40805a:	8b 35 c4 68 c0 ff    	mov    -0x3f973c(%rip),%esi        # e924 <params+0x64>
  408060:	4c 8b 2d 71 68 c0 ff 	mov    -0x3f978f(%rip),%r13        # e8d8 <params+0x18>
  408067:	4c 89 3d 2a 68 c0 ff 	mov    %r15,-0x3f97d6(%rip)        # e898 <control+0x8>
  40806e:	48 89 43 08          	mov    %rax,0x8(%rbx)
  408072:	48 63 05 a7 68 c0 ff 	movslq -0x3f9759(%rip),%rax        # e920 <params+0x60>
  408079:	0f 11 43 10          	movups %xmm0,0x10(%rbx)
  40807d:	4c 8b 35 4c 68 c0 ff 	mov    -0x3f97b4(%rip),%r14        # e8d0 <params+0x10>
  408084:	85 c0                	test   %eax,%eax
  408086:	0f 11 43 20          	movups %xmm0,0x20(%rbx)
  40808a:	48 0f 48 c2          	cmovs  %rdx,%rax
  40808e:	c1 e6 0a             	shl    $0xa,%esi
  408091:	0f 11 43 30          	movups %xmm0,0x30(%rbx)
  408095:	f2 0f 10 05 53 68 c0 	movsd  -0x3f97ad(%rip),%xmm0        # e8f0 <params+0x30>
  40809c:	ff 
  40809d:	48 63 d6             	movslq %esi,%rdx
  4080a0:	8b 35 26 68 c0 ff    	mov    -0x3f97da(%rip),%esi        # e8cc <params+0xc>
  4080a6:	c7 03 01 00 00 00    	movl   $0x1,(%rbx)
  4080ac:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
  4080b1:	48 8b 05 50 68 c0 ff 	mov    -0x3f97b0(%rip),%rax        # e908 <params+0x48>
  4080b8:	c1 e6 08             	shl    $0x8,%esi
  4080bb:	48 89 1d ce 67 c0 ff 	mov    %rbx,-0x3f9832(%rip)        # e890 <control>
  4080c2:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
  4080c7:	48 89 d0             	mov    %rdx,%rax
  4080ca:	48 63 ee             	movslq %esi,%rbp
  4080cd:	be 01 00 00 00       	mov    $0x1,%esi
  4080d2:	48 69 d2 1f 85 eb 51 	imul   $0x51eb851f,%rdx,%rdx
  4080d9:	c1 f8 1f             	sar    $0x1f,%eax
  4080dc:	48 89 ef             	mov    %rbp,%rdi
  4080df:	48 c7 43 40 00 00 00 	movq   $0x0,0x40(%rbx)
  4080e6:	00 
  4080e7:	48 c7 44 24 60 33 00 	movq   $0x33,0x60(%rsp)
  4080ee:	00 00 
  4080f0:	c7 05 a6 67 c0 ff 00 	movl   $0x0,-0x3f985a(%rip)        # e8a0 <control+0x10>
  4080f7:	00 00 00 
  4080fa:	48 c1 fa 25          	sar    $0x25,%rdx
  4080fe:	29 c2                	sub    %eax,%edx
  408100:	89 54 24 1c          	mov    %edx,0x1c(%rsp)
  408104:	41 ff 55 00          	call   *0x0(%r13)
  408108:	8b 33                	mov    (%rbx),%esi
  40810a:	48 89 e9             	mov    %rbp,%rcx
  40810d:	48 89 ea             	mov    %rbp,%rdx
  408110:	f2 0f 10 05 d8 67 c0 	movsd  -0x3f9828(%rip),%xmm0        # e8f0 <params+0x30>
  408117:	ff 
  408118:	49 89 c4             	mov    %rax,%r12
  40811b:	48 c1 e9 08          	shr    $0x8,%rcx
  40811f:	48 8d 3d a2 06 c0 ff 	lea    -0x3ff95e(%rip),%rdi        # 87c8 <_IO_stdin_used+0x7c8>
  408126:	b8 01 00 00 00       	mov    $0x1,%eax
  40812b:	e8 80 d6 bf ff       	call   57b0 <prn>
  408130:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  408135:	ff 10                	call   *(%rax)
  408137:	48 89 04 24          	mov    %rax,(%rsp)
  40813b:	bb 40 42 0f 00       	mov    $0xf4240,%ebx
  408140:	4c 89 e7             	mov    %r12,%rdi
  408143:	41 ff 55 08          	call   *0x8(%r13)
  408147:	83 eb 01             	sub    $0x1,%ebx
  40814a:	75 f4                	jne    408140 <perform_benchmark_st+0x140>
  40814c:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx
  408151:	ff 13                	call   *(%rbx)
  408153:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
  408158:	48 2b 04 24          	sub    (%rsp),%rax
  40815c:	31 d2                	xor    %edx,%edx
  40815e:	66 0f ef c0          	pxor   %xmm0,%xmm0
  408162:	8b 4b 10             	mov    0x10(%rbx),%ecx
  408165:	48 8d 3d 8c 06 c0 ff 	lea    -0x3ff974(%rip),%rdi        # 87f8 <_IO_stdin_used+0x7f8>
  40816c:	48 89 46 30          	mov    %rax,0x30(%rsi)
  408170:	48 69 c0 e8 03 00 00 	imul   $0x3e8,%rax,%rax
  408177:	48 c7 46 38 40 42 0f 	movq   $0xf4240,0x38(%rsi)
  40817e:	00 
  40817f:	8b 36                	mov    (%rsi),%esi
  408181:	48 f7 f1             	div    %rcx
  408184:	89 c0                	mov    %eax,%eax
  408186:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
  40818b:	b8 01 00 00 00       	mov    $0x1,%eax
  408190:	f3 0f 5e 05 10 0d c0 	divss  -0x3ff2f0(%rip),%xmm0        # 8ea8 <args_doc_str.3+0x10>
  408197:	ff 
  408198:	f3 0f 5a c0          	cvtss2sd %xmm0,%xmm0
  40819c:	e8 0f d6 bf ff       	call   57b0 <prn>
  4081a1:	48 8d 35 98 66 c0 ff 	lea    -0x3f9968(%rip),%rsi        # e840 <mem_info_before_warmup>
  4081a8:	48 8d 3d 91 64 c0 ff 	lea    -0x3f9b6f(%rip),%rdi        # e640 <mem_ctx>
  4081af:	e8 6c e6 bf ff       	call   6820 <sys_stat_mem_update>
  4081b4:	8b 0d 46 67 c0 ff    	mov    -0x3f98ba(%rip),%ecx        # e900 <params+0x40>
  4081ba:	85 c9                	test   %ecx,%ecx
  4081bc:	0f 85 01 01 00 00    	jne    4082c3 <perform_benchmark_st+0x2c3>
  4081c2:	49 8b 45 10          	mov    0x10(%r13),%rax
  4081c6:	48 85 c0             	test   %rax,%rax
  4081c9:	74 08                	je     4081d3 <perform_benchmark_st+0x1d3>
  4081cb:	4c 89 e7             	mov    %r12,%rdi
  4081ce:	ff d0                	call   *%rax
  4081d0:	48 89 c5             	mov    %rax,%rbp
  4081d3:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  4081d8:	48 89 ea             	mov    %rbp,%rdx
  4081db:	48 8d 3d 56 06 c0 ff 	lea    -0x3ff9aa(%rip),%rdi        # 8838 <_IO_stdin_used+0x838>
  4081e2:	8b 30                	mov    (%rax),%esi
  4081e4:	31 c0                	xor    %eax,%eax
  4081e6:	e8 c5 d5 bf ff       	call   57b0 <prn>
  4081eb:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  4081f0:	ff 10                	call   *(%rax)
  4081f2:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
  4081f7:	48 8d 44 24 58       	lea    0x58(%rsp),%rax
  4081fc:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
  408203:	00 
  408204:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
  408209:	48 8d 44 24 60       	lea    0x60(%rsp),%rax
  40820e:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  408213:	48 85 ed             	test   %rbp,%rbp
  408216:	74 5e                	je     408276 <perform_benchmark_st+0x276>
  408218:	4c 89 e7             	mov    %r12,%rdi
  40821b:	41 ff 55 08          	call   *0x8(%r13)
  40821f:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
  408224:	48 89 c3             	mov    %rax,%rbx
  408227:	ff 15 b3 66 c0 ff    	call   *-0x3f994d(%rip)        # e8e0 <params+0x20>
  40822d:	48 8b 7c 24 38       	mov    0x38(%rsp),%rdi
  408232:	48 c1 e3 0c          	shl    $0xc,%rbx
  408236:	89 c0                	mov    %eax,%eax
  408238:	48 8d 1c 83          	lea    (%rbx,%rax,4),%rbx
  40823c:	48 03 5c 24 10       	add    0x10(%rsp),%rbx
  408241:	e8 3a 08 00 00       	call   408a80 <roll_dice>
  408246:	31 f6                	xor    %esi,%esi
  408248:	25 ff 03 00 00       	and    $0x3ff,%eax
  40824d:	39 44 24 1c          	cmp    %eax,0x1c(%rsp)
  408251:	77 0f                	ja     408262 <perform_benchmark_st+0x262>
  408253:	83 3d c2 66 c0 ff 01 	cmpl   $0x1,-0x3f993e(%rip)        # e91c <params+0x5c>
  40825a:	be 01 00 00 00       	mov    $0x1,%esi
  40825f:	83 de ff             	sbb    $0xffffffff,%esi
  408262:	48 89 df             	mov    %rbx,%rdi
  408265:	41 ff 16             	call   *(%r14)
  408268:	48 83 04 24 01       	addq   $0x1,(%rsp)
  40826d:	48 8b 04 24          	mov    (%rsp),%rax
  408271:	48 39 c5             	cmp    %rax,%rbp
  408274:	75 a2                	jne    408218 <perform_benchmark_st+0x218>
  408276:	48 8b 5c 24 28       	mov    0x28(%rsp),%rbx
  40827b:	ff 13                	call   *(%rbx)
  40827d:	48 8b 74 24 30       	mov    0x30(%rsp),%rsi
  408282:	48 2b 44 24 08       	sub    0x8(%rsp),%rax
  408287:	31 d2                	xor    %edx,%edx
  408289:	48 8d 3d d8 05 c0 ff 	lea    -0x3ffa28(%rip),%rdi        # 8868 <_IO_stdin_used+0x868>
  408290:	8b 4b 10             	mov    0x10(%rbx),%ecx
  408293:	48 89 46 20          	mov    %rax,0x20(%rsi)
  408297:	48 69 c0 e8 03 00 00 	imul   $0x3e8,%rax,%rax
  40829e:	48 89 6e 28          	mov    %rbp,0x28(%rsi)
  4082a2:	8b 36                	mov    (%rsi),%esi
  4082a4:	48 f7 f1             	div    %rcx
  4082a7:	89 c2                	mov    %eax,%edx
  4082a9:	31 c0                	xor    %eax,%eax
  4082ab:	e8 00 d5 bf ff       	call   57b0 <prn>
  4082b0:	48 8d 35 29 65 c0 ff 	lea    -0x3f9ad7(%rip),%rsi        # e7e0 <mem_info_before_run>
  4082b7:	48 8d 3d 82 63 c0 ff 	lea    -0x3f9c7e(%rip),%rdi        # e640 <mem_ctx>
  4082be:	e8 5d e5 bf ff       	call   6820 <sys_stat_mem_update>
  4082c3:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  4082c8:	48 8d 3d 0d 00 c0 ff 	lea    -0x3ffff3(%rip),%rdi        # 82dc <_IO_stdin_used+0x2dc>
  4082cf:	8b 30                	mov    (%rax),%esi
  4082d1:	31 c0                	xor    %eax,%eax
  4082d3:	e8 d8 d4 bf ff       	call   57b0 <prn>
  4082d8:	0f b6 05 e5 65 c0 ff 	movzbl -0x3f9a1b(%rip),%eax        # e8c4 <params+0x4>
  4082df:	84 c0                	test   %al,%al
  4082e1:	0f 85 b9 01 00 00    	jne    4084a0 <perform_benchmark_st+0x4a0>
  4082e7:	48 63 1d d2 65 c0 ff 	movslq -0x3f9a2e(%rip),%rbx        # e8c0 <params>
  4082ee:	8b 05 b4 65 c0 ff    	mov    -0x3f9a4c(%rip),%eax        # e8a8 <freq_khz>
  4082f4:	48 8b 6c 24 28       	mov    0x28(%rsp),%rbp
  4082f9:	48 0f af d8          	imul   %rax,%rbx
  4082fd:	ff 55 00             	call   *0x0(%rbp)
  408300:	49 89 c0             	mov    %rax,%r8
  408303:	48 69 db e8 03 00 00 	imul   $0x3e8,%rbx,%rbx
  40830a:	48 89 d8             	mov    %rbx,%rax
  40830d:	48 d1 e8             	shr    %rax
  408310:	4a 8d 14 00          	lea    (%rax,%r8,1),%rdx
  408314:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  408319:	8b 00                	mov    (%rax),%eax
  40831b:	89 04 24             	mov    %eax,(%rsp)
  40831e:	83 e8 01             	sub    $0x1,%eax
  408321:	83 f8 03             	cmp    $0x3,%eax
  408324:	0f 87 d7 02 00 00    	ja     408601 <perform_benchmark_st+0x601>
  40832a:	48 98                	cltq   
  40832c:	48 8d 35 0d 63 c0 ff 	lea    -0x3f9cf3(%rip),%rsi        # e640 <mem_ctx>
  408333:	48 8d 0c 40          	lea    (%rax,%rax,2),%rcx
  408337:	48 8d 05 22 63 c0 ff 	lea    -0x3f9cde(%rip),%rax        # e660 <alarms>
  40833e:	48 8d 04 c8          	lea    (%rax,%rcx,8),%rax
  408342:	48 8d 0d c7 d3 bf ff 	lea    -0x402c39(%rip),%rcx        # 5710 <mem_info_oneshot>
  408349:	48 89 10             	mov    %rdx,(%rax)
  40834c:	48 89 48 08          	mov    %rcx,0x8(%rax)
  408350:	48 89 70 10          	mov    %rsi,0x10(%rax)
  408354:	ff 55 00             	call   *0x0(%rbp)
  408357:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
  40835c:	48 01 c3             	add    %rax,%rbx
  40835f:	0f b6 05 5e 65 c0 ff 	movzbl -0x3f9aa2(%rip),%eax        # e8c4 <params+0x4>
  408366:	48 89 5c 24 38       	mov    %rbx,0x38(%rsp)
  40836b:	48 8d 4c 24 58       	lea    0x58(%rsp),%rcx
  408370:	48 8d 74 24 60       	lea    0x60(%rsp),%rsi
  408375:	4c 89 6c 24 08       	mov    %r13,0x8(%rsp)
  40837a:	48 c7 44 24 40 00 00 	movq   $0x0,0x40(%rsp)
  408381:	00 00 
  408383:	49 89 f5             	mov    %rsi,%r13
  408386:	48 89 4c 24 20       	mov    %rcx,0x20(%rsp)
  40838b:	eb 23                	jmp    4083b0 <perform_benchmark_st+0x3b0>
  40838d:	0f 1f 00             	nopl   (%rax)
  408390:	83 ed 01             	sub    $0x1,%ebp
  408393:	75 5b                	jne    4083f0 <perform_benchmark_st+0x3f0>
  408395:	8b 05 05 65 c0 ff    	mov    -0x3f9afb(%rip),%eax        # e8a0 <control+0x10>
  40839b:	48 83 44 24 40 01    	addq   $0x1,0x40(%rsp)
  4083a1:	85 c0                	test   %eax,%eax
  4083a3:	0f 85 7f 01 00 00    	jne    408528 <perform_benchmark_st+0x528>
  4083a9:	0f b6 05 14 65 c0 ff 	movzbl -0x3f9aec(%rip),%eax        # e8c4 <params+0x4>
  4083b0:	84 c0                	test   %al,%al
  4083b2:	0f 84 01 01 00 00    	je     4084b9 <perform_benchmark_st+0x4b9>
  4083b8:	48 8b 74 24 38       	mov    0x38(%rsp),%rsi
  4083bd:	48 8d 46 ff          	lea    -0x1(%rsi),%rax
  4083c1:	48 85 f6             	test   %rsi,%rsi
  4083c4:	0f 84 5e 01 00 00    	je     408528 <perform_benchmark_st+0x528>
  4083ca:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
  4083cf:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  4083d4:	ff 10                	call   *(%rax)
  4083d6:	8b 05 e4 64 c0 ff    	mov    -0x3f9b1c(%rip),%eax        # e8c0 <params>
  4083dc:	d1 e8                	shr    %eax
  4083de:	48 3b 44 24 38       	cmp    0x38(%rsp),%rax
  4083e3:	0f 84 27 01 00 00    	je     408510 <perform_benchmark_st+0x510>
  4083e9:	bd 10 27 00 00       	mov    $0x2710,%ebp
  4083ee:	66 90                	xchg   %ax,%ax
  4083f0:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
  4083f5:	4c 89 e7             	mov    %r12,%rdi
  4083f8:	ff 50 08             	call   *0x8(%rax)
  4083fb:	48 8b 7c 24 20       	mov    0x20(%rsp),%rdi
  408400:	48 89 c3             	mov    %rax,%rbx
  408403:	ff 15 d7 64 c0 ff    	call   *-0x3f9b29(%rip)        # e8e0 <params+0x20>
  408409:	48 c1 e3 0c          	shl    $0xc,%rbx
  40840d:	4c 89 ef             	mov    %r13,%rdi
  408410:	89 c0                	mov    %eax,%eax
  408412:	48 8d 1c 83          	lea    (%rbx,%rax,4),%rbx
  408416:	48 03 5c 24 10       	add    0x10(%rsp),%rbx
  40841b:	e8 60 06 00 00       	call   408a80 <roll_dice>
  408420:	31 d2                	xor    %edx,%edx
  408422:	25 ff 03 00 00       	and    $0x3ff,%eax
  408427:	3b 44 24 1c          	cmp    0x1c(%rsp),%eax
  40842b:	72 0f                	jb     40843c <perform_benchmark_st+0x43c>
  40842d:	83 3d e8 64 c0 ff 01 	cmpl   $0x1,-0x3f9b18(%rip)        # e91c <params+0x5c>
  408434:	ba 01 00 00 00       	mov    $0x1,%edx
  408439:	83 da ff             	sbb    $0xffffffff,%edx
  40843c:	89 d6                	mov    %edx,%esi
  40843e:	48 89 df             	mov    %rbx,%rdi
  408441:	89 14 24             	mov    %edx,(%rsp)
  408444:	41 ff 16             	call   *(%r14)
  408447:	8b 14 24             	mov    (%rsp),%edx
  40844a:	4c 89 ff             	mov    %r15,%rdi
  40844d:	89 c3                	mov    %eax,%ebx
  40844f:	89 c6                	mov    %eax,%esi
  408451:	41 ff 56 08          	call   *0x8(%r14)
  408455:	8b 15 bd 64 c0 ff    	mov    -0x3f9b43(%rip),%edx        # e918 <params+0x58>
  40845b:	85 d2                	test   %edx,%edx
  40845d:	7e 07                	jle    408466 <perform_benchmark_st+0x466>
  40845f:	89 df                	mov    %ebx,%edi
  408461:	e8 6a 06 00 00       	call   408ad0 <mark_long_latency>
  408466:	48 63 0d 8b 64 c0 ff 	movslq -0x3f9b75(%rip),%rcx        # e8f8 <params+0x38>
  40846d:	83 f9 0a             	cmp    $0xa,%ecx
  408470:	0f 8e 1a ff ff ff    	jle    408390 <perform_benchmark_st+0x390>
  408476:	0f 31                	rdtsc  
  408478:	48 c1 e2 20          	shl    $0x20,%rdx
  40847c:	48 89 d6             	mov    %rdx,%rsi
  40847f:	48 09 c6             	or     %rax,%rsi
  408482:	eb 06                	jmp    40848a <perform_benchmark_st+0x48a>
  408484:	0f 1f 40 00          	nopl   0x0(%rax)
  408488:	f3 90                	pause  
  40848a:	0f 31                	rdtsc  
  40848c:	48 c1 e2 20          	shl    $0x20,%rdx
  408490:	48 09 c2             	or     %rax,%rdx
  408493:	48 29 f2             	sub    %rsi,%rdx
  408496:	48 39 ca             	cmp    %rcx,%rdx
  408499:	76 ed                	jbe    408488 <perform_benchmark_st+0x488>
  40849b:	e9 f0 fe ff ff       	jmp    408390 <perform_benchmark_st+0x390>
  4084a0:	48 c7 44 24 48 00 00 	movq   $0x0,0x48(%rsp)
  4084a7:	00 00 
  4084a9:	8b 35 11 64 c0 ff    	mov    -0x3f9bef(%rip),%esi        # e8c0 <params>
  4084af:	48 89 74 24 38       	mov    %rsi,0x38(%rsp)
  4084b4:	e9 b2 fe ff ff       	jmp    40836b <perform_benchmark_st+0x36b>
  4084b9:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
  4084be:	ff 10                	call   *(%rax)
  4084c0:	48 89 c5             	mov    %rax,%rbp
  4084c3:	48 39 44 24 38       	cmp    %rax,0x38(%rsp)
  4084c8:	76 5e                	jbe    408528 <perform_benchmark_st+0x528>
  4084ca:	80 3d f3 63 c0 ff 00 	cmpb   $0x0,-0x3f9c0d(%rip)        # e8c4 <params+0x4>
  4084d1:	0f 85 f8 fe ff ff    	jne    4083cf <perform_benchmark_st+0x3cf>
  4084d7:	48 8d 1d 82 61 c0 ff 	lea    -0x3f9e7e(%rip),%rbx        # e660 <alarms>
  4084de:	48 8b 03             	mov    (%rbx),%rax
  4084e1:	48 83 e8 01          	sub    $0x1,%rax
  4084e5:	48 39 c5             	cmp    %rax,%rbp
  4084e8:	76 11                	jbe    4084fb <perform_benchmark_st+0x4fb>
  4084ea:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
  4084f1:	48 8b 73 10          	mov    0x10(%rbx),%rsi
  4084f5:	48 89 ef             	mov    %rbp,%rdi
  4084f8:	ff 53 08             	call   *0x8(%rbx)
  4084fb:	48 83 c3 18          	add    $0x18,%rbx
  4084ff:	48 8d 05 ba 61 c0 ff 	lea    -0x3f9e46(%rip),%rax        # e6c0 <mem_info_after_unmap>
  408506:	48 39 c3             	cmp    %rax,%rbx
  408509:	75 d3                	jne    4084de <perform_benchmark_st+0x4de>
  40850b:	e9 d9 fe ff ff       	jmp    4083e9 <perform_benchmark_st+0x3e9>
  408510:	48 8d 35 69 62 c0 ff 	lea    -0x3f9d97(%rip),%rsi        # e780 <mem_info_middle_run>
  408517:	48 8d 3d 22 61 c0 ff 	lea    -0x3f9ede(%rip),%rdi        # e640 <mem_ctx>
  40851e:	e8 fd e2 bf ff       	call   6820 <sys_stat_mem_update>
  408523:	e9 c1 fe ff ff       	jmp    4083e9 <perform_benchmark_st+0x3e9>
  408528:	4c 8b 6c 24 08       	mov    0x8(%rsp),%r13
  40852d:	4c 8b 7c 24 28       	mov    0x28(%rsp),%r15
  408532:	41 ff 17             	call   *(%r15)
  408535:	48 89 c3             	mov    %rax,%rbx
  408538:	48 8d 35 e1 61 c0 ff 	lea    -0x3f9e1f(%rip),%rsi        # e720 <mem_info_after_run>
  40853f:	48 8d 3d fa 60 c0 ff 	lea    -0x3f9f06(%rip),%rdi        # e640 <mem_ctx>
  408546:	48 2b 5c 24 48       	sub    0x48(%rsp),%rbx
  40854b:	e8 d0 e2 bf ff       	call   6820 <sys_stat_mem_update>
  408550:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  408555:	41 8b 4f 10          	mov    0x10(%r15),%ecx
  408559:	31 d2                	xor    %edx,%edx
  40855b:	4c 69 44 24 40 10 27 	imul   $0x2710,0x40(%rsp),%r8
  408562:	00 00 
  408564:	66 0f ef c0          	pxor   %xmm0,%xmm0
  408568:	48 89 58 10          	mov    %rbx,0x10(%rax)
  40856c:	4c 89 40 18          	mov    %r8,0x18(%rax)
  408570:	48 69 c3 e8 03 00 00 	imul   $0x3e8,%rbx,%rax
  408577:	48 f7 f1             	div    %rcx
  40857a:	89 c0                	mov    %eax,%eax
  40857c:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
  408581:	4d 85 c0             	test   %r8,%r8
  408584:	78 61                	js     4085e7 <perform_benchmark_st+0x5e7>
  408586:	66 0f ef d2          	pxor   %xmm2,%xmm2
  40858a:	f3 49 0f 2a d0       	cvtsi2ss %r8,%xmm2
  40858f:	0f 28 c8             	movaps %xmm0,%xmm1
  408592:	48 8b 44 24 30       	mov    0x30(%rsp),%rax
  408597:	4c 89 c2             	mov    %r8,%rdx
  40859a:	48 8d 3d e7 02 c0 ff 	lea    -0x3ffd19(%rip),%rdi        # 8888 <_IO_stdin_used+0x888>
  4085a1:	f3 0f 5e ca          	divss  %xmm2,%xmm1
  4085a5:	f3 0f 5e 05 fb 08 c0 	divss  -0x3ff705(%rip),%xmm0        # 8ea8 <args_doc_str.3+0x10>
  4085ac:	ff 
  4085ad:	f3 0f 5a c0          	cvtss2sd %xmm0,%xmm0
  4085b1:	8b 30                	mov    (%rax),%esi
  4085b3:	b8 02 00 00 00       	mov    $0x2,%eax
  4085b8:	f3 0f 5a c9          	cvtss2sd %xmm1,%xmm1
  4085bc:	e8 ef d1 bf ff       	call   57b0 <prn>
  4085c1:	4c 89 e7             	mov    %r12,%rdi
  4085c4:	41 ff 55 18          	call   *0x18(%r13)
  4085c8:	48 8b 44 24 68       	mov    0x68(%rsp),%rax
  4085cd:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  4085d4:	00 00 
  4085d6:	75 24                	jne    4085fc <perform_benchmark_st+0x5fc>
  4085d8:	48 83 c4 78          	add    $0x78,%rsp
  4085dc:	5b                   	pop    %rbx
  4085dd:	5d                   	pop    %rbp
  4085de:	41 5c                	pop    %r12
  4085e0:	41 5d                	pop    %r13
  4085e2:	41 5e                	pop    %r14
  4085e4:	41 5f                	pop    %r15
  4085e6:	c3                   	ret    
  4085e7:	4c 89 c0             	mov    %r8,%rax
  4085ea:	66 0f ef d2          	pxor   %xmm2,%xmm2
  4085ee:	48 d1 e8             	shr    %rax
  4085f1:	f3 48 0f 2a d0       	cvtsi2ss %rax,%xmm2
  4085f6:	f3 0f 58 d2          	addss  %xmm2,%xmm2
  4085fa:	eb 93                	jmp    40858f <perform_benchmark_st+0x58f>
  4085fc:	e8 6f 9f bf ff       	call   2570 <__stack_chk_fail@plt>
  408601:	bf 01 00 00 00       	mov    $0x1,%edi
  408606:	e8 c5 9f bf ff       	call   25d0 <exit@plt>
  40860b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000408610 <uniform_get_number>:
  408610:	f3 0f 1e fa          	endbr64 
  408614:	48 b8 2d 7f 95 4c 2d 	movabs $0x5851f42d4c957f2d,%rax
  40861b:	f4 51 58 
  40861e:	48 0f af 07          	imul   (%rdi),%rax
  408622:	48 ba 4f 81 67 f7 7e 	movabs $0x14057b7ef767814f,%rdx
  408629:	7b 05 14 
  40862c:	48 01 d0             	add    %rdx,%rax
  40862f:	31 d2                	xor    %edx,%edx
  408631:	48 89 07             	mov    %rax,(%rdi)
  408634:	48 c1 e8 21          	shr    $0x21,%rax
  408638:	48 f7 77 08          	divq   0x8(%rdi)
  40863c:	48 89 d0             	mov    %rdx,%rax
  40863f:	c3                   	ret    

0000000000408640 <offset_random>:
  408640:	f3 0f 1e fa          	endbr64 
  408644:	48 b8 2d 7f 95 4c 2d 	movabs $0x5851f42d4c957f2d,%rax
  40864b:	f4 51 58 
  40864e:	48 0f af 07          	imul   (%rdi),%rax
  408652:	48 ba 4f 81 67 f7 7e 	movabs $0x14057b7ef767814f,%rdx
  408659:	7b 05 14 
  40865c:	48 01 d0             	add    %rdx,%rax
  40865f:	48 89 07             	mov    %rax,(%rdi)
  408662:	48 c1 e8 21          	shr    $0x21,%rax
  408666:	c1 e8 15             	shr    $0x15,%eax
  408669:	c3                   	ret    
  40866a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000408670 <offset_constant>:
  408670:	f3 0f 1e fa          	endbr64 
  408674:	8b 07                	mov    (%rdi),%eax
  408676:	c3                   	ret    
  408677:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40867e:	00 00 

0000000000408680 <linear_get_number>:
  408680:	f3 0f 1e fa          	endbr64 
  408684:	4c 8b 07             	mov    (%rdi),%r8
  408687:	48 63 47 14          	movslq 0x14(%rdi),%rax
  40868b:	48 89 c2             	mov    %rax,%rdx
  40868e:	4c 01 c0             	add    %r8,%rax
  408691:	48 89 07             	mov    %rax,(%rdi)
  408694:	48 3b 47 08          	cmp    0x8(%rdi),%rax
  408698:	73 06                	jae    4086a0 <linear_get_number+0x20>
  40869a:	4c 89 c0             	mov    %r8,%rax
  40869d:	c3                   	ret    
  40869e:	66 90                	xchg   %ax,%ax
  4086a0:	8b 47 10             	mov    0x10(%rdi),%eax
  4086a3:	83 c0 01             	add    $0x1,%eax
  4086a6:	39 c2                	cmp    %eax,%edx
  4086a8:	7e 16                	jle    4086c0 <linear_get_number+0x40>
  4086aa:	48 63 d0             	movslq %eax,%rdx
  4086ad:	89 47 10             	mov    %eax,0x10(%rdi)
  4086b0:	4c 89 c0             	mov    %r8,%rax
  4086b3:	48 89 17             	mov    %rdx,(%rdi)
  4086b6:	c3                   	ret    
  4086b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4086be:	00 00 
  4086c0:	31 d2                	xor    %edx,%edx
  4086c2:	31 c0                	xor    %eax,%eax
  4086c4:	eb e7                	jmp    4086ad <linear_get_number+0x2d>
  4086c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  4086cd:	00 00 00 

00000000004086d0 <normal_ih_get_number>:
  4086d0:	f3 0f 1e fa          	endbr64 
  4086d4:	41 57                	push   %r15
  4086d6:	41 56                	push   %r14
  4086d8:	41 55                	push   %r13
  4086da:	41 54                	push   %r12
  4086dc:	49 89 fc             	mov    %rdi,%r12
  4086df:	55                   	push   %rbp
  4086e0:	48 bd 2d 7f 95 4c 2d 	movabs $0x5851f42d4c957f2d,%rbp
  4086e7:	f4 51 58 
  4086ea:	53                   	push   %rbx
  4086eb:	48 8b 47 20          	mov    0x20(%rdi),%rax
  4086ef:	48 bb 4f 81 67 f7 7e 	movabs $0x14057b7ef767814f,%rbx
  4086f6:	7b 05 14 
  4086f9:	8b 77 08             	mov    0x8(%rdi),%esi
  4086fc:	48 8b 0f             	mov    (%rdi),%rcx
  4086ff:	4c 63 7f 18          	movslq 0x18(%rdi),%r15
  408703:	48 89 44 24 f8       	mov    %rax,-0x8(%rsp)
  408708:	41 b9 02 00 00 00    	mov    $0x2,%r9d
  40870e:	45 31 c0             	xor    %r8d,%r8d
  408711:	48 89 c8             	mov    %rcx,%rax
  408714:	48 0f af c5          	imul   %rbp,%rax
  408718:	48 01 d8             	add    %rbx,%rax
  40871b:	49 89 c5             	mov    %rax,%r13
  40871e:	48 c1 e8 21          	shr    $0x21,%rax
  408722:	99                   	cltd   
  408723:	4c 0f af ed          	imul   %rbp,%r13
  408727:	f7 fe                	idiv   %esi
  408729:	49 01 dd             	add    %rbx,%r13
  40872c:	4c 89 ef             	mov    %r13,%rdi
  40872f:	49 c1 ed 21          	shr    $0x21,%r13
  408733:	4c 89 e8             	mov    %r13,%rax
  408736:	48 0f af fd          	imul   %rbp,%rdi
  40873a:	48 01 df             	add    %rbx,%rdi
  40873d:	49 89 fb             	mov    %rdi,%r11
  408740:	48 c1 ef 21          	shr    $0x21,%rdi
  408744:	4c 0f af dd          	imul   %rbp,%r11
  408748:	49 01 db             	add    %rbx,%r11
  40874b:	4d 89 da             	mov    %r11,%r10
  40874e:	49 c1 eb 21          	shr    $0x21,%r11
  408752:	4c 0f af d5          	imul   %rbp,%r10
  408756:	41 89 d6             	mov    %edx,%r14d
  408759:	99                   	cltd   
  40875a:	f7 fe                	idiv   %esi
  40875c:	48 89 f8             	mov    %rdi,%rax
  40875f:	49 01 da             	add    %rbx,%r10
  408762:	4c 89 d1             	mov    %r10,%rcx
  408765:	49 c1 ea 21          	shr    $0x21,%r10
  408769:	48 0f af cd          	imul   %rbp,%rcx
  40876d:	48 01 d9             	add    %rbx,%rcx
  408770:	45 8d 2c 16          	lea    (%r14,%rdx,1),%r13d
  408774:	99                   	cltd   
  408775:	f7 fe                	idiv   %esi
  408777:	4c 89 d8             	mov    %r11,%rax
  40877a:	41 8d 7c 15 00       	lea    0x0(%r13,%rdx,1),%edi
  40877f:	99                   	cltd   
  408780:	f7 fe                	idiv   %esi
  408782:	4c 89 d0             	mov    %r10,%rax
  408785:	01 d7                	add    %edx,%edi
  408787:	99                   	cltd   
  408788:	f7 fe                	idiv   %esi
  40878a:	48 89 c8             	mov    %rcx,%rax
  40878d:	48 c1 e8 21          	shr    $0x21,%rax
  408791:	01 d7                	add    %edx,%edi
  408793:	99                   	cltd   
  408794:	f7 fe                	idiv   %esi
  408796:	01 d7                	add    %edx,%edi
  408798:	48 63 ff             	movslq %edi,%rdi
  40879b:	49 01 f8             	add    %rdi,%r8
  40879e:	41 83 f9 01          	cmp    $0x1,%r9d
  4087a2:	75 34                	jne    4087d8 <normal_ih_get_number+0x108>
  4087a4:	48 b8 ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rax
  4087ab:	aa aa aa 
  4087ae:	49 f7 e0             	mul    %r8
  4087b1:	48 c1 ea 03          	shr    $0x3,%rdx
  4087b5:	49 8d 04 17          	lea    (%r15,%rdx,1),%rax
  4087b9:	48 39 44 24 f8       	cmp    %rax,-0x8(%rsp)
  4087be:	0f 82 44 ff ff ff    	jb     408708 <normal_ih_get_number+0x38>
  4087c4:	5b                   	pop    %rbx
  4087c5:	5d                   	pop    %rbp
  4087c6:	49 89 0c 24          	mov    %rcx,(%r12)
  4087ca:	41 5c                	pop    %r12
  4087cc:	41 5d                	pop    %r13
  4087ce:	41 5e                	pop    %r14
  4087d0:	41 5f                	pop    %r15
  4087d2:	c3                   	ret    
  4087d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4087d8:	41 b9 01 00 00 00    	mov    $0x1,%r9d
  4087de:	e9 2e ff ff ff       	jmp    408711 <normal_ih_get_number+0x41>
  4087e3:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  4087ea:	00 00 00 00 
  4087ee:	66 90                	xchg   %ax,%ax

00000000004087f0 <normal_get_number>:
  4087f0:	f3 0f 1e fa          	endbr64 
  4087f4:	53                   	push   %rbx
  4087f5:	48 c7 c2 ff ff ff ff 	mov    $0xffffffffffffffff,%rdx
  4087fc:	48 89 fb             	mov    %rdi,%rbx
  4087ff:	48 83 ec 20          	sub    $0x20,%rsp
  408803:	48 8b 47 10          	mov    0x10(%rdi),%rax
  408807:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  40880b:	0f 85 3e 01 00 00    	jne    40894f <normal_get_number+0x15f>
  408811:	48 8b 07             	mov    (%rdi),%rax
  408814:	f2 0f 10 25 bc 07 c0 	movsd  -0x3ff844(%rip),%xmm4        # 8fd8 <args_doc_str.3+0x140>
  40881b:	ff 
  40881c:	48 be 2d 7f 95 4c 2d 	movabs $0x5851f42d4c957f2d,%rsi
  408823:	f4 51 58 
  408826:	48 b9 4f 81 67 f7 7e 	movabs $0x14057b7ef767814f,%rcx
  40882d:	7b 05 14 
  408830:	f2 0f 10 05 a8 07 c0 	movsd  -0x3ff858(%rip),%xmm0        # 8fe0 <args_doc_str.3+0x148>
  408837:	ff 
  408838:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40883f:	00 
  408840:	48 0f af c6          	imul   %rsi,%rax
  408844:	66 0f ef c9          	pxor   %xmm1,%xmm1
  408848:	66 0f ef d2          	pxor   %xmm2,%xmm2
  40884c:	48 8d 14 08          	lea    (%rax,%rcx,1),%rdx
  408850:	48 89 d0             	mov    %rdx,%rax
  408853:	48 c1 ea 21          	shr    $0x21,%rdx
  408857:	48 0f af c6          	imul   %rsi,%rax
  40885b:	f2 48 0f 2a ca       	cvtsi2sd %rdx,%xmm1
  408860:	48 01 c8             	add    %rcx,%rax
  408863:	48 89 c2             	mov    %rax,%rdx
  408866:	f2 0f 5e cc          	divsd  %xmm4,%xmm1
  40886a:	48 c1 ea 21          	shr    $0x21,%rdx
  40886e:	f2 48 0f 2a d2       	cvtsi2sd %rdx,%xmm2
  408873:	f2 0f 5e d4          	divsd  %xmm4,%xmm2
  408877:	f2 0f 58 c9          	addsd  %xmm1,%xmm1
  40887b:	f2 0f 5c c8          	subsd  %xmm0,%xmm1
  40887f:	66 0f 28 d9          	movapd %xmm1,%xmm3
  408883:	f2 0f 59 d9          	mulsd  %xmm1,%xmm3
  408887:	f2 0f 58 d2          	addsd  %xmm2,%xmm2
  40888b:	f2 0f 5c d0          	subsd  %xmm0,%xmm2
  40888f:	66 0f 28 ea          	movapd %xmm2,%xmm5
  408893:	f2 0f 59 ea          	mulsd  %xmm2,%xmm5
  408897:	f2 0f 58 dd          	addsd  %xmm5,%xmm3
  40889b:	66 0f 2f d8          	comisd %xmm0,%xmm3
  40889f:	73 9f                	jae    408840 <normal_get_number+0x50>
  4088a1:	48 89 03             	mov    %rax,(%rbx)
  4088a4:	66 0f 28 c3          	movapd %xmm3,%xmm0
  4088a8:	f2 0f 11 54 24 18    	movsd  %xmm2,0x18(%rsp)
  4088ae:	f2 0f 11 4c 24 10    	movsd  %xmm1,0x10(%rsp)
  4088b4:	f2 0f 11 5c 24 08    	movsd  %xmm3,0x8(%rsp)
  4088ba:	e8 21 9c bf ff       	call   24e0 <log@plt>
  4088bf:	f2 0f 59 05 21 07 c0 	mulsd  -0x3ff8df(%rip),%xmm0        # 8fe8 <args_doc_str.3+0x150>
  4088c6:	ff 
  4088c7:	f2 0f 10 5c 24 08    	movsd  0x8(%rsp),%xmm3
  4088cd:	f2 0f 10 4c 24 10    	movsd  0x10(%rsp),%xmm1
  4088d3:	f2 0f 10 54 24 18    	movsd  0x18(%rsp),%xmm2
  4088d9:	f2 0f 5e c3          	divsd  %xmm3,%xmm0
  4088dd:	66 0f ef db          	pxor   %xmm3,%xmm3
  4088e1:	66 0f 2e d8          	ucomisd %xmm0,%xmm3
  4088e5:	0f 87 95 00 00 00    	ja     408980 <normal_get_number+0x190>
  4088eb:	f2 0f 51 c0          	sqrtsd %xmm0,%xmm0
  4088ef:	f2 0f 59 c8          	mulsd  %xmm0,%xmm1
  4088f3:	48 8b 73 08          	mov    0x8(%rbx),%rsi
  4088f7:	66 0f ef e4          	pxor   %xmm4,%xmm4
  4088fb:	f2 0f 10 1d cd 06 c0 	movsd  -0x3ff933(%rip),%xmm3        # 8fd0 <args_doc_str.3+0x138>
  408902:	ff 
  408903:	f2 0f 59 c2          	mulsd  %xmm2,%xmm0
  408907:	66 0f ef d2          	pxor   %xmm2,%xmm2
  40890b:	f2 0f 2a 53 18       	cvtsi2sdl 0x18(%rbx),%xmm2
  408910:	48 89 f1             	mov    %rsi,%rcx
  408913:	48 d1 e9             	shr    %rcx
  408916:	f2 48 0f 2a e1       	cvtsi2sd %rcx,%xmm4
  40891b:	f2 0f 59 ca          	mulsd  %xmm2,%xmm1
  40891f:	f2 0f 58 cc          	addsd  %xmm4,%xmm1
  408923:	66 0f 2f cb          	comisd %xmm3,%xmm1
  408927:	73 47                	jae    408970 <normal_get_number+0x180>
  408929:	f2 48 0f 2c c1       	cvttsd2si %xmm1,%rax
  40892e:	f2 0f 59 d0          	mulsd  %xmm0,%xmm2
  408932:	f2 0f 58 d4          	addsd  %xmm4,%xmm2
  408936:	66 0f 2f d3          	comisd %xmm3,%xmm2
  40893a:	73 24                	jae    408960 <normal_get_number+0x170>
  40893c:	f2 48 0f 2c d2       	cvttsd2si %xmm2,%rdx
  408941:	48 39 c6             	cmp    %rax,%rsi
  408944:	48 0f 46 c1          	cmovbe %rcx,%rax
  408948:	48 39 d6             	cmp    %rdx,%rsi
  40894b:	48 0f 46 d1          	cmovbe %rcx,%rdx
  40894f:	48 89 53 10          	mov    %rdx,0x10(%rbx)
  408953:	48 83 c4 20          	add    $0x20,%rsp
  408957:	5b                   	pop    %rbx
  408958:	c3                   	ret    
  408959:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  408960:	f2 0f 5c d3          	subsd  %xmm3,%xmm2
  408964:	f2 48 0f 2c d2       	cvttsd2si %xmm2,%rdx
  408969:	48 0f ba fa 3f       	btc    $0x3f,%rdx
  40896e:	eb d1                	jmp    408941 <normal_get_number+0x151>
  408970:	f2 0f 5c cb          	subsd  %xmm3,%xmm1
  408974:	f2 48 0f 2c c1       	cvttsd2si %xmm1,%rax
  408979:	48 0f ba f8 3f       	btc    $0x3f,%rax
  40897e:	eb ae                	jmp    40892e <normal_get_number+0x13e>
  408980:	f2 0f 11 54 24 10    	movsd  %xmm2,0x10(%rsp)
  408986:	f2 0f 11 4c 24 08    	movsd  %xmm1,0x8(%rsp)
  40898c:	e8 1f 9b bf ff       	call   24b0 <sqrt@plt>
  408991:	f2 0f 10 54 24 10    	movsd  0x10(%rsp),%xmm2
  408997:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
  40899d:	e9 4d ff ff ff       	jmp    4088ef <normal_get_number+0xff>
  4089a2:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  4089a9:	00 00 00 00 
  4089ad:	0f 1f 00             	nopl   (%rax)

00000000004089b0 <pareto_get_number>:
  4089b0:	f3 0f 1e fa          	endbr64 
  4089b4:	48 83 ec 18          	sub    $0x18,%rsp
  4089b8:	66 0f ef c9          	pxor   %xmm1,%xmm1
  4089bc:	48 b9 2d 7f 95 4c 2d 	movabs $0x5851f42d4c957f2d,%rcx
  4089c3:	f4 51 58 
  4089c6:	48 b8 4f 81 67 f7 7e 	movabs $0x14057b7ef767814f,%rax
  4089cd:	7b 05 14 
  4089d0:	48 0f af 0f          	imul   (%rdi),%rcx
  4089d4:	f2 0f 10 05 04 06 c0 	movsd  -0x3ff9fc(%rip),%xmm0        # 8fe0 <args_doc_str.3+0x148>
  4089db:	ff 
  4089dc:	48 ba 05 00 00 00 02 	movabs $0x200000005,%rdx
  4089e3:	00 00 00 
  4089e6:	f2 0f 10 57 08       	movsd  0x8(%rdi),%xmm2
  4089eb:	48 01 c1             	add    %rax,%rcx
  4089ee:	f2 0f 11 54 24 08    	movsd  %xmm2,0x8(%rsp)
  4089f4:	48 89 0f             	mov    %rcx,(%rdi)
  4089f7:	48 c1 e9 21          	shr    $0x21,%rcx
  4089fb:	48 89 c8             	mov    %rcx,%rax
  4089fe:	48 f7 e2             	mul    %rdx
  408a01:	48 89 c8             	mov    %rcx,%rax
  408a04:	48 29 d0             	sub    %rdx,%rax
  408a07:	48 d1 e8             	shr    %rax
  408a0a:	48 01 c2             	add    %rax,%rdx
  408a0d:	48 c1 ea 1e          	shr    $0x1e,%rdx
  408a11:	48 89 d0             	mov    %rdx,%rax
  408a14:	48 c1 e0 1f          	shl    $0x1f,%rax
  408a18:	48 29 d0             	sub    %rdx,%rax
  408a1b:	48 29 c1             	sub    %rax,%rcx
  408a1e:	f2 48 0f 2a c9       	cvtsi2sd %rcx,%xmm1
  408a23:	f2 0f 5e 0d ad 05 c0 	divsd  -0x3ffa53(%rip),%xmm1        # 8fd8 <args_doc_str.3+0x140>
  408a2a:	ff 
  408a2b:	f2 0f 59 4f 20       	mulsd  0x20(%rdi),%xmm1
  408a30:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
  408a34:	f2 0f 10 4f 28       	movsd  0x28(%rdi),%xmm1
  408a39:	e8 82 9c bf ff       	call   26c0 <pow@plt>
  408a3e:	f2 0f 59 44 24 08    	mulsd  0x8(%rsp),%xmm0
  408a44:	f2 0f 10 0d 84 05 c0 	movsd  -0x3ffa7c(%rip),%xmm1        # 8fd0 <args_doc_str.3+0x138>
  408a4b:	ff 
  408a4c:	66 0f 2f c1          	comisd %xmm1,%xmm0
  408a50:	73 0e                	jae    408a60 <pareto_get_number+0xb0>
  408a52:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
  408a57:	48 83 c4 18          	add    $0x18,%rsp
  408a5b:	48 83 e8 01          	sub    $0x1,%rax
  408a5f:	c3                   	ret    
  408a60:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
  408a64:	48 83 c4 18          	add    $0x18,%rsp
  408a68:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
  408a6d:	48 0f ba f8 3f       	btc    $0x3f,%rax
  408a72:	48 83 e8 01          	sub    $0x1,%rax
  408a76:	c3                   	ret    
  408a77:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  408a7e:	00 00 

0000000000408a80 <roll_dice>:
  408a80:	f3 0f 1e fa          	endbr64 
  408a84:	48 b8 2d 7f 95 4c 2d 	movabs $0x5851f42d4c957f2d,%rax
  408a8b:	f4 51 58 
  408a8e:	48 0f af 07          	imul   (%rdi),%rax
  408a92:	48 ba 4f 81 67 f7 7e 	movabs $0x14057b7ef767814f,%rdx
  408a99:	7b 05 14 
  408a9c:	48 01 d0             	add    %rdx,%rax
  408a9f:	48 89 07             	mov    %rax,(%rdi)
  408aa2:	48 c1 e8 21          	shr    $0x21,%rax
  408aa6:	c3                   	ret    
  408aa7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  408aae:	00 00 

0000000000408ab0 <_ops_rdtsc>:
  408ab0:	f3 0f 1e fa          	endbr64 
  408ab4:	0f 31                	rdtsc  
  408ab6:	48 c1 e2 20          	shl    $0x20,%rdx
  408aba:	48 09 d0             	or     %rdx,%rax
  408abd:	c3                   	ret    
  408abe:	66 90                	xchg   %ax,%ax

0000000000408ac0 <_ops_rdtscp>:
  408ac0:	f3 0f 1e fa          	endbr64 
  408ac4:	0f 01 f9             	rdtscp 
  408ac7:	48 c1 e2 20          	shl    $0x20,%rdx
  408acb:	48 09 d0             	or     %rdx,%rax
  408ace:	c3                   	ret    
  408acf:	90                   	nop

0000000000408ad0 <mark_long_latency>:
  408ad0:	f3 0f 1e fa          	endbr64 
  408ad4:	55                   	push   %rbp
  408ad5:	48 83 ec 50          	sub    $0x50,%rsp
  408ad9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  408ae0:	00 00 
  408ae2:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
  408ae7:	31 c0                	xor    %eax,%eax
  408ae9:	83 3d 20 5a c0 ff ff 	cmpl   $0xffffffff,-0x3fa5e0(%rip)        # e510 <trace_marker_fd>
  408af0:	74 0c                	je     408afe <mark_long_latency+0x2e>
  408af2:	44 8b 05 1f 5e c0 ff 	mov    -0x3fa1e1(%rip),%r8d        # e918 <params+0x58>
  408af9:	41 39 f8             	cmp    %edi,%r8d
  408afc:	76 1a                	jbe    408b18 <mark_long_latency+0x48>
  408afe:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
  408b03:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
  408b0a:	00 00 
  408b0c:	75 4e                	jne    408b5c <mark_long_latency+0x8c>
  408b0e:	48 83 c4 50          	add    $0x50,%rsp
  408b12:	5d                   	pop    %rbp
  408b13:	c3                   	ret    
  408b14:	0f 1f 40 00          	nopl   0x0(%rax)
  408b18:	48 89 e5             	mov    %rsp,%rbp
  408b1b:	41 89 f9             	mov    %edi,%r9d
  408b1e:	ba 40 00 00 00       	mov    $0x40,%edx
  408b23:	be 01 00 00 00       	mov    $0x1,%esi
  408b28:	48 89 ef             	mov    %rbp,%rdi
  408b2b:	48 8d 0d 6d 18 c0 ff 	lea    -0x3fe793(%rip),%rcx        # a39f <args_doc_str.3+0x1507>
  408b32:	e8 29 99 bf ff       	call   2460 <__sprintf_chk@plt>
  408b37:	8b 3d d3 59 c0 ff    	mov    -0x3fa62d(%rip),%edi        # e510 <trace_marker_fd>
  408b3d:	48 89 ee             	mov    %rbp,%rsi
  408b40:	48 63 d0             	movslq %eax,%rdx
  408b43:	e8 e8 98 bf ff       	call   2430 <write@plt>
  408b48:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
  408b4c:	75 b0                	jne    408afe <mark_long_latency+0x2e>
  408b4e:	48 8d 3d 5d 18 c0 ff 	lea    -0x3fe7a3(%rip),%rdi        # a3b2 <args_doc_str.3+0x151a>
  408b55:	e8 96 99 bf ff       	call   24f0 <perror@plt>
  408b5a:	eb a2                	jmp    408afe <mark_long_latency+0x2e>
  408b5c:	e8 0f 9a bf ff       	call   2570 <__stack_chk_fail@plt>
  408b61:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
  408b68:	00 00 00 
  408b6b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000408b70 <record_touch_dummy>:
  408b70:	f3 0f 1e fa          	endbr64 
  408b74:	c3                   	ret    
  408b75:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  408b7c:	00 00 00 00 

0000000000408b80 <record_histogram>:
  408b80:	f3 0f 1e fa          	endbr64 
  408b84:	31 c0                	xor    %eax,%eax
  408b86:	85 d2                	test   %edx,%edx
  408b88:	0f 95 c0             	setne  %al
  408b8b:	48 c1 e0 0b          	shl    $0xb,%rax
  408b8f:	48 01 c7             	add    %rax,%rdi
  408b92:	81 fe ff 00 00 00    	cmp    $0xff,%esi
  408b98:	77 16                	ja     408bb0 <record_histogram+0x30>
  408b9a:	48 8b 07             	mov    (%rdi),%rax
  408b9d:	48 89 fa             	mov    %rdi,%rdx
  408ba0:	48 83 c0 01          	add    $0x1,%rax
  408ba4:	48 89 02             	mov    %rax,(%rdx)
  408ba7:	c3                   	ret    
  408ba8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  408baf:	00 
  408bb0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  408bb5:	0f bd ce             	bsr    %esi,%ecx
  408bb8:	0f 44 c8             	cmove  %eax,%ecx
  408bbb:	8d 41 f9             	lea    -0x7(%rcx),%eax
  408bbe:	83 f8 0f             	cmp    $0xf,%eax
  408bc1:	77 25                	ja     408be8 <record_histogram+0x68>
  408bc3:	0f b3 ce             	btr    %ecx,%esi
  408bc6:	83 e9 04             	sub    $0x4,%ecx
  408bc9:	48 c1 e0 04          	shl    $0x4,%rax
  408bcd:	d3 ee                	shr    %cl,%esi
  408bcf:	48 63 f6             	movslq %esi,%rsi
  408bd2:	48 01 f0             	add    %rsi,%rax
  408bd5:	48 8d 14 c7          	lea    (%rdi,%rax,8),%rdx
  408bd9:	48 8b 04 c7          	mov    (%rdi,%rax,8),%rax
  408bdd:	48 83 c0 01          	add    $0x1,%rax
  408be1:	48 89 02             	mov    %rax,(%rdx)
  408be4:	c3                   	ret    
  408be5:	0f 1f 00             	nopl   (%rax)
  408be8:	83 f8 16             	cmp    $0x16,%eax
  408beb:	76 13                	jbe    408c00 <record_histogram+0x80>
  408bed:	48 8b 47 78          	mov    0x78(%rdi),%rax
  408bf1:	48 8d 57 78          	lea    0x78(%rdi),%rdx
  408bf5:	48 83 c0 01          	add    $0x1,%rax
  408bf9:	48 89 02             	mov    %rax,(%rdx)
  408bfc:	c3                   	ret    
  408bfd:	0f 1f 00             	nopl   (%rax)
  408c00:	8d 41 f1             	lea    -0xf(%rcx),%eax
  408c03:	48 8d 14 c7          	lea    (%rdi,%rax,8),%rdx
  408c07:	48 8b 04 c7          	mov    (%rdi,%rax,8),%rax
  408c0b:	48 83 c0 01          	add    $0x1,%rax
  408c0f:	48 89 02             	mov    %rax,(%rdx)
  408c12:	c3                   	ret    
  408c13:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  408c1a:	00 00 00 00 
  408c1e:	66 90                	xchg   %ax,%ax

0000000000408c20 <measure_read>:
  408c20:	41 54                	push   %r12
  408c22:	49 89 fc             	mov    %rdi,%r12
  408c25:	55                   	push   %rbp
  408c26:	53                   	push   %rbx
  408c27:	e8 e4 cc bf ff       	call   5910 <get_tsops>
  408c2c:	48 89 c3             	mov    %rax,%rbx
  408c2f:	ff 10                	call   *(%rax)
  408c31:	48 89 c5             	mov    %rax,%rbp
  408c34:	41 8b 04 24          	mov    (%r12),%eax
  408c38:	ff 13                	call   *(%rbx)
  408c3a:	48 29 e8             	sub    %rbp,%rax
  408c3d:	8b 4b 10             	mov    0x10(%rbx),%ecx
  408c40:	31 d2                	xor    %edx,%edx
  408c42:	5b                   	pop    %rbx
  408c43:	48 69 c0 40 42 0f 00 	imul   $0xf4240,%rax,%rax
  408c4a:	5d                   	pop    %rbp
  408c4b:	41 5c                	pop    %r12
  408c4d:	48 f7 f1             	div    %rcx
  408c50:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  408c55:	48 89 c6             	mov    %rax,%rsi
  408c58:	48 c1 ee 20          	shr    $0x20,%rsi
  408c5c:	48 0f 45 c2          	cmovne %rdx,%rax
  408c60:	c3                   	ret    
  408c61:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
  408c68:	00 00 00 00 
  408c6c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000408c70 <access_histogram>:
  408c70:	f3 0f 1e fa          	endbr64 
  408c74:	41 54                	push   %r12
  408c76:	55                   	push   %rbp
  408c77:	48 89 fd             	mov    %rdi,%rbp
  408c7a:	53                   	push   %rbx
  408c7b:	83 fe 01             	cmp    $0x1,%esi
  408c7e:	74 10                	je     408c90 <access_histogram+0x20>
  408c80:	83 fe 02             	cmp    $0x2,%esi
  408c83:	74 4b                	je     408cd0 <access_histogram+0x60>
  408c85:	5b                   	pop    %rbx
  408c86:	5d                   	pop    %rbp
  408c87:	41 5c                	pop    %r12
  408c89:	eb 95                	jmp    408c20 <measure_read>
  408c8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  408c90:	e8 7b cc bf ff       	call   5910 <get_tsops>
  408c95:	48 89 c3             	mov    %rax,%rbx
  408c98:	ff 10                	call   *(%rax)
  408c9a:	49 89 c4             	mov    %rax,%r12
  408c9d:	89 6d 00             	mov    %ebp,0x0(%rbp)
  408ca0:	ff 13                	call   *(%rbx)
  408ca2:	4c 29 e0             	sub    %r12,%rax
  408ca5:	8b 4b 10             	mov    0x10(%rbx),%ecx
  408ca8:	31 d2                	xor    %edx,%edx
  408caa:	5b                   	pop    %rbx
  408cab:	48 69 c0 40 42 0f 00 	imul   $0xf4240,%rax,%rax
  408cb2:	5d                   	pop    %rbp
  408cb3:	41 5c                	pop    %r12
  408cb5:	48 f7 f1             	div    %rcx
  408cb8:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  408cbd:	48 89 c1             	mov    %rax,%rcx
  408cc0:	48 c1 e9 20          	shr    $0x20,%rcx
  408cc4:	48 0f 45 c2          	cmovne %rdx,%rax
  408cc8:	c3                   	ret    
  408cc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  408cd0:	e8 3b cc bf ff       	call   5910 <get_tsops>
  408cd5:	48 89 c3             	mov    %rax,%rbx
  408cd8:	ff 10                	call   *(%rax)
  408cda:	49 89 c4             	mov    %rax,%r12
  408cdd:	8b 45 00             	mov    0x0(%rbp),%eax
  408ce0:	89 45 00             	mov    %eax,0x0(%rbp)
  408ce3:	ff 13                	call   *(%rbx)
  408ce5:	4c 29 e0             	sub    %r12,%rax
  408ce8:	8b 4b 10             	mov    0x10(%rbx),%ecx
  408ceb:	31 d2                	xor    %edx,%edx
  408ced:	5b                   	pop    %rbx
  408cee:	48 69 c0 40 42 0f 00 	imul   $0xf4240,%rax,%rax
  408cf5:	5d                   	pop    %rbp
  408cf6:	41 5c                	pop    %r12
  408cf8:	48 f7 f1             	div    %rcx
  408cfb:	48 89 c2             	mov    %rax,%rdx
  408cfe:	48 c1 ea 20          	shr    $0x20,%rdx
  408d02:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  408d07:	48 0f 45 c2          	cmovne %rdx,%rax
  408d0b:	c3                   	ret    

Disassembly of section .init:

0000000000002000 <_init>:
    2000:	f3 0f 1e fa          	endbr64 
    2004:	48 83 ec 08          	sub    $0x8,%rsp
    2008:	48 8b 05 c9 bf 00 00 	mov    0xbfc9(%rip),%rax        # dfd8 <__gmon_start__@Base>
    200f:	48 85 c0             	test   %rax,%rax
    2012:	74 02                	je     2016 <_init+0x16>
    2014:	ff d0                	call   *%rax
    2016:	48 83 c4 08          	add    $0x8,%rsp
    201a:	c3                   	ret    

Disassembly of section .plt:

0000000000002020 <.plt>:
    2020:	ff 35 da bd 00 00    	push   0xbdda(%rip)        # de00 <_GLOBAL_OFFSET_TABLE_+0x8>
    2026:	f2 ff 25 db bd 00 00 	bnd jmp *0xbddb(%rip)        # de08 <_GLOBAL_OFFSET_TABLE_+0x10>
    202d:	0f 1f 00             	nopl   (%rax)
    2030:	f3 0f 1e fa          	endbr64 
    2034:	68 00 00 00 00       	push   $0x0
    2039:	f2 e9 e1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    203f:	90                   	nop
    2040:	f3 0f 1e fa          	endbr64 
    2044:	68 01 00 00 00       	push   $0x1
    2049:	f2 e9 d1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    204f:	90                   	nop
    2050:	f3 0f 1e fa          	endbr64 
    2054:	68 02 00 00 00       	push   $0x2
    2059:	f2 e9 c1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    205f:	90                   	nop
    2060:	f3 0f 1e fa          	endbr64 
    2064:	68 03 00 00 00       	push   $0x3
    2069:	f2 e9 b1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    206f:	90                   	nop
    2070:	f3 0f 1e fa          	endbr64 
    2074:	68 04 00 00 00       	push   $0x4
    2079:	f2 e9 a1 ff ff ff    	bnd jmp 2020 <_init+0x20>
    207f:	90                   	nop
    2080:	f3 0f 1e fa          	endbr64 
    2084:	68 05 00 00 00       	push   $0x5
    2089:	f2 e9 91 ff ff ff    	bnd jmp 2020 <_init+0x20>
    208f:	90                   	nop
    2090:	f3 0f 1e fa          	endbr64 
    2094:	68 06 00 00 00       	push   $0x6
    2099:	f2 e9 81 ff ff ff    	bnd jmp 2020 <_init+0x20>
    209f:	90                   	nop
    20a0:	f3 0f 1e fa          	endbr64 
    20a4:	68 07 00 00 00       	push   $0x7
    20a9:	f2 e9 71 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20af:	90                   	nop
    20b0:	f3 0f 1e fa          	endbr64 
    20b4:	68 08 00 00 00       	push   $0x8
    20b9:	f2 e9 61 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20bf:	90                   	nop
    20c0:	f3 0f 1e fa          	endbr64 
    20c4:	68 09 00 00 00       	push   $0x9
    20c9:	f2 e9 51 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20cf:	90                   	nop
    20d0:	f3 0f 1e fa          	endbr64 
    20d4:	68 0a 00 00 00       	push   $0xa
    20d9:	f2 e9 41 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20df:	90                   	nop
    20e0:	f3 0f 1e fa          	endbr64 
    20e4:	68 0b 00 00 00       	push   $0xb
    20e9:	f2 e9 31 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20ef:	90                   	nop
    20f0:	f3 0f 1e fa          	endbr64 
    20f4:	68 0c 00 00 00       	push   $0xc
    20f9:	f2 e9 21 ff ff ff    	bnd jmp 2020 <_init+0x20>
    20ff:	90                   	nop
    2100:	f3 0f 1e fa          	endbr64 
    2104:	68 0d 00 00 00       	push   $0xd
    2109:	f2 e9 11 ff ff ff    	bnd jmp 2020 <_init+0x20>
    210f:	90                   	nop
    2110:	f3 0f 1e fa          	endbr64 
    2114:	68 0e 00 00 00       	push   $0xe
    2119:	f2 e9 01 ff ff ff    	bnd jmp 2020 <_init+0x20>
    211f:	90                   	nop
    2120:	f3 0f 1e fa          	endbr64 
    2124:	68 0f 00 00 00       	push   $0xf
    2129:	f2 e9 f1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    212f:	90                   	nop
    2130:	f3 0f 1e fa          	endbr64 
    2134:	68 10 00 00 00       	push   $0x10
    2139:	f2 e9 e1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    213f:	90                   	nop
    2140:	f3 0f 1e fa          	endbr64 
    2144:	68 11 00 00 00       	push   $0x11
    2149:	f2 e9 d1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    214f:	90                   	nop
    2150:	f3 0f 1e fa          	endbr64 
    2154:	68 12 00 00 00       	push   $0x12
    2159:	f2 e9 c1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    215f:	90                   	nop
    2160:	f3 0f 1e fa          	endbr64 
    2164:	68 13 00 00 00       	push   $0x13
    2169:	f2 e9 b1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    216f:	90                   	nop
    2170:	f3 0f 1e fa          	endbr64 
    2174:	68 14 00 00 00       	push   $0x14
    2179:	f2 e9 a1 fe ff ff    	bnd jmp 2020 <_init+0x20>
    217f:	90                   	nop
    2180:	f3 0f 1e fa          	endbr64 
    2184:	68 15 00 00 00       	push   $0x15
    2189:	f2 e9 91 fe ff ff    	bnd jmp 2020 <_init+0x20>
    218f:	90                   	nop
    2190:	f3 0f 1e fa          	endbr64 
    2194:	68 16 00 00 00       	push   $0x16
    2199:	f2 e9 81 fe ff ff    	bnd jmp 2020 <_init+0x20>
    219f:	90                   	nop
    21a0:	f3 0f 1e fa          	endbr64 
    21a4:	68 17 00 00 00       	push   $0x17
    21a9:	f2 e9 71 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21af:	90                   	nop
    21b0:	f3 0f 1e fa          	endbr64 
    21b4:	68 18 00 00 00       	push   $0x18
    21b9:	f2 e9 61 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21bf:	90                   	nop
    21c0:	f3 0f 1e fa          	endbr64 
    21c4:	68 19 00 00 00       	push   $0x19
    21c9:	f2 e9 51 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21cf:	90                   	nop
    21d0:	f3 0f 1e fa          	endbr64 
    21d4:	68 1a 00 00 00       	push   $0x1a
    21d9:	f2 e9 41 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21df:	90                   	nop
    21e0:	f3 0f 1e fa          	endbr64 
    21e4:	68 1b 00 00 00       	push   $0x1b
    21e9:	f2 e9 31 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21ef:	90                   	nop
    21f0:	f3 0f 1e fa          	endbr64 
    21f4:	68 1c 00 00 00       	push   $0x1c
    21f9:	f2 e9 21 fe ff ff    	bnd jmp 2020 <_init+0x20>
    21ff:	90                   	nop
    2200:	f3 0f 1e fa          	endbr64 
    2204:	68 1d 00 00 00       	push   $0x1d
    2209:	f2 e9 11 fe ff ff    	bnd jmp 2020 <_init+0x20>
    220f:	90                   	nop
    2210:	f3 0f 1e fa          	endbr64 
    2214:	68 1e 00 00 00       	push   $0x1e
    2219:	f2 e9 01 fe ff ff    	bnd jmp 2020 <_init+0x20>
    221f:	90                   	nop
    2220:	f3 0f 1e fa          	endbr64 
    2224:	68 1f 00 00 00       	push   $0x1f
    2229:	f2 e9 f1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    222f:	90                   	nop
    2230:	f3 0f 1e fa          	endbr64 
    2234:	68 20 00 00 00       	push   $0x20
    2239:	f2 e9 e1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    223f:	90                   	nop
    2240:	f3 0f 1e fa          	endbr64 
    2244:	68 21 00 00 00       	push   $0x21
    2249:	f2 e9 d1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    224f:	90                   	nop
    2250:	f3 0f 1e fa          	endbr64 
    2254:	68 22 00 00 00       	push   $0x22
    2259:	f2 e9 c1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    225f:	90                   	nop
    2260:	f3 0f 1e fa          	endbr64 
    2264:	68 23 00 00 00       	push   $0x23
    2269:	f2 e9 b1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    226f:	90                   	nop
    2270:	f3 0f 1e fa          	endbr64 
    2274:	68 24 00 00 00       	push   $0x24
    2279:	f2 e9 a1 fd ff ff    	bnd jmp 2020 <_init+0x20>
    227f:	90                   	nop
    2280:	f3 0f 1e fa          	endbr64 
    2284:	68 25 00 00 00       	push   $0x25
    2289:	f2 e9 91 fd ff ff    	bnd jmp 2020 <_init+0x20>
    228f:	90                   	nop
    2290:	f3 0f 1e fa          	endbr64 
    2294:	68 26 00 00 00       	push   $0x26
    2299:	f2 e9 81 fd ff ff    	bnd jmp 2020 <_init+0x20>
    229f:	90                   	nop
    22a0:	f3 0f 1e fa          	endbr64 
    22a4:	68 27 00 00 00       	push   $0x27
    22a9:	f2 e9 71 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22af:	90                   	nop
    22b0:	f3 0f 1e fa          	endbr64 
    22b4:	68 28 00 00 00       	push   $0x28
    22b9:	f2 e9 61 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22bf:	90                   	nop
    22c0:	f3 0f 1e fa          	endbr64 
    22c4:	68 29 00 00 00       	push   $0x29
    22c9:	f2 e9 51 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22cf:	90                   	nop
    22d0:	f3 0f 1e fa          	endbr64 
    22d4:	68 2a 00 00 00       	push   $0x2a
    22d9:	f2 e9 41 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22df:	90                   	nop
    22e0:	f3 0f 1e fa          	endbr64 
    22e4:	68 2b 00 00 00       	push   $0x2b
    22e9:	f2 e9 31 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22ef:	90                   	nop
    22f0:	f3 0f 1e fa          	endbr64 
    22f4:	68 2c 00 00 00       	push   $0x2c
    22f9:	f2 e9 21 fd ff ff    	bnd jmp 2020 <_init+0x20>
    22ff:	90                   	nop
    2300:	f3 0f 1e fa          	endbr64 
    2304:	68 2d 00 00 00       	push   $0x2d
    2309:	f2 e9 11 fd ff ff    	bnd jmp 2020 <_init+0x20>
    230f:	90                   	nop
    2310:	f3 0f 1e fa          	endbr64 
    2314:	68 2e 00 00 00       	push   $0x2e
    2319:	f2 e9 01 fd ff ff    	bnd jmp 2020 <_init+0x20>
    231f:	90                   	nop
    2320:	f3 0f 1e fa          	endbr64 
    2324:	68 2f 00 00 00       	push   $0x2f
    2329:	f2 e9 f1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    232f:	90                   	nop
    2330:	f3 0f 1e fa          	endbr64 
    2334:	68 30 00 00 00       	push   $0x30
    2339:	f2 e9 e1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    233f:	90                   	nop
    2340:	f3 0f 1e fa          	endbr64 
    2344:	68 31 00 00 00       	push   $0x31
    2349:	f2 e9 d1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    234f:	90                   	nop
    2350:	f3 0f 1e fa          	endbr64 
    2354:	68 32 00 00 00       	push   $0x32
    2359:	f2 e9 c1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    235f:	90                   	nop
    2360:	f3 0f 1e fa          	endbr64 
    2364:	68 33 00 00 00       	push   $0x33
    2369:	f2 e9 b1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    236f:	90                   	nop
    2370:	f3 0f 1e fa          	endbr64 
    2374:	68 34 00 00 00       	push   $0x34
    2379:	f2 e9 a1 fc ff ff    	bnd jmp 2020 <_init+0x20>
    237f:	90                   	nop
    2380:	f3 0f 1e fa          	endbr64 
    2384:	68 35 00 00 00       	push   $0x35
    2389:	f2 e9 91 fc ff ff    	bnd jmp 2020 <_init+0x20>
    238f:	90                   	nop

Disassembly of section .plt.got:

0000000000002390 <__cxa_finalize@plt>:
    2390:	f3 0f 1e fa          	endbr64 
    2394:	f2 ff 25 25 bc 00 00 	bnd jmp *0xbc25(%rip)        # dfc0 <__cxa_finalize@GLIBC_2.2.5>
    239b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000023a0 <__printf_chk@plt>:
    23a0:	f3 0f 1e fa          	endbr64 
    23a4:	f2 ff 25 65 ba 00 00 	bnd jmp *0xba65(%rip)        # de10 <__printf_chk@GLIBC_2.3.4>
    23ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000023b0 <__errno_location@plt>:
    23b0:	f3 0f 1e fa          	endbr64 
    23b4:	f2 ff 25 5d ba 00 00 	bnd jmp *0xba5d(%rip)        # de18 <__errno_location@GLIBC_2.2.5>
    23bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000023c0 <uname@plt>:
    23c0:	f3 0f 1e fa          	endbr64 
    23c4:	f2 ff 25 55 ba 00 00 	bnd jmp *0xba55(%rip)        # de20 <uname@GLIBC_2.2.5>
    23cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000023d0 <strtoll@plt>:
    23d0:	f3 0f 1e fa          	endbr64 
    23d4:	f2 ff 25 4d ba 00 00 	bnd jmp *0xba4d(%rip)        # de28 <strtoll@GLIBC_2.2.5>
    23db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000023e0 <strstr@plt>:
    23e0:	f3 0f 1e fa          	endbr64 
    23e4:	f2 ff 25 45 ba 00 00 	bnd jmp *0xba45(%rip)        # de30 <strstr@GLIBC_2.2.5>
    23eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000023f0 <argp_parse@plt>:
    23f0:	f3 0f 1e fa          	endbr64 
    23f4:	f2 ff 25 3d ba 00 00 	bnd jmp *0xba3d(%rip)        # de38 <argp_parse@GLIBC_2.2.5>
    23fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002400 <__vfprintf_chk@plt>:
    2400:	f3 0f 1e fa          	endbr64 
    2404:	f2 ff 25 35 ba 00 00 	bnd jmp *0xba35(%rip)        # de40 <__vfprintf_chk@GLIBC_2.3.4>
    240b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002410 <xmlNewChild@plt>:
    2410:	f3 0f 1e fa          	endbr64 
    2414:	f2 ff 25 2d ba 00 00 	bnd jmp *0xba2d(%rip)        # de48 <xmlNewChild@LIBXML2_2.4.30>
    241b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002420 <argp_state_help@plt>:
    2420:	f3 0f 1e fa          	endbr64 
    2424:	f2 ff 25 25 ba 00 00 	bnd jmp *0xba25(%rip)        # de50 <argp_state_help@GLIBC_2.2.5>
    242b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002430 <write@plt>:
    2430:	f3 0f 1e fa          	endbr64 
    2434:	f2 ff 25 1d ba 00 00 	bnd jmp *0xba1d(%rip)        # de58 <write@GLIBC_2.2.5>
    243b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002440 <strchr@plt>:
    2440:	f3 0f 1e fa          	endbr64 
    2444:	f2 ff 25 15 ba 00 00 	bnd jmp *0xba15(%rip)        # de60 <strchr@GLIBC_2.2.5>
    244b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002450 <munmap@plt>:
    2450:	f3 0f 1e fa          	endbr64 
    2454:	f2 ff 25 0d ba 00 00 	bnd jmp *0xba0d(%rip)        # de68 <munmap@GLIBC_2.2.5>
    245b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002460 <__sprintf_chk@plt>:
    2460:	f3 0f 1e fa          	endbr64 
    2464:	f2 ff 25 05 ba 00 00 	bnd jmp *0xba05(%rip)        # de70 <__sprintf_chk@GLIBC_2.3.4>
    246b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002470 <sysconf@plt>:
    2470:	f3 0f 1e fa          	endbr64 
    2474:	f2 ff 25 fd b9 00 00 	bnd jmp *0xb9fd(%rip)        # de78 <sysconf@GLIBC_2.2.5>
    247b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002480 <calloc@plt>:
    2480:	f3 0f 1e fa          	endbr64 
    2484:	f2 ff 25 f5 b9 00 00 	bnd jmp *0xb9f5(%rip)        # de80 <calloc@GLIBC_2.2.5>
    248b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002490 <open@plt>:
    2490:	f3 0f 1e fa          	endbr64 
    2494:	f2 ff 25 ed b9 00 00 	bnd jmp *0xb9ed(%rip)        # de88 <open@GLIBC_2.2.5>
    249b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000024a0 <strtod@plt>:
    24a0:	f3 0f 1e fa          	endbr64 
    24a4:	f2 ff 25 e5 b9 00 00 	bnd jmp *0xb9e5(%rip)        # de90 <strtod@GLIBC_2.2.5>
    24ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000024b0 <sqrt@plt>:
    24b0:	f3 0f 1e fa          	endbr64 
    24b4:	f2 ff 25 dd b9 00 00 	bnd jmp *0xb9dd(%rip)        # de98 <sqrt@GLIBC_2.2.5>
    24bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000024c0 <uuid_generate@plt>:
    24c0:	f3 0f 1e fa          	endbr64 
    24c4:	f2 ff 25 d5 b9 00 00 	bnd jmp *0xb9d5(%rip)        # dea0 <uuid_generate@UUID_1.0>
    24cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000024d0 <xmlStrPrintf@plt>:
    24d0:	f3 0f 1e fa          	endbr64 
    24d4:	f2 ff 25 cd b9 00 00 	bnd jmp *0xb9cd(%rip)        # dea8 <xmlStrPrintf@LIBXML2_2.6.0>
    24db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000024e0 <log@plt>:
    24e0:	f3 0f 1e fa          	endbr64 
    24e4:	f2 ff 25 c5 b9 00 00 	bnd jmp *0xb9c5(%rip)        # deb0 <log@GLIBC_2.29>
    24eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000024f0 <perror@plt>:
    24f0:	f3 0f 1e fa          	endbr64 
    24f4:	f2 ff 25 bd b9 00 00 	bnd jmp *0xb9bd(%rip)        # deb8 <perror@GLIBC_2.2.5>
    24fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002500 <gmtime@plt>:
    2500:	f3 0f 1e fa          	endbr64 
    2504:	f2 ff 25 b5 b9 00 00 	bnd jmp *0xb9b5(%rip)        # dec0 <gmtime@GLIBC_2.2.5>
    250b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002510 <setrlimit@plt>:
    2510:	f3 0f 1e fa          	endbr64 
    2514:	f2 ff 25 ad b9 00 00 	bnd jmp *0xb9ad(%rip)        # dec8 <setrlimit@GLIBC_2.2.5>
    251b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002520 <time@plt>:
    2520:	f3 0f 1e fa          	endbr64 
    2524:	f2 ff 25 a5 b9 00 00 	bnd jmp *0xb9a5(%rip)        # ded0 <time@GLIBC_2.2.5>
    252b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002530 <uuid_unparse@plt>:
    2530:	f3 0f 1e fa          	endbr64 
    2534:	f2 ff 25 9d b9 00 00 	bnd jmp *0xb99d(%rip)        # ded8 <uuid_unparse@UUID_1.0>
    253b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002540 <__isoc99_sscanf@plt>:
    2540:	f3 0f 1e fa          	endbr64 
    2544:	f2 ff 25 95 b9 00 00 	bnd jmp *0xb995(%rip)        # dee0 <__isoc99_sscanf@GLIBC_2.7>
    254b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002550 <raise@plt>:
    2550:	f3 0f 1e fa          	endbr64 
    2554:	f2 ff 25 8d b9 00 00 	bnd jmp *0xb98d(%rip)        # dee8 <raise@GLIBC_2.2.5>
    255b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002560 <xmlKeepBlanksDefault@plt>:
    2560:	f3 0f 1e fa          	endbr64 
    2564:	f2 ff 25 85 b9 00 00 	bnd jmp *0xb985(%rip)        # def0 <xmlKeepBlanksDefault@LIBXML2_2.4.30>
    256b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002570 <__stack_chk_fail@plt>:
    2570:	f3 0f 1e fa          	endbr64 
    2574:	f2 ff 25 7d b9 00 00 	bnd jmp *0xb97d(%rip)        # def8 <__stack_chk_fail@GLIBC_2.4>
    257b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002580 <xmlNewProp@plt>:
    2580:	f3 0f 1e fa          	endbr64 
    2584:	f2 ff 25 75 b9 00 00 	bnd jmp *0xb975(%rip)        # df00 <xmlNewProp@LIBXML2_2.4.30>
    258b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002590 <ctime_r@plt>:
    2590:	f3 0f 1e fa          	endbr64 
    2594:	f2 ff 25 6d b9 00 00 	bnd jmp *0xb96d(%rip)        # df08 <ctime_r@GLIBC_2.2.5>
    259b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000025a0 <fopen@plt>:
    25a0:	f3 0f 1e fa          	endbr64 
    25a4:	f2 ff 25 65 b9 00 00 	bnd jmp *0xb965(%rip)        # df10 <fopen@GLIBC_2.2.5>
    25ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000025b0 <signal@plt>:
    25b0:	f3 0f 1e fa          	endbr64 
    25b4:	f2 ff 25 5d b9 00 00 	bnd jmp *0xb95d(%rip)        # df18 <signal@GLIBC_2.2.5>
    25bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000025c0 <free@plt>:
    25c0:	f3 0f 1e fa          	endbr64 
    25c4:	f2 ff 25 55 b9 00 00 	bnd jmp *0xb955(%rip)        # df20 <free@GLIBC_2.2.5>
    25cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000025d0 <exit@plt>:
    25d0:	f3 0f 1e fa          	endbr64 
    25d4:	f2 ff 25 4d b9 00 00 	bnd jmp *0xb94d(%rip)        # df28 <exit@GLIBC_2.2.5>
    25db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000025e0 <xmlNewDoc@plt>:
    25e0:	f3 0f 1e fa          	endbr64 
    25e4:	f2 ff 25 45 b9 00 00 	bnd jmp *0xb945(%rip)        # df30 <xmlNewDoc@LIBXML2_2.4.30>
    25eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000025f0 <pread@plt>:
    25f0:	f3 0f 1e fa          	endbr64 
    25f4:	f2 ff 25 3d b9 00 00 	bnd jmp *0xb93d(%rip)        # df38 <pread@GLIBC_2.2.5>
    25fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002600 <sigemptyset@plt>:
    2600:	f3 0f 1e fa          	endbr64 
    2604:	f2 ff 25 35 b9 00 00 	bnd jmp *0xb935(%rip)        # df40 <sigemptyset@GLIBC_2.2.5>
    260b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002610 <sigaction@plt>:
    2610:	f3 0f 1e fa          	endbr64 
    2614:	f2 ff 25 2d b9 00 00 	bnd jmp *0xb92d(%rip)        # df48 <sigaction@GLIBC_2.2.5>
    261b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002620 <malloc@plt>:
    2620:	f3 0f 1e fa          	endbr64 
    2624:	f2 ff 25 25 b9 00 00 	bnd jmp *0xb925(%rip)        # df50 <malloc@GLIBC_2.2.5>
    262b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002630 <xmlSaveFormatFileEnc@plt>:
    2630:	f3 0f 1e fa          	endbr64 
    2634:	f2 ff 25 1d b9 00 00 	bnd jmp *0xb91d(%rip)        # df58 <xmlSaveFormatFileEnc@LIBXML2_2.4.30>
    263b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002640 <strtol@plt>:
    2640:	f3 0f 1e fa          	endbr64 
    2644:	f2 ff 25 15 b9 00 00 	bnd jmp *0xb915(%rip)        # df60 <strtol@GLIBC_2.2.5>
    264b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002650 <usleep@plt>:
    2650:	f3 0f 1e fa          	endbr64 
    2654:	f2 ff 25 0d b9 00 00 	bnd jmp *0xb90d(%rip)        # df68 <usleep@GLIBC_2.2.5>
    265b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002660 <xmlCheckVersion@plt>:
    2660:	f3 0f 1e fa          	endbr64 
    2664:	f2 ff 25 05 b9 00 00 	bnd jmp *0xb905(%rip)        # df70 <xmlCheckVersion@LIBXML2_2.4.30>
    266b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002670 <fread@plt>:
    2670:	f3 0f 1e fa          	endbr64 
    2674:	f2 ff 25 fd b8 00 00 	bnd jmp *0xb8fd(%rip)        # df78 <fread@GLIBC_2.2.5>
    267b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002680 <puts@plt>:
    2680:	f3 0f 1e fa          	endbr64 
    2684:	f2 ff 25 f5 b8 00 00 	bnd jmp *0xb8f5(%rip)        # df80 <puts@GLIBC_2.2.5>
    268b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002690 <__fprintf_chk@plt>:
    2690:	f3 0f 1e fa          	endbr64 
    2694:	f2 ff 25 ed b8 00 00 	bnd jmp *0xb8ed(%rip)        # df88 <__fprintf_chk@GLIBC_2.3.4>
    269b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000026a0 <xmlDocSetRootElement@plt>:
    26a0:	f3 0f 1e fa          	endbr64 
    26a4:	f2 ff 25 e5 b8 00 00 	bnd jmp *0xb8e5(%rip)        # df90 <xmlDocSetRootElement@LIBXML2_2.4.30>
    26ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000026b0 <xmlNewDocNode@plt>:
    26b0:	f3 0f 1e fa          	endbr64 
    26b4:	f2 ff 25 dd b8 00 00 	bnd jmp *0xb8dd(%rip)        # df98 <xmlNewDocNode@LIBXML2_2.4.30>
    26bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000026c0 <pow@plt>:
    26c0:	f3 0f 1e fa          	endbr64 
    26c4:	f2 ff 25 d5 b8 00 00 	bnd jmp *0xb8d5(%rip)        # dfa0 <pow@GLIBC_2.29>
    26cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000026d0 <mmap@plt>:
    26d0:	f3 0f 1e fa          	endbr64 
    26d4:	f2 ff 25 cd b8 00 00 	bnd jmp *0xb8cd(%rip)        # dfa8 <mmap@GLIBC_2.2.5>
    26db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000026e0 <strdup@plt>:
    26e0:	f3 0f 1e fa          	endbr64 
    26e4:	f2 ff 25 c5 b8 00 00 	bnd jmp *0xb8c5(%rip)        # dfb0 <strdup@GLIBC_2.2.5>
    26eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000026f0 <close@plt>:
    26f0:	f3 0f 1e fa          	endbr64 
    26f4:	f2 ff 25 bd b8 00 00 	bnd jmp *0xb8bd(%rip)        # dfb8 <close@GLIBC_2.2.5>
    26fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000002700 <parse_opt>:
    2700:	f3 0f 1e fa          	endbr64 
    2704:	41 54                	push   %r12
    2706:	41 89 fc             	mov    %edi,%r12d
    2709:	48 89 d7             	mov    %rdx,%rdi
    270c:	55                   	push   %rbp
    270d:	53                   	push   %rbx
    270e:	48 8b 5a 28          	mov    0x28(%rdx),%rbx
    2712:	41 83 fc 7a          	cmp    $0x7a,%r12d
    2716:	7f 36                	jg     274e <parse_opt+0x4e>
    2718:	48 89 f5             	mov    %rsi,%rbp
    271b:	41 83 fc 60          	cmp    $0x60,%r12d
    271f:	7f 0e                	jg     272f <parse_opt+0x2f>
    2721:	45 85 e4             	test   %r12d,%r12d
    2724:	0f 84 74 02 00 00    	je     299e <parse_opt+0x29e>
    272a:	e9 c3 02 00 00       	jmp    29f2 <parse_opt+0x2f2>
    272f:	41 83 ec 61          	sub    $0x61,%r12d
    2733:	41 83 fc 19          	cmp    $0x19,%r12d
    2737:	0f 87 b5 02 00 00    	ja     29f2 <parse_opt+0x2f2>
    273d:	48 8d 15 5c 66 00 00 	lea    0x665c(%rip),%rdx        # 8da0 <_IO_stdin_used+0xda0>
    2744:	4a 63 04 a2          	movslq (%rdx,%r12,4),%rax
    2748:	48 01 d0             	add    %rdx,%rax
    274b:	3e ff e0             	notrack jmp *%rax
    274e:	41 81 fc 04 00 00 01 	cmp    $0x1000004,%r12d
    2755:	7f 14                	jg     276b <parse_opt+0x6b>
    2757:	41 81 fc 01 00 00 01 	cmp    $0x1000001,%r12d
    275e:	7f 5e                	jg     27be <parse_opt+0xbe>
    2760:	0f 84 6c 02 00 00    	je     29d2 <parse_opt+0x2d2>
    2766:	e9 87 02 00 00       	jmp    29f2 <parse_opt+0x2f2>
    276b:	41 81 fc 07 00 00 01 	cmp    $0x1000007,%r12d
    2772:	74 4a                	je     27be <parse_opt+0xbe>
    2774:	e9 79 02 00 00       	jmp    29f2 <parse_opt+0x2f2>
    2779:	48 85 f6             	test   %rsi,%rsi
    277c:	74 40                	je     27be <parse_opt+0xbe>
    277e:	ba 0a 00 00 00       	mov    $0xa,%edx
    2783:	31 f6                	xor    %esi,%esi
    2785:	48 89 ef             	mov    %rbp,%rdi
    2788:	45 31 e4             	xor    %r12d,%r12d
    278b:	e8 b0 fe ff ff       	call   2640 <strtol@plt>
    2790:	89 43 08             	mov    %eax,0x8(%rbx)
    2793:	e9 60 02 00 00       	jmp    29f8 <parse_opt+0x2f8>
    2798:	48 85 f6             	test   %rsi,%rsi
    279b:	74 21                	je     27be <parse_opt+0xbe>
    279d:	ba 0a 00 00 00       	mov    $0xa,%edx
    27a2:	31 f6                	xor    %esi,%esi
    27a4:	48 89 ef             	mov    %rbp,%rdi
    27a7:	45 31 e4             	xor    %r12d,%r12d
    27aa:	e8 91 fe ff ff       	call   2640 <strtol@plt>
    27af:	89 43 0c             	mov    %eax,0xc(%rbx)
    27b2:	e9 41 02 00 00       	jmp    29f8 <parse_opt+0x2f8>
    27b7:	c7 43 54 01 00 00 00 	movl   $0x1,0x54(%rbx)
    27be:	45 31 e4             	xor    %r12d,%r12d
    27c1:	e9 32 02 00 00       	jmp    29f8 <parse_opt+0x2f8>
    27c6:	48 89 f7             	mov    %rsi,%rdi
    27c9:	e8 a2 34 00 00       	call   5c70 <get_pattern_from_name>
    27ce:	48 89 43 18          	mov    %rax,0x18(%rbx)
    27d2:	48 85 c0             	test   %rax,%rax
    27d5:	75 e7                	jne    27be <parse_opt+0xbe>
    27d7:	48 8d 3d 26 58 00 00 	lea    0x5826(%rip),%rdi        # 8004 <_IO_stdin_used+0x4>
    27de:	41 bc 07 00 00 00    	mov    $0x7,%r12d
    27e4:	e8 97 fe ff ff       	call   2680 <puts@plt>
    27e9:	48 8d 05 b0 bc 00 00 	lea    0xbcb0(%rip),%rax        # e4a0 <uniform_pattern>
    27f0:	48 89 43 18          	mov    %rax,0x18(%rbx)
    27f4:	e9 ff 01 00 00       	jmp    29f8 <parse_opt+0x2f8>
    27f9:	48 89 f7             	mov    %rsi,%rdi
    27fc:	e8 7f 48 00 00       	call   7080 <get_access_from_name>
    2801:	48 89 43 10          	mov    %rax,0x10(%rbx)
    2805:	48 85 c0             	test   %rax,%rax
    2808:	75 b4                	jne    27be <parse_opt+0xbe>
    280a:	48 8d 3d 0e 58 00 00 	lea    0x580e(%rip),%rdi        # 801f <_IO_stdin_used+0x1f>
    2811:	41 bc 07 00 00 00    	mov    $0x7,%r12d
    2817:	e8 64 fe ff ff       	call   2680 <puts@plt>
    281c:	48 8d 05 3d bd 00 00 	lea    0xbd3d(%rip),%rax        # e560 <histogram_access>
    2823:	48 89 43 10          	mov    %rax,0x10(%rbx)
    2827:	e9 cc 01 00 00       	jmp    29f8 <parse_opt+0x2f8>
    282c:	48 89 f7             	mov    %rsi,%rdi
    282f:	e8 dc 3e 00 00       	call   6710 <get_timestamp_from_name>
    2834:	48 89 43 48          	mov    %rax,0x48(%rbx)
    2838:	48 85 c0             	test   %rax,%rax
    283b:	75 81                	jne    27be <parse_opt+0xbe>
    283d:	48 8d 3d f5 57 00 00 	lea    0x57f5(%rip),%rdi        # 8039 <_IO_stdin_used+0x39>
    2844:	41 bc 07 00 00 00    	mov    $0x7,%r12d
    284a:	e8 31 fe ff ff       	call   2680 <puts@plt>
    284f:	48 8d 05 ea bc 00 00 	lea    0xbcea(%rip),%rax        # e540 <rdtsc_ops>
    2856:	48 89 43 48          	mov    %rax,0x48(%rbx)
    285a:	e9 99 01 00 00       	jmp    29f8 <parse_opt+0x2f8>
    285f:	48 85 f6             	test   %rsi,%rsi
    2862:	0f 84 56 ff ff ff    	je     27be <parse_opt+0xbe>
    2868:	ba 0a 00 00 00       	mov    $0xa,%edx
    286d:	31 f6                	xor    %esi,%esi
    286f:	48 89 ef             	mov    %rbp,%rdi
    2872:	45 31 e4             	xor    %r12d,%r12d
    2875:	e8 c6 fd ff ff       	call   2640 <strtol@plt>
    287a:	89 43 38             	mov    %eax,0x38(%rbx)
    287d:	e9 76 01 00 00       	jmp    29f8 <parse_opt+0x2f8>
    2882:	48 85 f6             	test   %rsi,%rsi
    2885:	0f 84 33 ff ff ff    	je     27be <parse_opt+0xbe>
    288b:	31 f6                	xor    %esi,%esi
    288d:	48 89 ef             	mov    %rbp,%rdi
    2890:	45 31 e4             	xor    %r12d,%r12d
    2893:	e8 08 fc ff ff       	call   24a0 <strtod@plt>
    2898:	f2 0f 11 43 30       	movsd  %xmm0,0x30(%rbx)
    289d:	e9 56 01 00 00       	jmp    29f8 <parse_opt+0x2f8>
    28a2:	c7 43 3c 01 00 00 00 	movl   $0x1,0x3c(%rbx)
    28a9:	45 31 e4             	xor    %r12d,%r12d
    28ac:	e9 47 01 00 00       	jmp    29f8 <parse_opt+0x2f8>
    28b1:	c7 43 40 01 00 00 00 	movl   $0x1,0x40(%rbx)
    28b8:	45 31 e4             	xor    %r12d,%r12d
    28bb:	e9 38 01 00 00       	jmp    29f8 <parse_opt+0x2f8>
    28c0:	b8 32 00 00 00       	mov    $0x32,%eax
    28c5:	48 85 f6             	test   %rsi,%rsi
    28c8:	74 0f                	je     28d9 <parse_opt+0x1d9>
    28ca:	ba 0a 00 00 00       	mov    $0xa,%edx
    28cf:	31 f6                	xor    %esi,%esi
    28d1:	48 89 ef             	mov    %rbp,%rdi
    28d4:	e8 67 fd ff ff       	call   2640 <strtol@plt>
    28d9:	89 43 64             	mov    %eax,0x64(%rbx)
    28dc:	83 f8 64             	cmp    $0x64,%eax
    28df:	0f 86 d9 fe ff ff    	jbe    27be <parse_opt+0xbe>
    28e5:	48 8d 3d bc 5b 00 00 	lea    0x5bbc(%rip),%rdi        # 84a8 <_IO_stdin_used+0x4a8>
    28ec:	e8 8f fd ff ff       	call   2680 <puts@plt>
    28f1:	bf 01 00 00 00       	mov    $0x1,%edi
    28f6:	e8 d5 fc ff ff       	call   25d0 <exit@plt>
    28fb:	48 85 f6             	test   %rsi,%rsi
    28fe:	75 0c                	jne    290c <parse_opt+0x20c>
    2900:	c7 43 60 ff ff ff ff 	movl   $0xffffffff,0x60(%rbx)
    2907:	83 cf ff             	or     $0xffffffff,%edi
    290a:	eb 31                	jmp    293d <parse_opt+0x23d>
    290c:	48 89 ef             	mov    %rbp,%rdi
    290f:	ba 0a 00 00 00       	mov    $0xa,%edx
    2914:	31 f6                	xor    %esi,%esi
    2916:	e8 25 fd ff ff       	call   2640 <strtol@plt>
    291b:	89 43 60             	mov    %eax,0x60(%rbx)
    291e:	89 c7                	mov    %eax,%edi
    2920:	3d ff 03 00 00       	cmp    $0x3ff,%eax
    2925:	7e 16                	jle    293d <parse_opt+0x23d>
    2927:	48 8d 3d b2 5b 00 00 	lea    0x5bb2(%rip),%rdi        # 84e0 <_IO_stdin_used+0x4e0>
    292e:	e8 4d fd ff ff       	call   2680 <puts@plt>
    2933:	bf 01 00 00 00       	mov    $0x1,%edi
    2938:	e8 93 fc ff ff       	call   25d0 <exit@plt>
    293d:	e8 ae 33 00 00       	call   5cf0 <get_offset_function>
    2942:	45 31 e4             	xor    %r12d,%r12d
    2945:	48 89 43 20          	mov    %rax,0x20(%rbx)
    2949:	e9 aa 00 00 00       	jmp    29f8 <parse_opt+0x2f8>
    294e:	31 c0                	xor    %eax,%eax
    2950:	48 85 f6             	test   %rsi,%rsi
    2953:	74 0f                	je     2964 <parse_opt+0x264>
    2955:	ba 0a 00 00 00       	mov    $0xa,%edx
    295a:	31 f6                	xor    %esi,%esi
    295c:	48 89 ef             	mov    %rbp,%rdi
    295f:	e8 dc fc ff ff       	call   2640 <strtol@plt>
    2964:	89 43 58             	mov    %eax,0x58(%rbx)
    2967:	45 31 e4             	xor    %r12d,%r12d
    296a:	e9 89 00 00 00       	jmp    29f8 <parse_opt+0x2f8>
    296f:	c7 43 5c 01 00 00 00 	movl   $0x1,0x5c(%rbx)
    2976:	45 31 e4             	xor    %r12d,%r12d
    2979:	eb 7d                	jmp    29f8 <parse_opt+0x2f8>
    297b:	48 85 f6             	test   %rsi,%rsi
    297e:	0f 84 3a fe ff ff    	je     27be <parse_opt+0xbe>
    2984:	48 89 f7             	mov    %rsi,%rdi
    2987:	45 31 e4             	xor    %r12d,%r12d
    298a:	e8 51 fd ff ff       	call   26e0 <strdup@plt>
    298f:	48 89 43 68          	mov    %rax,0x68(%rbx)
    2993:	eb 63                	jmp    29f8 <parse_opt+0x2f8>
    2995:	c6 43 04 01          	movb   $0x1,0x4(%rbx)
    2999:	45 31 e4             	xor    %r12d,%r12d
    299c:	eb 5a                	jmp    29f8 <parse_opt+0x2f8>
    299e:	83 7a 20 00          	cmpl   $0x0,0x20(%rdx)
    29a2:	74 11                	je     29b5 <parse_opt+0x2b5>
    29a4:	48 8b 35 55 bc 00 00 	mov    0xbc55(%rip),%rsi        # e600 <stderr@GLIBC_2.2.5>
    29ab:	ba 06 01 00 00       	mov    $0x106,%edx
    29b0:	e8 6b fa ff ff       	call   2420 <argp_state_help@plt>
    29b5:	b8 01 00 00 00       	mov    $0x1,%eax
    29ba:	48 85 ed             	test   %rbp,%rbp
    29bd:	74 0f                	je     29ce <parse_opt+0x2ce>
    29bf:	ba 0a 00 00 00       	mov    $0xa,%edx
    29c4:	31 f6                	xor    %esi,%esi
    29c6:	48 89 ef             	mov    %rbp,%rdi
    29c9:	e8 72 fc ff ff       	call   2640 <strtol@plt>
    29ce:	89 03                	mov    %eax,(%rbx)
    29d0:	eb 26                	jmp    29f8 <parse_opt+0x2f8>
    29d2:	83 7a 20 00          	cmpl   $0x0,0x20(%rdx)
    29d6:	0f 85 e2 fd ff ff    	jne    27be <parse_opt+0xbe>
    29dc:	48 8b 35 1d bc 00 00 	mov    0xbc1d(%rip),%rsi        # e600 <stderr@GLIBC_2.2.5>
    29e3:	ba 06 01 00 00       	mov    $0x106,%edx
    29e8:	45 31 e4             	xor    %r12d,%r12d
    29eb:	e8 30 fa ff ff       	call   2420 <argp_state_help@plt>
    29f0:	eb 06                	jmp    29f8 <parse_opt+0x2f8>
    29f2:	41 bc 07 00 00 00    	mov    $0x7,%r12d
    29f8:	44 89 e0             	mov    %r12d,%eax
    29fb:	5b                   	pop    %rbx
    29fc:	5d                   	pop    %rbp
    29fd:	41 5c                	pop    %r12
    29ff:	c3                   	ret    

0000000000002a00 <install_ctrlc_handler.isra.0>:
    2a00:	55                   	push   %rbp
    2a01:	48 81 ec 40 01 00 00 	sub    $0x140,%rsp
    2a08:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2a0f:	00 00 
    2a11:	48 89 84 24 38 01 00 	mov    %rax,0x138(%rsp)
    2a18:	00 
    2a19:	31 c0                	xor    %eax,%eax
    2a1b:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    2a20:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
    2a25:	e8 d6 fb ff ff       	call   2600 <sigemptyset@plt>
    2a2a:	48 8d 05 4f 2e 00 00 	lea    0x2e4f(%rip),%rax        # 5880 <sigint_sigaction_entry>
    2a31:	48 89 ee             	mov    %rbp,%rsi
    2a34:	48 8d 94 24 a0 00 00 	lea    0xa0(%rsp),%rdx
    2a3b:	00 
    2a3c:	bf 02 00 00 00       	mov    $0x2,%edi
    2a41:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    2a46:	c7 84 24 90 00 00 00 	movl   $0x4,0x90(%rsp)
    2a4d:	04 00 00 00 
    2a51:	e8 ba fb ff ff       	call   2610 <sigaction@plt>
    2a56:	ff c0                	inc    %eax
    2a58:	75 2b                	jne    2a85 <install_ctrlc_handler.isra.0+0x85>
    2a5a:	48 8d 35 cf 63 00 00 	lea    0x63cf(%rip),%rsi        # 8e30 <__func__.1>
    2a61:	48 8d 3d a8 5a 00 00 	lea    0x5aa8(%rip),%rdi        # 8510 <_IO_stdin_used+0x510>
    2a68:	31 c0                	xor    %eax,%eax
    2a6a:	e8 41 2d 00 00       	call   57b0 <prn>
    2a6f:	48 8d 3d 09 56 00 00 	lea    0x5609(%rip),%rdi        # 807f <_IO_stdin_used+0x7f>
    2a76:	e8 75 fa ff ff       	call   24f0 <perror@plt>
    2a7b:	bf 01 00 00 00       	mov    $0x1,%edi
    2a80:	e8 4b fb ff ff       	call   25d0 <exit@plt>
    2a85:	48 8b 84 24 38 01 00 	mov    0x138(%rsp),%rax
    2a8c:	00 
    2a8d:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    2a94:	00 00 
    2a96:	74 05                	je     2a9d <install_ctrlc_handler.isra.0+0x9d>
    2a98:	e8 d3 fa ff ff       	call   2570 <__stack_chk_fail@plt>
    2a9d:	48 81 c4 40 01 00 00 	add    $0x140,%rsp
    2aa4:	5d                   	pop    %rbp
    2aa5:	c3                   	ret    

0000000000002aa6 <print_con_report>:
    2aa6:	f3 0f 1e fa          	endbr64 
    2aaa:	41 57                	push   %r15
    2aac:	41 56                	push   %r14
    2aae:	41 55                	push   %r13
    2ab0:	41 54                	push   %r12
    2ab2:	55                   	push   %rbp
    2ab3:	53                   	push   %rbx
    2ab4:	48 89 f3             	mov    %rsi,%rbx
    2ab7:	48 83 ec 58          	sub    $0x58,%rsp
    2abb:	48 89 3c 24          	mov    %rdi,(%rsp)
    2abf:	48 8d 3d 72 5a 00 00 	lea    0x5a72(%rip),%rdi        # 8538 <_IO_stdin_used+0x538>
    2ac6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2acd:	00 00 
    2acf:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    2ad4:	31 c0                	xor    %eax,%eax
    2ad6:	e8 a5 fb ff ff       	call   2680 <puts@plt>
    2adb:	31 c0                	xor    %eax,%eax
    2add:	e8 ce 40 00 00       	call   6bb0 <sys_print_pmbench_info>
    2ae2:	31 c0                	xor    %eax,%eax
    2ae4:	e8 e7 40 00 00       	call   6bd0 <sys_print_hostname>
    2ae9:	31 c0                	xor    %eax,%eax
    2aeb:	e8 c0 41 00 00       	call   6cb0 <sys_get_cpu_arch>
    2af0:	bf 04 00 00 00       	mov    $0x4,%edi
    2af5:	48 89 c5             	mov    %rax,%rbp
    2af8:	e8 83 41 00 00       	call   6c80 <sys_get_os_version_string>
    2afd:	31 ff                	xor    %edi,%edi
    2aff:	49 89 c4             	mov    %rax,%r12
    2b02:	e8 79 41 00 00       	call   6c80 <sys_get_os_version_string>
    2b07:	49 89 e8             	mov    %rbp,%r8
    2b0a:	4c 89 e1             	mov    %r12,%rcx
    2b0d:	bf 01 00 00 00       	mov    $0x1,%edi
    2b12:	48 89 c2             	mov    %rax,%rdx
    2b15:	48 8d 35 7a 55 00 00 	lea    0x557a(%rip),%rsi        # 8096 <_IO_stdin_used+0x96>
    2b1c:	31 c0                	xor    %eax,%eax
    2b1e:	e8 7d f8 ff ff       	call   23a0 <__printf_chk@plt>
    2b23:	31 c0                	xor    %eax,%eax
    2b25:	e8 96 41 00 00       	call   6cc0 <sys_print_time_info>
    2b2a:	31 c0                	xor    %eax,%eax
    2b2c:	e8 2f 43 00 00       	call   6e60 <sys_print_uuid>
    2b31:	48 8d 3d 79 55 00 00 	lea    0x5579(%rip),%rdi        # 80b1 <_IO_stdin_used+0xb1>
    2b38:	e8 43 fb ff ff       	call   2680 <puts@plt>
    2b3d:	8b 13                	mov    (%rbx),%edx
    2b3f:	48 8d 35 7c 55 00 00 	lea    0x557c(%rip),%rsi        # 80c2 <_IO_stdin_used+0xc2>
    2b46:	31 c0                	xor    %eax,%eax
    2b48:	bf 01 00 00 00       	mov    $0x1,%edi
    2b4d:	e8 4e f8 ff ff       	call   23a0 <__printf_chk@plt>
    2b52:	8b 53 08             	mov    0x8(%rbx),%edx
    2b55:	bf 01 00 00 00       	mov    $0x1,%edi
    2b5a:	31 c0                	xor    %eax,%eax
    2b5c:	48 8d 35 74 55 00 00 	lea    0x5574(%rip),%rsi        # 80d7 <_IO_stdin_used+0xd7>
    2b63:	e8 38 f8 ff ff       	call   23a0 <__printf_chk@plt>
    2b68:	8b 53 0c             	mov    0xc(%rbx),%edx
    2b6b:	bf 01 00 00 00       	mov    $0x1,%edi
    2b70:	31 c0                	xor    %eax,%eax
    2b72:	48 8d 35 73 55 00 00 	lea    0x5573(%rip),%rsi        # 80ec <_IO_stdin_used+0xec>
    2b79:	e8 22 f8 ff ff       	call   23a0 <__printf_chk@plt>
    2b7e:	8b 53 54             	mov    0x54(%rbx),%edx
    2b81:	bf 01 00 00 00       	mov    $0x1,%edi
    2b86:	31 c0                	xor    %eax,%eax
    2b88:	48 8d 35 72 55 00 00 	lea    0x5572(%rip),%rsi        # 8101 <_IO_stdin_used+0x101>
    2b8f:	e8 0c f8 ff ff       	call   23a0 <__printf_chk@plt>
    2b94:	f2 0f 10 43 30       	movsd  0x30(%rbx),%xmm0
    2b99:	48 8d 35 76 55 00 00 	lea    0x5576(%rip),%rsi        # 8116 <_IO_stdin_used+0x116>
    2ba0:	b0 01                	mov    $0x1,%al
    2ba2:	bf 01 00 00 00       	mov    $0x1,%edi
    2ba7:	e8 f4 f7 ff ff       	call   23a0 <__printf_chk@plt>
    2bac:	8b 53 38             	mov    0x38(%rbx),%edx
    2baf:	bf 01 00 00 00       	mov    $0x1,%edi
    2bb4:	31 c0                	xor    %eax,%eax
    2bb6:	48 8d 35 6e 55 00 00 	lea    0x556e(%rip),%rsi        # 812b <_IO_stdin_used+0x12b>
    2bbd:	e8 de f7 ff ff       	call   23a0 <__printf_chk@plt>
    2bc2:	8b 53 3c             	mov    0x3c(%rbx),%edx
    2bc5:	bf 01 00 00 00       	mov    $0x1,%edi
    2bca:	31 c0                	xor    %eax,%eax
    2bcc:	48 8d 35 6d 55 00 00 	lea    0x556d(%rip),%rsi        # 8140 <_IO_stdin_used+0x140>
    2bd3:	e8 c8 f7 ff ff       	call   23a0 <__printf_chk@plt>
    2bd8:	8b 53 40             	mov    0x40(%rbx),%edx
    2bdb:	31 c0                	xor    %eax,%eax
    2bdd:	bf 01 00 00 00       	mov    $0x1,%edi
    2be2:	48 8d 35 6c 55 00 00 	lea    0x556c(%rip),%rsi        # 8155 <_IO_stdin_used+0x155>
    2be9:	e8 b2 f7 ff ff       	call   23a0 <__printf_chk@plt>
    2bee:	48 8d 35 75 55 00 00 	lea    0x5575(%rip),%rsi        # 816a <_IO_stdin_used+0x16a>
    2bf5:	bf 01 00 00 00       	mov    $0x1,%edi
    2bfa:	31 c0                	xor    %eax,%eax
    2bfc:	e8 9f f7 ff ff       	call   23a0 <__printf_chk@plt>
    2c01:	8b 53 60             	mov    0x60(%rbx),%edx
    2c04:	85 d2                	test   %edx,%edx
    2c06:	79 0e                	jns    2c16 <print_con_report+0x170>
    2c08:	48 8d 3d 6d 55 00 00 	lea    0x556d(%rip),%rdi        # 817c <_IO_stdin_used+0x17c>
    2c0f:	e8 6c fa ff ff       	call   2680 <puts@plt>
    2c14:	eb 13                	jmp    2c29 <print_con_report+0x183>
    2c16:	48 8d 35 49 55 00 00 	lea    0x5549(%rip),%rsi        # 8166 <_IO_stdin_used+0x166>
    2c1d:	bf 01 00 00 00       	mov    $0x1,%edi
    2c22:	31 c0                	xor    %eax,%eax
    2c24:	e8 77 f7 ff ff       	call   23a0 <__printf_chk@plt>
    2c29:	8b 53 64             	mov    0x64(%rbx),%edx
    2c2c:	48 8d 35 50 55 00 00 	lea    0x5550(%rip),%rsi        # 8183 <_IO_stdin_used+0x183>
    2c33:	bf 01 00 00 00       	mov    $0x1,%edi
    2c38:	31 c0                	xor    %eax,%eax
    2c3a:	e8 61 f7 ff ff       	call   23a0 <__printf_chk@plt>
    2c3f:	8b 53 58             	mov    0x58(%rbx),%edx
    2c42:	bf 01 00 00 00       	mov    $0x1,%edi
    2c47:	31 c0                	xor    %eax,%eax
    2c49:	48 8d 35 4a 55 00 00 	lea    0x554a(%rip),%rsi        # 819a <_IO_stdin_used+0x19a>
    2c50:	e8 4b f7 ff ff       	call   23a0 <__printf_chk@plt>
    2c55:	8b 53 5c             	mov    0x5c(%rbx),%edx
    2c58:	bf 01 00 00 00       	mov    $0x1,%edi
    2c5d:	31 c0                	xor    %eax,%eax
    2c5f:	48 8d 35 49 55 00 00 	lea    0x5549(%rip),%rsi        # 81af <_IO_stdin_used+0x1af>
    2c66:	e8 35 f7 ff ff       	call   23a0 <__printf_chk@plt>
    2c6b:	48 8b 43 18          	mov    0x18(%rbx),%rax
    2c6f:	48 85 c0             	test   %rax,%rax
    2c72:	74 1c                	je     2c90 <print_con_report+0x1ea>
    2c74:	48 8b 50 20          	mov    0x20(%rax),%rdx
    2c78:	48 85 d2             	test   %rdx,%rdx
    2c7b:	74 13                	je     2c90 <print_con_report+0x1ea>
    2c7d:	48 8d 35 40 55 00 00 	lea    0x5540(%rip),%rsi        # 81c4 <_IO_stdin_used+0x1c4>
    2c84:	bf 01 00 00 00       	mov    $0x1,%edi
    2c89:	31 c0                	xor    %eax,%eax
    2c8b:	e8 10 f7 ff ff       	call   23a0 <__printf_chk@plt>
    2c90:	48 8b 43 10          	mov    0x10(%rbx),%rax
    2c94:	48 85 c0             	test   %rax,%rax
    2c97:	74 1c                	je     2cb5 <print_con_report+0x20f>
    2c99:	48 8b 50 20          	mov    0x20(%rax),%rdx
    2c9d:	48 85 d2             	test   %rdx,%rdx
    2ca0:	74 13                	je     2cb5 <print_con_report+0x20f>
    2ca2:	48 8d 35 30 55 00 00 	lea    0x5530(%rip),%rsi        # 81d9 <_IO_stdin_used+0x1d9>
    2ca9:	bf 01 00 00 00       	mov    $0x1,%edi
    2cae:	31 c0                	xor    %eax,%eax
    2cb0:	e8 eb f6 ff ff       	call   23a0 <__printf_chk@plt>
    2cb5:	48 8b 43 48          	mov    0x48(%rbx),%rax
    2cb9:	48 85 c0             	test   %rax,%rax
    2cbc:	74 1c                	je     2cda <print_con_report+0x234>
    2cbe:	48 8b 50 18          	mov    0x18(%rax),%rdx
    2cc2:	48 85 d2             	test   %rdx,%rdx
    2cc5:	74 13                	je     2cda <print_con_report+0x234>
    2cc7:	48 8d 35 20 55 00 00 	lea    0x5520(%rip),%rsi        # 81ee <_IO_stdin_used+0x1ee>
    2cce:	bf 01 00 00 00       	mov    $0x1,%edi
    2cd3:	31 c0                	xor    %eax,%eax
    2cd5:	e8 c6 f6 ff ff       	call   23a0 <__printf_chk@plt>
    2cda:	83 3d bf bb 00 00 00 	cmpl   $0x0,0xbbbf(%rip)        # e8a0 <control+0x10>
    2ce1:	74 0c                	je     2cef <print_con_report+0x249>
    2ce3:	48 8d 3d 86 58 00 00 	lea    0x5886(%rip),%rdi        # 8570 <_IO_stdin_used+0x570>
    2cea:	e8 91 f9 ff ff       	call   2680 <puts@plt>
    2cef:	48 8d 3d c2 58 00 00 	lea    0x58c2(%rip),%rdi        # 85b8 <_IO_stdin_used+0x5b8>
    2cf6:	4c 8d 64 24 18       	lea    0x18(%rsp),%r12
    2cfb:	e8 80 f9 ff ff       	call   2680 <puts@plt>
    2d00:	4c 89 e7             	mov    %r12,%rdi
    2d03:	e8 a8 32 00 00       	call   5fb0 <__cpuid_obtain_brand_string>
    2d08:	85 c0                	test   %eax,%eax
    2d0a:	74 18                	je     2d24 <print_con_report+0x27e>
    2d0c:	4c 89 e2             	mov    %r12,%rdx
    2d0f:	48 8d 35 ed 54 00 00 	lea    0x54ed(%rip),%rsi        # 8203 <_IO_stdin_used+0x203>
    2d16:	bf 01 00 00 00       	mov    $0x1,%edi
    2d1b:	31 c0                	xor    %eax,%eax
    2d1d:	e8 7e f6 ff ff       	call   23a0 <__printf_chk@plt>
    2d22:	eb 0c                	jmp    2d30 <print_con_report+0x28a>
    2d24:	48 8d 3d ec 54 00 00 	lea    0x54ec(%rip),%rdi        # 8217 <_IO_stdin_used+0x217>
    2d2b:	e8 50 f9 ff ff       	call   2680 <puts@plt>
    2d30:	8b 15 72 bb 00 00    	mov    0xbb72(%rip),%edx        # e8a8 <freq_khz>
    2d36:	bf 01 00 00 00       	mov    $0x1,%edi
    2d3b:	31 c0                	xor    %eax,%eax
    2d3d:	45 31 e4             	xor    %r12d,%r12d
    2d40:	48 8d 35 a9 58 00 00 	lea    0x58a9(%rip),%rsi        # 85f0 <_IO_stdin_used+0x5f0>
    2d47:	31 ed                	xor    %ebp,%ebp
    2d49:	4c 8d 3d 07 55 00 00 	lea    0x5507(%rip),%r15        # 8257 <_IO_stdin_used+0x257>
    2d50:	e8 4b f6 ff ff       	call   23a0 <__printf_chk@plt>
    2d55:	48 8d 3d d9 54 00 00 	lea    0x54d9(%rip),%rdi        # 8235 <_IO_stdin_used+0x235>
    2d5c:	e8 1f f9 ff ff       	call   2680 <puts@plt>
    2d61:	31 c0                	xor    %eax,%eax
    2d63:	e8 6e 0a 00 00       	call   37d6 <print_tlb_info>
    2d68:	48 8d 3d d6 54 00 00 	lea    0x54d6(%rip),%rdi        # 8245 <_IO_stdin_used+0x245>
    2d6f:	e8 0c f9 ff ff       	call   2680 <puts@plt>
    2d74:	31 c0                	xor    %eax,%eax
    2d76:	e8 a9 0d 00 00       	call   3b24 <print_cache_info>
    2d7b:	48 8d 3d 9e 58 00 00 	lea    0x589e(%rip),%rdi        # 8620 <_IO_stdin_used+0x620>
    2d82:	e8 f9 f8 ff ff       	call   2680 <puts@plt>
    2d87:	8b 0d 83 bb 00 00    	mov    0xbb83(%rip),%ecx        # e910 <params+0x50>
    2d8d:	39 cd                	cmp    %ecx,%ebp
    2d8f:	0f 8d 12 03 00 00    	jge    30a7 <print_con_report+0x601>
    2d95:	4c 8b 35 f4 ba 00 00 	mov    0xbaf4(%rip),%r14        # e890 <control>
    2d9c:	8b 05 06 bb 00 00    	mov    0xbb06(%rip),%eax        # e8a8 <freq_khz>
    2da2:	4d 01 e6             	add    %r12,%r14
    2da5:	f3 48 0f 2a d8       	cvtsi2ss %rax,%xmm3
    2daa:	49 8b 46 10          	mov    0x10(%r14),%rax
    2dae:	48 85 c0             	test   %rax,%rax
    2db1:	78 07                	js     2dba <print_con_report+0x314>
    2db3:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    2db8:	eb 15                	jmp    2dcf <print_con_report+0x329>
    2dba:	48 89 c2             	mov    %rax,%rdx
    2dbd:	83 e0 01             	and    $0x1,%eax
    2dc0:	48 d1 ea             	shr    %rdx
    2dc3:	48 09 c2             	or     %rax,%rdx
    2dc6:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    2dcb:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    2dcf:	49 8b 46 18          	mov    0x18(%r14),%rax
    2dd3:	48 85 c0             	test   %rax,%rax
    2dd6:	78 07                	js     2ddf <print_con_report+0x339>
    2dd8:	f3 48 0f 2a c8       	cvtsi2ss %rax,%xmm1
    2ddd:	eb 15                	jmp    2df4 <print_con_report+0x34e>
    2ddf:	48 89 c2             	mov    %rax,%rdx
    2de2:	83 e0 01             	and    $0x1,%eax
    2de5:	48 d1 ea             	shr    %rdx
    2de8:	48 09 c2             	or     %rax,%rdx
    2deb:	f3 48 0f 2a ca       	cvtsi2ss %rdx,%xmm1
    2df0:	f3 0f 58 c9          	addss  %xmm1,%xmm1
    2df4:	f3 0f 5e c1          	divss  %xmm1,%xmm0
    2df8:	49 8b 46 30          	mov    0x30(%r14),%rax
    2dfc:	f3 0f 59 05 a0 60 00 	mulss  0x60a0(%rip),%xmm0        # 8ea4 <args_doc_str.3+0xc>
    2e03:	00 
    2e04:	f3 0f 5e c3          	divss  %xmm3,%xmm0
    2e08:	48 85 c0             	test   %rax,%rax
    2e0b:	78 07                	js     2e14 <print_con_report+0x36e>
    2e0d:	f3 48 0f 2a c8       	cvtsi2ss %rax,%xmm1
    2e12:	eb 15                	jmp    2e29 <print_con_report+0x383>
    2e14:	48 89 c2             	mov    %rax,%rdx
    2e17:	83 e0 01             	and    $0x1,%eax
    2e1a:	48 d1 ea             	shr    %rdx
    2e1d:	48 09 c2             	or     %rax,%rdx
    2e20:	f3 48 0f 2a ca       	cvtsi2ss %rdx,%xmm1
    2e25:	f3 0f 58 c9          	addss  %xmm1,%xmm1
    2e29:	49 8b 46 38          	mov    0x38(%r14),%rax
    2e2d:	48 85 c0             	test   %rax,%rax
    2e30:	78 07                	js     2e39 <print_con_report+0x393>
    2e32:	f3 48 0f 2a d0       	cvtsi2ss %rax,%xmm2
    2e37:	eb 15                	jmp    2e4e <print_con_report+0x3a8>
    2e39:	48 89 c2             	mov    %rax,%rdx
    2e3c:	83 e0 01             	and    $0x1,%eax
    2e3f:	48 d1 ea             	shr    %rdx
    2e42:	48 09 c2             	or     %rax,%rdx
    2e45:	f3 48 0f 2a d2       	cvtsi2ss %rdx,%xmm2
    2e4a:	f3 0f 58 d2          	addss  %xmm2,%xmm2
    2e4e:	f3 0f 5e ca          	divss  %xmm2,%xmm1
    2e52:	ff c5                	inc    %ebp
    2e54:	4c 89 fe             	mov    %r15,%rsi
    2e57:	bf 01 00 00 00       	mov    $0x1,%edi
    2e5c:	89 ea                	mov    %ebp,%edx
    2e5e:	31 c0                	xor    %eax,%eax
    2e60:	f3 0f 59 0d 3c 60 00 	mulss  0x603c(%rip),%xmm1        # 8ea4 <args_doc_str.3+0xc>
    2e67:	00 
    2e68:	f3 0f 5e cb          	divss  %xmm3,%xmm1
    2e6c:	f3 0f 5c c1          	subss  %xmm1,%xmm0
    2e70:	f3 0f 11 44 24 0c    	movss  %xmm0,0xc(%rsp)
    2e76:	e8 25 f5 ff ff       	call   23a0 <__printf_chk@plt>
    2e7b:	8b 05 27 ba 00 00    	mov    0xba27(%rip),%eax        # e8a8 <freq_khz>
    2e81:	f3 0f 10 44 24 0c    	movss  0xc(%rsp),%xmm0
    2e87:	48 8d 35 ca 57 00 00 	lea    0x57ca(%rip),%rsi        # 8658 <_IO_stdin_used+0x658>
    2e8e:	bf 01 00 00 00       	mov    $0x1,%edi
    2e93:	f3 48 0f 2a c8       	cvtsi2ss %rax,%xmm1
    2e98:	b0 01                	mov    $0x1,%al
    2e9a:	f3 0f 59 c8          	mulss  %xmm0,%xmm1
    2e9e:	f3 0f 5a c0          	cvtss2sd %xmm0,%xmm0
    2ea2:	f3 0f 5e 0d fa 5f 00 	divss  0x5ffa(%rip),%xmm1        # 8ea4 <args_doc_str.3+0xc>
    2ea9:	00 
    2eaa:	f3 0f 2c d1          	cvttss2si %xmm1,%edx
    2eae:	e8 ed f4 ff ff       	call   23a0 <__printf_chk@plt>
    2eb3:	48 8d 3d ac 53 00 00 	lea    0x53ac(%rip),%rdi        # 8266 <_IO_stdin_used+0x266>
    2eba:	e8 c1 f7 ff ff       	call   2680 <puts@plt>
    2ebf:	49 8b 76 10          	mov    0x10(%r14),%rsi
    2ec3:	49 8b 4e 18          	mov    0x18(%r14),%rcx
    2ec7:	31 d2                	xor    %edx,%edx
    2ec9:	48 89 f0             	mov    %rsi,%rax
    2ecc:	48 f7 f1             	div    %rcx
    2ecf:	48 85 f6             	test   %rsi,%rsi
    2ed2:	78 07                	js     2edb <print_con_report+0x435>
    2ed4:	f3 48 0f 2a c6       	cvtsi2ss %rsi,%xmm0
    2ed9:	eb 15                	jmp    2ef0 <print_con_report+0x44a>
    2edb:	48 89 f2             	mov    %rsi,%rdx
    2ede:	83 e6 01             	and    $0x1,%esi
    2ee1:	48 d1 ea             	shr    %rdx
    2ee4:	48 09 f2             	or     %rsi,%rdx
    2ee7:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    2eec:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    2ef0:	48 85 c9             	test   %rcx,%rcx
    2ef3:	78 07                	js     2efc <print_con_report+0x456>
    2ef5:	f3 48 0f 2a c9       	cvtsi2ss %rcx,%xmm1
    2efa:	eb 15                	jmp    2f11 <print_con_report+0x46b>
    2efc:	48 89 ca             	mov    %rcx,%rdx
    2eff:	83 e1 01             	and    $0x1,%ecx
    2f02:	48 d1 ea             	shr    %rdx
    2f05:	48 09 ca             	or     %rcx,%rdx
    2f08:	f3 48 0f 2a ca       	cvtsi2ss %rdx,%xmm1
    2f0d:	f3 0f 58 c9          	addss  %xmm1,%xmm1
    2f11:	f3 0f 5e c1          	divss  %xmm1,%xmm0
    2f15:	8b 15 8d b9 00 00    	mov    0xb98d(%rip),%edx        # e8a8 <freq_khz>
    2f1b:	48 8d 35 76 57 00 00 	lea    0x5776(%rip),%rsi        # 8698 <_IO_stdin_used+0x698>
    2f22:	bf 01 00 00 00       	mov    $0x1,%edi
    2f27:	4c 8d 2d 54 53 00 00 	lea    0x5354(%rip),%r13        # 8282 <_IO_stdin_used+0x282>
    2f2e:	f3 48 0f 2a ca       	cvtsi2ss %rdx,%xmm1
    2f33:	89 c2                	mov    %eax,%edx
    2f35:	b0 01                	mov    $0x1,%al
    2f37:	f3 0f 59 05 65 5f 00 	mulss  0x5f65(%rip),%xmm0        # 8ea4 <args_doc_str.3+0xc>
    2f3e:	00 
    2f3f:	f3 0f 5e c1          	divss  %xmm1,%xmm0
    2f43:	f3 0f 5a c0          	cvtss2sd %xmm0,%xmm0
    2f47:	e8 54 f4 ff ff       	call   23a0 <__printf_chk@plt>
    2f4c:	49 8b 56 18          	mov    0x18(%r14),%rdx
    2f50:	4c 89 ee             	mov    %r13,%rsi
    2f53:	bf 01 00 00 00       	mov    $0x1,%edi
    2f58:	31 c0                	xor    %eax,%eax
    2f5a:	e8 41 f4 ff ff       	call   23a0 <__printf_chk@plt>
    2f5f:	49 8b 76 30          	mov    0x30(%r14),%rsi
    2f63:	49 8b 4e 38          	mov    0x38(%r14),%rcx
    2f67:	31 d2                	xor    %edx,%edx
    2f69:	48 89 f0             	mov    %rsi,%rax
    2f6c:	48 f7 f1             	div    %rcx
    2f6f:	48 85 f6             	test   %rsi,%rsi
    2f72:	78 07                	js     2f7b <print_con_report+0x4d5>
    2f74:	f3 48 0f 2a c6       	cvtsi2ss %rsi,%xmm0
    2f79:	eb 15                	jmp    2f90 <print_con_report+0x4ea>
    2f7b:	48 89 f2             	mov    %rsi,%rdx
    2f7e:	83 e6 01             	and    $0x1,%esi
    2f81:	48 d1 ea             	shr    %rdx
    2f84:	48 09 f2             	or     %rsi,%rdx
    2f87:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    2f8c:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    2f90:	48 85 c9             	test   %rcx,%rcx
    2f93:	78 07                	js     2f9c <print_con_report+0x4f6>
    2f95:	f3 48 0f 2a c9       	cvtsi2ss %rcx,%xmm1
    2f9a:	eb 15                	jmp    2fb1 <print_con_report+0x50b>
    2f9c:	48 89 ca             	mov    %rcx,%rdx
    2f9f:	83 e1 01             	and    $0x1,%ecx
    2fa2:	48 d1 ea             	shr    %rdx
    2fa5:	48 09 ca             	or     %rcx,%rdx
    2fa8:	f3 48 0f 2a ca       	cvtsi2ss %rdx,%xmm1
    2fad:	f3 0f 58 c9          	addss  %xmm1,%xmm1
    2fb1:	f3 0f 5e c1          	divss  %xmm1,%xmm0
    2fb5:	8b 15 ed b8 00 00    	mov    0xb8ed(%rip),%edx        # e8a8 <freq_khz>
    2fbb:	bf 01 00 00 00       	mov    $0x1,%edi
    2fc0:	48 8d 35 11 57 00 00 	lea    0x5711(%rip),%rsi        # 86d8 <_IO_stdin_used+0x6d8>
    2fc7:	f3 48 0f 2a ca       	cvtsi2ss %rdx,%xmm1
    2fcc:	89 c2                	mov    %eax,%edx
    2fce:	b0 01                	mov    $0x1,%al
    2fd0:	f3 0f 59 05 cc 5e 00 	mulss  0x5ecc(%rip),%xmm0        # 8ea4 <args_doc_str.3+0xc>
    2fd7:	00 
    2fd8:	f3 0f 5e c1          	divss  %xmm1,%xmm0
    2fdc:	f3 0f 5a c0          	cvtss2sd %xmm0,%xmm0
    2fe0:	e8 bb f3 ff ff       	call   23a0 <__printf_chk@plt>
    2fe5:	49 8b 56 38          	mov    0x38(%r14),%rdx
    2fe9:	31 c0                	xor    %eax,%eax
    2feb:	4c 89 ee             	mov    %r13,%rsi
    2fee:	bf 01 00 00 00       	mov    $0x1,%edi
    2ff3:	e8 a8 f3 ff ff       	call   23a0 <__printf_chk@plt>
    2ff8:	83 3d 01 b9 00 00 00 	cmpl   $0x0,0xb901(%rip)        # e900 <params+0x40>
    2fff:	0f 85 99 00 00 00    	jne    309e <print_con_report+0x5f8>
    3005:	49 8b 76 20          	mov    0x20(%r14),%rsi
    3009:	49 8b 4e 28          	mov    0x28(%r14),%rcx
    300d:	31 d2                	xor    %edx,%edx
    300f:	48 89 f0             	mov    %rsi,%rax
    3012:	48 f7 f1             	div    %rcx
    3015:	48 85 f6             	test   %rsi,%rsi
    3018:	78 07                	js     3021 <print_con_report+0x57b>
    301a:	f3 48 0f 2a c6       	cvtsi2ss %rsi,%xmm0
    301f:	eb 15                	jmp    3036 <print_con_report+0x590>
    3021:	48 89 f2             	mov    %rsi,%rdx
    3024:	83 e6 01             	and    $0x1,%esi
    3027:	48 d1 ea             	shr    %rdx
    302a:	48 09 f2             	or     %rsi,%rdx
    302d:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    3032:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    3036:	48 85 c9             	test   %rcx,%rcx
    3039:	78 07                	js     3042 <print_con_report+0x59c>
    303b:	f3 48 0f 2a c9       	cvtsi2ss %rcx,%xmm1
    3040:	eb 15                	jmp    3057 <print_con_report+0x5b1>
    3042:	48 89 ca             	mov    %rcx,%rdx
    3045:	83 e1 01             	and    $0x1,%ecx
    3048:	48 d1 ea             	shr    %rdx
    304b:	48 09 ca             	or     %rcx,%rdx
    304e:	f3 48 0f 2a ca       	cvtsi2ss %rdx,%xmm1
    3053:	f3 0f 58 c9          	addss  %xmm1,%xmm1
    3057:	f3 0f 5e c1          	divss  %xmm1,%xmm0
    305b:	8b 15 47 b8 00 00    	mov    0xb847(%rip),%edx        # e8a8 <freq_khz>
    3061:	bf 01 00 00 00       	mov    $0x1,%edi
    3066:	48 8d 35 ab 56 00 00 	lea    0x56ab(%rip),%rsi        # 8718 <_IO_stdin_used+0x718>
    306d:	f3 48 0f 2a ca       	cvtsi2ss %rdx,%xmm1
    3072:	89 c2                	mov    %eax,%edx
    3074:	b0 01                	mov    $0x1,%al
    3076:	f3 0f 59 05 26 5e 00 	mulss  0x5e26(%rip),%xmm0        # 8ea4 <args_doc_str.3+0xc>
    307d:	00 
    307e:	f3 0f 5e c1          	divss  %xmm1,%xmm0
    3082:	f3 0f 5a c0          	cvtss2sd %xmm0,%xmm0
    3086:	e8 15 f3 ff ff       	call   23a0 <__printf_chk@plt>
    308b:	49 8b 56 28          	mov    0x28(%r14),%rdx
    308f:	4c 89 ee             	mov    %r13,%rsi
    3092:	bf 01 00 00 00       	mov    $0x1,%edi
    3097:	31 c0                	xor    %eax,%eax
    3099:	e8 02 f3 ff ff       	call   23a0 <__printf_chk@plt>
    309e:	49 83 c4 48          	add    $0x48,%r12
    30a2:	e9 e0 fc ff ff       	jmp    2d87 <print_con_report+0x2e1>
    30a7:	48 8d 3d aa 56 00 00 	lea    0x56aa(%rip),%rdi        # 8758 <_IO_stdin_used+0x758>
    30ae:	4c 8d 35 8b b7 00 00 	lea    0xb78b(%rip),%r14        # e840 <mem_info_before_warmup>
    30b5:	e8 c6 f5 ff ff       	call   2680 <puts@plt>
    30ba:	48 8b 43 10          	mov    0x10(%rbx),%rax
    30be:	8b 73 64             	mov    0x64(%rbx),%esi
    30c1:	4c 8d 2d e4 51 00 00 	lea    0x51e4(%rip),%r13        # 82ac <_IO_stdin_used+0x2ac>
    30c8:	48 8b 3c 24          	mov    (%rsp),%rdi
    30cc:	48 8d 1d cd 51 00 00 	lea    0x51cd(%rip),%rbx        # 82a0 <_IO_stdin_used+0x2a0>
    30d3:	48 8d 2d a6 b6 00 00 	lea    0xb6a6(%rip),%rbp        # e780 <mem_info_middle_run>
    30da:	ff 50 18             	call   *0x18(%rax)
    30dd:	48 8d 3d ac 56 00 00 	lea    0x56ac(%rip),%rdi        # 8790 <_IO_stdin_used+0x790>
    30e4:	4c 8d 25 35 b6 00 00 	lea    0xb635(%rip),%r12        # e720 <mem_info_after_run>
    30eb:	e8 90 f5 ff ff       	call   2680 <puts@plt>
    30f0:	e8 a3 10 00 00       	call   4198 <sys_stat_mem_print_header>
    30f5:	83 3d 04 b8 00 00 00 	cmpl   $0x0,0xb804(%rip)        # e900 <params+0x40>
    30fc:	74 4a                	je     3148 <print_con_report+0x6a2>
    30fe:	48 89 de             	mov    %rbx,%rsi
    3101:	bf 01 00 00 00       	mov    $0x1,%edi
    3106:	31 c0                	xor    %eax,%eax
    3108:	e8 93 f2 ff ff       	call   23a0 <__printf_chk@plt>
    310d:	4c 89 f7             	mov    %r14,%rdi
    3110:	e8 93 10 00 00       	call   41a8 <sys_stat_mem_print>
    3115:	31 c0                	xor    %eax,%eax
    3117:	4c 89 ee             	mov    %r13,%rsi
    311a:	bf 01 00 00 00       	mov    $0x1,%edi
    311f:	e8 7c f2 ff ff       	call   23a0 <__printf_chk@plt>
    3124:	83 3d 95 b6 00 00 00 	cmpl   $0x0,0xb695(%rip)        # e7c0 <mem_info_middle_run+0x40>
    312b:	74 0b                	je     3138 <print_con_report+0x692>
    312d:	48 89 ee             	mov    %rbp,%rsi
    3130:	4c 89 f7             	mov    %r14,%rdi
    3133:	e9 81 00 00 00       	jmp    31b9 <print_con_report+0x713>
    3138:	4c 89 e6             	mov    %r12,%rsi
    313b:	4c 89 f7             	mov    %r14,%rdi
    313e:	e8 a3 10 00 00       	call   41e6 <sys_stat_mem_print_delta>
    3143:	e9 b8 00 00 00       	jmp    3200 <print_con_report+0x75a>
    3148:	48 8d 35 75 51 00 00 	lea    0x5175(%rip),%rsi        # 82c4 <_IO_stdin_used+0x2c4>
    314f:	bf 01 00 00 00       	mov    $0x1,%edi
    3154:	31 c0                	xor    %eax,%eax
    3156:	e8 45 f2 ff ff       	call   23a0 <__printf_chk@plt>
    315b:	4c 89 f7             	mov    %r14,%rdi
    315e:	4c 8d 3d 7b b6 00 00 	lea    0xb67b(%rip),%r15        # e7e0 <mem_info_before_run>
    3165:	e8 3e 10 00 00       	call   41a8 <sys_stat_mem_print>
    316a:	4c 89 ee             	mov    %r13,%rsi
    316d:	bf 01 00 00 00       	mov    $0x1,%edi
    3172:	31 c0                	xor    %eax,%eax
    3174:	e8 27 f2 ff ff       	call   23a0 <__printf_chk@plt>
    3179:	4c 89 fe             	mov    %r15,%rsi
    317c:	4c 89 f7             	mov    %r14,%rdi
    317f:	e8 62 10 00 00       	call   41e6 <sys_stat_mem_print_delta>
    3184:	48 89 de             	mov    %rbx,%rsi
    3187:	bf 01 00 00 00       	mov    $0x1,%edi
    318c:	31 c0                	xor    %eax,%eax
    318e:	e8 0d f2 ff ff       	call   23a0 <__printf_chk@plt>
    3193:	4c 89 ff             	mov    %r15,%rdi
    3196:	e8 0d 10 00 00       	call   41a8 <sys_stat_mem_print>
    319b:	31 c0                	xor    %eax,%eax
    319d:	4c 89 ee             	mov    %r13,%rsi
    31a0:	bf 01 00 00 00       	mov    $0x1,%edi
    31a5:	e8 f6 f1 ff ff       	call   23a0 <__printf_chk@plt>
    31aa:	83 3d 0f b6 00 00 00 	cmpl   $0x0,0xb60f(%rip)        # e7c0 <mem_info_middle_run+0x40>
    31b1:	74 42                	je     31f5 <print_con_report+0x74f>
    31b3:	48 89 ee             	mov    %rbp,%rsi
    31b6:	4c 89 ff             	mov    %r15,%rdi
    31b9:	e8 28 10 00 00       	call   41e6 <sys_stat_mem_print_delta>
    31be:	48 8d 35 f3 50 00 00 	lea    0x50f3(%rip),%rsi        # 82b8 <_IO_stdin_used+0x2b8>
    31c5:	bf 01 00 00 00       	mov    $0x1,%edi
    31ca:	31 c0                	xor    %eax,%eax
    31cc:	e8 cf f1 ff ff       	call   23a0 <__printf_chk@plt>
    31d1:	48 89 ef             	mov    %rbp,%rdi
    31d4:	e8 cf 0f 00 00       	call   41a8 <sys_stat_mem_print>
    31d9:	4c 89 ee             	mov    %r13,%rsi
    31dc:	bf 01 00 00 00       	mov    $0x1,%edi
    31e1:	31 c0                	xor    %eax,%eax
    31e3:	e8 b8 f1 ff ff       	call   23a0 <__printf_chk@plt>
    31e8:	4c 89 e6             	mov    %r12,%rsi
    31eb:	48 89 ef             	mov    %rbp,%rdi
    31ee:	e8 f3 0f 00 00       	call   41e6 <sys_stat_mem_print_delta>
    31f3:	eb 0b                	jmp    3200 <print_con_report+0x75a>
    31f5:	4c 89 e6             	mov    %r12,%rsi
    31f8:	4c 89 ff             	mov    %r15,%rdi
    31fb:	e8 e6 0f 00 00       	call   41e6 <sys_stat_mem_print_delta>
    3200:	31 c0                	xor    %eax,%eax
    3202:	48 8d 35 c7 50 00 00 	lea    0x50c7(%rip),%rsi        # 82d0 <_IO_stdin_used+0x2d0>
    3209:	bf 01 00 00 00       	mov    $0x1,%edi
    320e:	e8 8d f1 ff ff       	call   23a0 <__printf_chk@plt>
    3213:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    3218:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    321f:	00 00 
    3221:	74 05                	je     3228 <print_con_report+0x782>
    3223:	e8 48 f3 ff ff       	call   2570 <__stack_chk_fail@plt>
    3228:	48 83 c4 58          	add    $0x58,%rsp
    322c:	4c 89 e7             	mov    %r12,%rdi
    322f:	5b                   	pop    %rbx
    3230:	5d                   	pop    %rbp
    3231:	41 5c                	pop    %r12
    3233:	41 5d                	pop    %r13
    3235:	41 5e                	pop    %r14
    3237:	41 5f                	pop    %r15
    3239:	e9 6a 0f 00 00       	jmp    41a8 <sys_stat_mem_print>

000000000000323e <main>:
    323e:	f3 0f 1e fa          	endbr64 
    3242:	41 57                	push   %r15
    3244:	41 56                	push   %r14
    3246:	41 55                	push   %r13
    3248:	49 89 f5             	mov    %rsi,%r13
    324b:	41 54                	push   %r12
    324d:	41 89 fc             	mov    %edi,%r12d
    3250:	83 cf ff             	or     $0xffffffff,%edi
    3253:	55                   	push   %rbp
    3254:	48 8d 2d c5 b2 00 00 	lea    0xb2c5(%rip),%rbp        # e520 <rdtscp_ops>
    325b:	53                   	push   %rbx
    325c:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp
    3263:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    326a:	00 00 
    326c:	48 89 84 24 98 00 00 	mov    %rax,0x98(%rsp)
    3273:	00 
    3274:	31 c0                	xor    %eax,%eax
    3276:	b8 01 00 00 80       	mov    $0x80000001,%eax
    327b:	48 89 2d 86 b6 00 00 	mov    %rbp,0xb686(%rip)        # e908 <params+0x48>
    3282:	c7 05 34 b6 00 00 78 	movl   $0x78,0xb634(%rip)        # e8c0 <params>
    3289:	00 00 00 
    328c:	48 c1 e0 08          	shl    $0x8,%rax
    3290:	48 89 05 31 b6 00 00 	mov    %rax,0xb631(%rip)        # e8c8 <params+0x8>
    3297:	48 8d 05 c2 b2 00 00 	lea    0xb2c2(%rip),%rax        # e560 <histogram_access>
    329e:	48 89 05 2b b6 00 00 	mov    %rax,0xb62b(%rip)        # e8d0 <params+0x10>
    32a5:	48 8d 05 f4 b1 00 00 	lea    0xb1f4(%rip),%rax        # e4a0 <uniform_pattern>
    32ac:	48 89 05 25 b6 00 00 	mov    %rax,0xb625(%rip)        # e8d8 <params+0x18>
    32b3:	48 8b 05 f6 5b 00 00 	mov    0x5bf6(%rip),%rax        # 8eb0 <args_doc_str.3+0x18>
    32ba:	48 c7 05 33 b6 00 00 	movq   $0x0,0xb633(%rip)        # e8f8 <params+0x38>
    32c1:	00 00 00 00 
    32c5:	48 89 05 24 b6 00 00 	mov    %rax,0xb624(%rip)        # e8f0 <params+0x30>
    32cc:	c7 05 2a b6 00 00 00 	movl   $0x0,0xb62a(%rip)        # e900 <params+0x40>
    32d3:	00 00 00 
    32d6:	48 c7 05 2f b6 00 00 	movq   $0x1,0xb62f(%rip)        # e910 <params+0x50>
    32dd:	01 00 00 00 
    32e1:	48 c7 05 2c b6 00 00 	movq   $0x0,0xb62c(%rip)        # e918 <params+0x58>
    32e8:	00 00 00 00 
    32ec:	c7 05 2a b6 00 00 ff 	movl   $0xffffffff,0xb62a(%rip)        # e920 <params+0x60>
    32f3:	ff ff ff 
    32f6:	e8 f5 29 00 00       	call   5cf0 <get_offset_function>
    32fb:	45 31 c0             	xor    %r8d,%r8d
    32fe:	31 c9                	xor    %ecx,%ecx
    3300:	4c 89 ea             	mov    %r13,%rdx
    3303:	48 89 05 d6 b5 00 00 	mov    %rax,0xb5d6(%rip)        # e8e0 <params+0x20>
    330a:	48 8d 05 ff 55 00 00 	lea    0x55ff(%rip),%rax        # 8910 <_IO_stdin_used+0x910>
    3311:	4c 8d 0d a8 b5 00 00 	lea    0xb5a8(%rip),%r9        # e8c0 <params>
    3318:	44 89 e6             	mov    %r12d,%esi
    331b:	48 89 05 fe b2 00 00 	mov    %rax,0xb2fe(%rip)        # e620 <argp_program_version@GLIBC_2.2.5>
    3322:	48 8d 3d f7 ac 00 00 	lea    0xacf7(%rip),%rdi        # e020 <argp.4>
    3329:	48 8d 05 08 56 00 00 	lea    0x5608(%rip),%rax        # 8938 <_IO_stdin_used+0x938>
    3330:	c7 05 ea b5 00 00 32 	movl   $0x32,0xb5ea(%rip)        # e924 <params+0x64>
    3337:	00 00 00 
    333a:	48 c7 05 e3 b5 00 00 	movq   $0x0,0xb5e3(%rip)        # e928 <params+0x68>
    3341:	00 00 00 00 
    3345:	48 89 05 a4 b2 00 00 	mov    %rax,0xb2a4(%rip)        # e5f0 <argp_program_bug_address@GLIBC_2.2.5>
    334c:	e8 9f f0 ff ff       	call   23f0 <argp_parse@plt>
    3351:	80 3d 6c b5 00 00 00 	cmpb   $0x0,0xb56c(%rip)        # e8c4 <params+0x4>
    3358:	75 1f                	jne    3379 <main+0x13b>
    335a:	83 3d 5f b5 00 00 00 	cmpl   $0x0,0xb55f(%rip)        # e8c0 <params>
    3361:	7f 16                	jg     3379 <main+0x13b>
    3363:	48 8d 3d f6 55 00 00 	lea    0x55f6(%rip),%rdi        # 8960 <_IO_stdin_used+0x960>
    336a:	e8 11 f3 ff ff       	call   2680 <puts@plt>
    336f:	bf 01 00 00 00       	mov    $0x1,%edi
    3374:	e8 57 f2 ff ff       	call   25d0 <exit@plt>
    3379:	8b 05 4d b5 00 00    	mov    0xb54d(%rip),%eax        # e8cc <params+0xc>
    337f:	39 05 43 b5 00 00    	cmp    %eax,0xb543(%rip)        # e8c8 <params+0x8>
    3385:	7d 16                	jge    339d <main+0x15f>
    3387:	48 8d 3d 0a 56 00 00 	lea    0x560a(%rip),%rdi        # 8998 <_IO_stdin_used+0x998>
    338e:	e8 ed f2 ff ff       	call   2680 <puts@plt>
    3393:	bf 01 00 00 00       	mov    $0x1,%edi
    3398:	e8 33 f2 ff ff       	call   25d0 <exit@plt>
    339d:	e8 9e 25 00 00       	call   5940 <disable_core_dump>
    33a2:	e8 79 2b 00 00       	call   5f20 <is_tsc_invariant>
    33a7:	85 c0                	test   %eax,%eax
    33a9:	75 0c                	jne    33b7 <main+0x179>
    33ab:	48 8d 3d 1e 56 00 00 	lea    0x561e(%rip),%rdi        # 89d0 <_IO_stdin_used+0x9d0>
    33b2:	e8 f9 23 00 00       	call   57b0 <prn>
    33b7:	48 39 2d 4a b5 00 00 	cmp    %rbp,0xb54a(%rip)        # e908 <params+0x48>
    33be:	75 23                	jne    33e3 <main+0x1a5>
    33c0:	e8 cb 2a 00 00       	call   5e90 <is_rdtscp_available>
    33c5:	85 c0                	test   %eax,%eax
    33c7:	75 1a                	jne    33e3 <main+0x1a5>
    33c9:	48 8d 3d 68 56 00 00 	lea    0x5668(%rip),%rdi        # 8a38 <_IO_stdin_used+0xa38>
    33d0:	e8 db 23 00 00       	call   57b0 <prn>
    33d5:	48 8d 05 64 b1 00 00 	lea    0xb164(%rip),%rax        # e540 <rdtsc_ops>
    33dc:	48 89 05 25 b5 00 00 	mov    %rax,0xb525(%rip)        # e908 <params+0x48>
    33e3:	bf 1e 00 00 00       	mov    $0x1e,%edi
    33e8:	e8 83 f0 ff ff       	call   2470 <sysconf@plt>
    33ed:	48 3d 00 10 00 00    	cmp    $0x1000,%rax
    33f3:	74 19                	je     340e <main+0x1d0>
    33f5:	48 8d 3d 8c 56 00 00 	lea    0x568c(%rip),%rdi        # 8a88 <_IO_stdin_used+0xa88>
    33fc:	31 c0                	xor    %eax,%eax
    33fe:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    3404:	e8 a7 23 00 00       	call   57b0 <prn>
    3409:	e9 0f 03 00 00       	jmp    371d <main+0x4df>
    340e:	48 8d 3d 2b b1 00 00 	lea    0xb12b(%rip),%rdi        # e540 <rdtsc_ops>
    3415:	ff 15 2d b1 00 00    	call   *0xb12d(%rip)        # e548 <rdtsc_ops+0x8>
    341b:	48 89 ef             	mov    %rbp,%rdi
    341e:	ff 15 04 b1 00 00    	call   *0xb104(%rip)        # e528 <rdtscp_ops+0x8>
    3424:	44 8b 35 9d b4 00 00 	mov    0xb49d(%rip),%r14d        # e8c8 <params+0x8>
    342b:	31 d2                	xor    %edx,%edx
    342d:	48 8b 05 d4 b4 00 00 	mov    0xb4d4(%rip),%rax        # e908 <params+0x48>
    3434:	b9 22 00 00 00       	mov    $0x22,%ecx
    3439:	41 c1 e6 08          	shl    $0x8,%r14d
    343d:	83 3d e0 b4 00 00 63 	cmpl   $0x63,0xb4e0(%rip)        # e924 <params+0x64>
    3444:	8b 40 10             	mov    0x10(%rax),%eax
    3447:	4d 63 ee             	movslq %r14d,%r13
    344a:	0f 9e c2             	setle  %dl
    344d:	45 31 c9             	xor    %r9d,%r9d
    3450:	41 83 c8 ff          	or     $0xffffffff,%r8d
    3454:	49 c1 e5 0c          	shl    $0xc,%r13
    3458:	8d 54 12 01          	lea    0x1(%rdx,%rdx,1),%edx
    345c:	31 ff                	xor    %edi,%edi
    345e:	89 05 44 b4 00 00    	mov    %eax,0xb444(%rip)        # e8a8 <freq_khz>
    3464:	4c 89 ee             	mov    %r13,%rsi
    3467:	e8 64 f2 ff ff       	call   26d0 <mmap@plt>
    346c:	49 89 c4             	mov    %rax,%r12
    346f:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    3473:	75 17                	jne    348c <main+0x24e>
    3475:	48 8d 3d 7e 4e 00 00 	lea    0x4e7e(%rip),%rdi        # 82fa <_IO_stdin_used+0x2fa>
    347c:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    3482:	e8 69 f0 ff ff       	call   24f0 <perror@plt>
    3487:	e9 91 02 00 00       	jmp    371d <main+0x4df>
    348c:	8b 35 7e b4 00 00    	mov    0xb47e(%rip),%esi        # e910 <params+0x50>
    3492:	45 31 c9             	xor    %r9d,%r9d
    3495:	41 83 c8 ff          	or     $0xffffffff,%r8d
    3499:	31 ff                	xor    %edi,%edi
    349b:	b9 22 00 00 00       	mov    $0x22,%ecx
    34a0:	ba 03 00 00 00       	mov    $0x3,%edx
    34a5:	c1 e6 0c             	shl    $0xc,%esi
    34a8:	48 63 f6             	movslq %esi,%rsi
    34ab:	e8 20 f2 ff ff       	call   26d0 <mmap@plt>
    34b0:	48 89 c5             	mov    %rax,%rbp
    34b3:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    34b7:	75 17                	jne    34d0 <main+0x292>
    34b9:	48 8d 3d 4a 4e 00 00 	lea    0x4e4a(%rip),%rdi        # 830a <_IO_stdin_used+0x30a>
    34c0:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    34c6:	e8 25 f0 ff ff       	call   24f0 <perror@plt>
    34cb:	e9 4d 02 00 00       	jmp    371d <main+0x4df>
    34d0:	83 3d 3d b4 00 00 00 	cmpl   $0x0,0xb43d(%rip)        # e914 <params+0x54>
    34d7:	0f 84 bb 00 00 00    	je     3598 <main+0x35a>
    34dd:	4d 85 e4             	test   %r12,%r12
    34e0:	75 13                	jne    34f5 <main+0x2b7>
    34e2:	48 8d 3d c7 55 00 00 	lea    0x55c7(%rip),%rdi        # 8ab0 <_IO_stdin_used+0xab0>
    34e9:	31 c0                	xor    %eax,%eax
    34eb:	e8 c0 22 00 00       	call   57b0 <prn>
    34f0:	e9 a3 00 00 00       	jmp    3598 <main+0x35a>
    34f5:	48 8d 3d 20 4e 00 00 	lea    0x4e20(%rip),%rdi        # 831c <_IO_stdin_used+0x31c>
    34fc:	31 c0                	xor    %eax,%eax
    34fe:	e8 ad 22 00 00       	call   57b0 <prn>
    3503:	48 8b 1d fe b3 00 00 	mov    0xb3fe(%rip),%rbx        # e908 <params+0x48>
    350a:	ff 13                	call   *(%rbx)
    350c:	49 89 c7             	mov    %rax,%r15
    350f:	48 b8 0d d0 ef be ed 	movabs $0xddfadedbeefd00d,%rax
    3516:	ad df 0d 
    3519:	4c 89 e6             	mov    %r12,%rsi
    351c:	31 c9                	xor    %ecx,%ecx
    351e:	49 b8 2d 7f 95 4c 2d 	movabs $0x5851f42d4c957f2d,%r8
    3525:	f4 51 58 
    3528:	48 bf 4f 81 67 f7 7e 	movabs $0x14057b7ef767814f,%rdi
    352f:	7b 05 14 
    3532:	41 39 ce             	cmp    %ecx,%r14d
    3535:	74 2c                	je     3563 <main+0x325>
    3537:	31 d2                	xor    %edx,%edx
    3539:	49 0f af c0          	imul   %r8,%rax
    353d:	48 01 f8             	add    %rdi,%rax
    3540:	49 89 c1             	mov    %rax,%r9
    3543:	49 c1 e9 21          	shr    $0x21,%r9
    3547:	44 88 0c 16          	mov    %r9b,(%rsi,%rdx,1)
    354b:	48 83 c2 04          	add    $0x4,%rdx
    354f:	48 81 fa 00 10 00 00 	cmp    $0x1000,%rdx
    3556:	75 e1                	jne    3539 <main+0x2fb>
    3558:	ff c1                	inc    %ecx
    355a:	48 81 c6 00 10 00 00 	add    $0x1000,%rsi
    3561:	eb cf                	jmp    3532 <main+0x2f4>
    3563:	ff 13                	call   *(%rbx)
    3565:	4c 29 f8             	sub    %r15,%rax
    3568:	8b 4b 10             	mov    0x10(%rbx),%ecx
    356b:	31 d2                	xor    %edx,%edx
    356d:	48 8d 3d c4 4d 00 00 	lea    0x4dc4(%rip),%rdi        # 8338 <_IO_stdin_used+0x338>
    3574:	48 69 c0 e8 03 00 00 	imul   $0x3e8,%rax,%rax
    357b:	48 f7 f1             	div    %rcx
    357e:	89 c0                	mov    %eax,%eax
    3580:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    3585:	b0 01                	mov    $0x1,%al
    3587:	f3 0f 5a c0          	cvtss2sd %xmm0,%xmm0
    358b:	f2 0f 5e 05 25 59 00 	divsd  0x5925(%rip),%xmm0        # 8eb8 <args_doc_str.3+0x20>
    3592:	00 
    3593:	e8 18 22 00 00       	call   57b0 <prn>
    3598:	4c 8d 35 a1 b0 00 00 	lea    0xb0a1(%rip),%r14        # e640 <mem_ctx>
    359f:	4c 8d 3d 1a b3 00 00 	lea    0xb31a(%rip),%r15        # e8c0 <params>
    35a6:	4c 89 f7             	mov    %r14,%rdi
    35a9:	e8 e2 31 00 00       	call   6790 <sys_stat_mem_init>
    35ae:	c7 05 e8 b2 00 00 00 	movl   $0x0,0xb2e8(%rip)        # e8a0 <control+0x10>
    35b5:	00 00 00 
    35b8:	e8 43 f4 ff ff       	call   2a00 <install_ctrlc_handler.isra.0>
    35bd:	31 c0                	xor    %eax,%eax
    35bf:	e8 1c 39 00 00       	call   6ee0 <trace_marker_init>
    35c4:	48 89 ee             	mov    %rbp,%rsi
    35c7:	4c 89 e7             	mov    %r12,%rdi
    35ca:	e8 31 4a 40 00       	call   408000 <perform_benchmark_st>
    35cf:	4c 89 fe             	mov    %r15,%rsi
    35d2:	48 89 ef             	mov    %rbp,%rdi
    35d5:	e8 cc f4 ff ff       	call   2aa6 <print_con_report>
    35da:	48 83 3d 46 b3 00 00 	cmpq   $0x0,0xb346(%rip)        # e928 <params+0x68>
    35e1:	00 
    35e2:	74 11                	je     35f5 <main+0x3b7>
    35e4:	8b 15 b6 b2 00 00    	mov    0xb2b6(%rip),%edx        # e8a0 <control+0x10>
    35ea:	4c 89 fe             	mov    %r15,%rsi
    35ed:	48 89 ef             	mov    %rbp,%rdi
    35f0:	e8 9e 13 00 00       	call   4993 <print_xml_report>
    35f5:	48 8b 3d 94 b2 00 00 	mov    0xb294(%rip),%rdi        # e890 <control>
    35fc:	e8 bf ef ff ff       	call   25c0 <free@plt>
    3601:	4c 89 ee             	mov    %r13,%rsi
    3604:	4c 89 e7             	mov    %r12,%rdi
    3607:	e8 44 ee ff ff       	call   2450 <munmap@plt>
    360c:	85 c0                	test   %eax,%eax
    360e:	74 11                	je     3621 <main+0x3e3>
    3610:	48 8d 3d 45 4d 00 00 	lea    0x4d45(%rip),%rdi        # 835c <_IO_stdin_used+0x35c>
    3617:	e8 d4 ee ff ff       	call   24f0 <perror@plt>
    361c:	e9 ee 00 00 00       	jmp    370f <main+0x4d1>
    3621:	8b 35 e9 b2 00 00    	mov    0xb2e9(%rip),%esi        # e910 <params+0x50>
    3627:	48 89 ef             	mov    %rbp,%rdi
    362a:	c1 e6 0c             	shl    $0xc,%esi
    362d:	48 63 f6             	movslq %esi,%rsi
    3630:	e8 1b ee ff ff       	call   2450 <munmap@plt>
    3635:	41 89 c4             	mov    %eax,%r12d
    3638:	85 c0                	test   %eax,%eax
    363a:	74 11                	je     364d <main+0x40f>
    363c:	48 8d 3d 13 4d 00 00 	lea    0x4d13(%rip),%rdi        # 8356 <_IO_stdin_used+0x356>
    3643:	e8 a8 ee ff ff       	call   24f0 <perror@plt>
    3648:	e9 c2 00 00 00       	jmp    370f <main+0x4d1>
    364d:	48 8d 2d 6c b0 00 00 	lea    0xb06c(%rip),%rbp        # e6c0 <mem_info_after_unmap>
    3654:	4c 89 f7             	mov    %r14,%rdi
    3657:	48 89 ee             	mov    %rbp,%rsi
    365a:	e8 c1 31 00 00       	call   6820 <sys_stat_mem_update>
    365f:	48 8d 35 46 4c 00 00 	lea    0x4c46(%rip),%rsi        # 82ac <_IO_stdin_used+0x2ac>
    3666:	bf 01 00 00 00       	mov    $0x1,%edi
    366b:	31 c0                	xor    %eax,%eax
    366d:	e8 2e ed ff ff       	call   23a0 <__printf_chk@plt>
    3672:	48 89 ee             	mov    %rbp,%rsi
    3675:	48 8d 3d a4 b0 00 00 	lea    0xb0a4(%rip),%rdi        # e720 <mem_info_after_run>
    367c:	e8 65 0b 00 00       	call   41e6 <sys_stat_mem_print_delta>
    3681:	48 8d 35 e2 4c 00 00 	lea    0x4ce2(%rip),%rsi        # 836a <_IO_stdin_used+0x36a>
    3688:	bf 01 00 00 00       	mov    $0x1,%edi
    368d:	31 c0                	xor    %eax,%eax
    368f:	e8 0c ed ff ff       	call   23a0 <__printf_chk@plt>
    3694:	48 89 ef             	mov    %rbp,%rdi
    3697:	e8 0c 0b 00 00       	call   41a8 <sys_stat_mem_print>
    369c:	48 8b 3d 85 b2 00 00 	mov    0xb285(%rip),%rdi        # e928 <params+0x68>
    36a3:	48 85 ff             	test   %rdi,%rdi
    36a6:	74 05                	je     36ad <main+0x46f>
    36a8:	e8 00 1f 00 00       	call   55ad <print_xml_report_post_unmap>
    36ad:	4c 89 f7             	mov    %r14,%rdi
    36b0:	48 89 e5             	mov    %rsp,%rbp
    36b3:	e8 68 33 00 00       	call   6a20 <sys_stat_mem_exit>
    36b8:	31 c0                	xor    %eax,%eax
    36ba:	e8 71 38 00 00       	call   6f30 <trace_marker_exit>
    36bf:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    36c4:	e8 37 ef ff ff       	call   2600 <sigemptyset@plt>
    36c9:	31 d2                	xor    %edx,%edx
    36cb:	48 89 ee             	mov    %rbp,%rsi
    36ce:	bf 02 00 00 00       	mov    $0x2,%edi
    36d3:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    36da:	00 
    36db:	e8 30 ef ff ff       	call   2610 <sigaction@plt>
    36e0:	ff c0                	inc    %eax
    36e2:	75 39                	jne    371d <main+0x4df>
    36e4:	48 8d 35 25 57 00 00 	lea    0x5725(%rip),%rsi        # 8e10 <__func__.0>
    36eb:	48 8d 3d 16 54 00 00 	lea    0x5416(%rip),%rdi        # 8b08 <_IO_stdin_used+0xb08>
    36f2:	31 c0                	xor    %eax,%eax
    36f4:	e8 b7 20 00 00       	call   57b0 <prn>
    36f9:	48 8d 3d 7f 49 00 00 	lea    0x497f(%rip),%rdi        # 807f <_IO_stdin_used+0x7f>
    3700:	e8 eb ed ff ff       	call   24f0 <perror@plt>
    3705:	bf 01 00 00 00       	mov    $0x1,%edi
    370a:	e8 c1 ee ff ff       	call   25d0 <exit@plt>
    370f:	4c 89 f7             	mov    %r14,%rdi
    3712:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    3718:	e8 03 33 00 00       	call   6a20 <sys_stat_mem_exit>
    371d:	48 8b 84 24 98 00 00 	mov    0x98(%rsp),%rax
    3724:	00 
    3725:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    372c:	00 00 
    372e:	74 05                	je     3735 <main+0x4f7>
    3730:	e8 3b ee ff ff       	call   2570 <__stack_chk_fail@plt>
    3735:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp
    373c:	44 89 e0             	mov    %r12d,%eax
    373f:	5b                   	pop    %rbx
    3740:	5d                   	pop    %rbp
    3741:	41 5c                	pop    %r12
    3743:	41 5d                	pop    %r13
    3745:	41 5e                	pop    %r14
    3747:	41 5f                	pop    %r15
    3749:	c3                   	ret    

000000000000374a <__cpuid_cache_tlb_info>:
    374a:	53                   	push   %rbx
    374b:	49 89 f8             	mov    %rdi,%r8
    374e:	31 c9                	xor    %ecx,%ecx
    3750:	48 83 ec 20          	sub    $0x20,%rsp
    3754:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    375b:	00 00 
    375d:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    3762:	b8 02 00 00 00       	mov    $0x2,%eax
    3767:	0f a2                	cpuid  
    3769:	89 44 24 08          	mov    %eax,0x8(%rsp)
    376d:	0f b6 f0             	movzbl %al,%esi
    3770:	89 5c 24 0c          	mov    %ebx,0xc(%rsp)
    3774:	89 4c 24 10          	mov    %ecx,0x10(%rsp)
    3778:	89 54 24 14          	mov    %edx,0x14(%rsp)
    377c:	b8 01 00 00 00       	mov    $0x1,%eax
    3781:	8a 54 04 08          	mov    0x8(%rsp,%rax,1),%dl
    3785:	84 d2                	test   %dl,%dl
    3787:	74 05                	je     378e <__cpuid_cache_tlb_info+0x44>
    3789:	88 17                	mov    %dl,(%rdi)
    378b:	48 ff c7             	inc    %rdi
    378e:	48 ff c0             	inc    %rax
    3791:	48 83 f8 10          	cmp    $0x10,%rax
    3795:	75 ea                	jne    3781 <__cpuid_cache_tlb_info+0x37>
    3797:	ff ce                	dec    %esi
    3799:	74 1b                	je     37b6 <__cpuid_cache_tlb_info+0x6c>
    379b:	b8 02 00 00 00       	mov    $0x2,%eax
    37a0:	31 c9                	xor    %ecx,%ecx
    37a2:	0f a2                	cpuid  
    37a4:	89 44 24 08          	mov    %eax,0x8(%rsp)
    37a8:	89 5c 24 0c          	mov    %ebx,0xc(%rsp)
    37ac:	89 4c 24 10          	mov    %ecx,0x10(%rsp)
    37b0:	89 54 24 14          	mov    %edx,0x14(%rsp)
    37b4:	eb c6                	jmp    377c <__cpuid_cache_tlb_info+0x32>
    37b6:	89 f8                	mov    %edi,%eax
    37b8:	44 29 c0             	sub    %r8d,%eax
    37bb:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    37c0:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    37c7:	00 00 
    37c9:	74 05                	je     37d0 <__cpuid_cache_tlb_info+0x86>
    37cb:	e8 a0 ed ff ff       	call   2570 <__stack_chk_fail@plt>
    37d0:	48 83 c4 20          	add    $0x20,%rsp
    37d4:	5b                   	pop    %rbx
    37d5:	c3                   	ret    

00000000000037d6 <print_tlb_info>:
    37d6:	f3 0f 1e fa          	endbr64 
    37da:	41 57                	push   %r15
    37dc:	4c 8d 3d ed 5a 00 00 	lea    0x5aed(%rip),%r15        # 92d0 <args_doc_str.3+0x438>
    37e3:	41 56                	push   %r14
    37e5:	4c 8d 35 d4 5d 00 00 	lea    0x5dd4(%rip),%r14        # 95c0 <args_doc_str.3+0x728>
    37ec:	41 55                	push   %r13
    37ee:	4c 8d 2d 13 6d 00 00 	lea    0x6d13(%rip),%r13        # a508 <args_doc_str.3+0x1670>
    37f5:	41 54                	push   %r12
    37f7:	55                   	push   %rbp
    37f8:	48 8d 2d f1 b3 00 00 	lea    0xb3f1(%rip),%rbp        # ebf0 <tlb_info_buf>
    37ff:	53                   	push   %rbx
    3800:	48 89 ef             	mov    %rbp,%rdi
    3803:	48 89 eb             	mov    %rbp,%rbx
    3806:	51                   	push   %rcx
    3807:	e8 3e ff ff ff       	call   374a <__cpuid_cache_tlb_info>
    380c:	41 89 c4             	mov    %eax,%r12d
    380f:	89 d8                	mov    %ebx,%eax
    3811:	29 e8                	sub    %ebp,%eax
    3813:	41 39 c4             	cmp    %eax,%r12d
    3816:	0f 8e f2 02 00 00    	jle    3b0e <print_tlb_info+0x338>
    381c:	8a 03                	mov    (%rbx),%al
    381e:	3c 76                	cmp    $0x76,%al
    3820:	77 42                	ja     3864 <print_tlb_info+0x8e>
    3822:	3c 4e                	cmp    $0x4e,%al
    3824:	77 0b                	ja     3831 <print_tlb_info+0x5b>
    3826:	ff c8                	dec    %eax
    3828:	3c 0a                	cmp    $0xa,%al
    382a:	76 24                	jbe    3850 <print_tlb_info+0x7a>
    382c:	e9 d5 02 00 00       	jmp    3b06 <print_tlb_info+0x330>
    3831:	83 e8 4f             	sub    $0x4f,%eax
    3834:	3c 27                	cmp    $0x27,%al
    3836:	0f 87 ca 02 00 00    	ja     3b06 <print_tlb_info+0x330>
    383c:	48 8d 15 9d 6b 00 00 	lea    0x6b9d(%rip),%rdx        # a3e0 <args_doc_str.3+0x1548>
    3843:	0f b6 c0             	movzbl %al,%eax
    3846:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
    384a:	48 01 d0             	add    %rdx,%rax
    384d:	3e ff e0             	notrack jmp *%rax
    3850:	48 8d 15 29 6c 00 00 	lea    0x6c29(%rip),%rdx        # a480 <args_doc_str.3+0x15e8>
    3857:	0f b6 c0             	movzbl %al,%eax
    385a:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
    385e:	48 01 d0             	add    %rdx,%rax
    3861:	3e ff e0             	notrack jmp *%rax
    3864:	3c b6                	cmp    $0xb6,%al
    3866:	77 27                	ja     388f <print_tlb_info+0xb9>
    3868:	3c 9f                	cmp    $0x9f,%al
    386a:	0f 86 96 02 00 00    	jbe    3b06 <print_tlb_info+0x330>
    3870:	83 c0 60             	add    $0x60,%eax
    3873:	3c 16                	cmp    $0x16,%al
    3875:	0f 87 8b 02 00 00    	ja     3b06 <print_tlb_info+0x330>
    387b:	48 8d 15 2a 6c 00 00 	lea    0x6c2a(%rip),%rdx        # a4ac <args_doc_str.3+0x1614>
    3882:	0f b6 c0             	movzbl %al,%eax
    3885:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
    3889:	48 01 d0             	add    %rdx,%rax
    388c:	3e ff e0             	notrack jmp *%rax
    388f:	83 c0 46             	add    $0x46,%eax
    3892:	3c 10                	cmp    $0x10,%al
    3894:	0f 87 6c 02 00 00    	ja     3b06 <print_tlb_info+0x330>
    389a:	0f b6 c0             	movzbl %al,%eax
    389d:	49 63 44 85 00       	movslq 0x0(%r13,%rax,4),%rax
    38a2:	4c 01 e8             	add    %r13,%rax
    38a5:	3e ff e0             	notrack jmp *%rax
    38a8:	48 8d 3d 81 57 00 00 	lea    0x5781(%rip),%rdi        # 9030 <args_doc_str.3+0x198>
    38af:	e8 cc ed ff ff       	call   2680 <puts@plt>
    38b4:	e9 4d 02 00 00       	jmp    3b06 <print_tlb_info+0x330>
    38b9:	48 8d 3d 43 69 00 00 	lea    0x6943(%rip),%rdi        # a203 <args_doc_str.3+0x136b>
    38c0:	e8 bb ed ff ff       	call   2680 <puts@plt>
    38c5:	e9 3c 02 00 00       	jmp    3b06 <print_tlb_info+0x330>
    38ca:	48 8d 3d 7f 57 00 00 	lea    0x577f(%rip),%rdi        # 9050 <args_doc_str.3+0x1b8>
    38d1:	e8 aa ed ff ff       	call   2680 <puts@plt>
    38d6:	e9 2b 02 00 00       	jmp    3b06 <print_tlb_info+0x330>
    38db:	48 8d 3d 8e 57 00 00 	lea    0x578e(%rip),%rdi        # 9070 <args_doc_str.3+0x1d8>
    38e2:	e8 99 ed ff ff       	call   2680 <puts@plt>
    38e7:	e9 1a 02 00 00       	jmp    3b06 <print_tlb_info+0x330>
    38ec:	48 8d 3d 9d 57 00 00 	lea    0x579d(%rip),%rdi        # 9090 <args_doc_str.3+0x1f8>
    38f3:	e8 88 ed ff ff       	call   2680 <puts@plt>
    38f8:	e9 09 02 00 00       	jmp    3b06 <print_tlb_info+0x330>
    38fd:	48 8d 3d ac 57 00 00 	lea    0x57ac(%rip),%rdi        # 90b0 <args_doc_str.3+0x218>
    3904:	e8 77 ed ff ff       	call   2680 <puts@plt>
    3909:	e9 f8 01 00 00       	jmp    3b06 <print_tlb_info+0x330>
    390e:	48 8d 3d 0c 69 00 00 	lea    0x690c(%rip),%rdi        # a221 <args_doc_str.3+0x1389>
    3915:	e8 66 ed ff ff       	call   2680 <puts@plt>
    391a:	e9 e7 01 00 00       	jmp    3b06 <print_tlb_info+0x330>
    391f:	48 8d 3d aa 57 00 00 	lea    0x57aa(%rip),%rdi        # 90d0 <args_doc_str.3+0x238>
    3926:	e8 55 ed ff ff       	call   2680 <puts@plt>
    392b:	e9 d6 01 00 00       	jmp    3b06 <print_tlb_info+0x330>
    3930:	48 8d 3d c1 57 00 00 	lea    0x57c1(%rip),%rdi        # 90f8 <args_doc_str.3+0x260>
    3937:	e8 44 ed ff ff       	call   2680 <puts@plt>
    393c:	e9 c5 01 00 00       	jmp    3b06 <print_tlb_info+0x330>
    3941:	48 8d 3d e0 57 00 00 	lea    0x57e0(%rip),%rdi        # 9128 <args_doc_str.3+0x290>
    3948:	e8 33 ed ff ff       	call   2680 <puts@plt>
    394d:	e9 b4 01 00 00       	jmp    3b06 <print_tlb_info+0x330>
    3952:	48 8d 3d ff 57 00 00 	lea    0x57ff(%rip),%rdi        # 9158 <args_doc_str.3+0x2c0>
    3959:	e8 22 ed ff ff       	call   2680 <puts@plt>
    395e:	e9 a3 01 00 00       	jmp    3b06 <print_tlb_info+0x330>
    3963:	48 8d 3d 16 58 00 00 	lea    0x5816(%rip),%rdi        # 9180 <args_doc_str.3+0x2e8>
    396a:	e8 11 ed ff ff       	call   2680 <puts@plt>
    396f:	e9 92 01 00 00       	jmp    3b06 <print_tlb_info+0x330>
    3974:	48 8d 3d 2d 58 00 00 	lea    0x582d(%rip),%rdi        # 91a8 <args_doc_str.3+0x310>
    397b:	e8 00 ed ff ff       	call   2680 <puts@plt>
    3980:	e9 81 01 00 00       	jmp    3b06 <print_tlb_info+0x330>
    3985:	48 8d 3d 44 58 00 00 	lea    0x5844(%rip),%rdi        # 91d0 <args_doc_str.3+0x338>
    398c:	e8 ef ec ff ff       	call   2680 <puts@plt>
    3991:	e9 70 01 00 00       	jmp    3b06 <print_tlb_info+0x330>
    3996:	48 8d 3d 53 58 00 00 	lea    0x5853(%rip),%rdi        # 91f0 <args_doc_str.3+0x358>
    399d:	e8 de ec ff ff       	call   2680 <puts@plt>
    39a2:	e9 5f 01 00 00       	jmp    3b06 <print_tlb_info+0x330>
    39a7:	48 8d 3d 6a 58 00 00 	lea    0x586a(%rip),%rdi        # 9218 <args_doc_str.3+0x380>
    39ae:	e8 cd ec ff ff       	call   2680 <puts@plt>
    39b3:	e9 4e 01 00 00       	jmp    3b06 <print_tlb_info+0x330>
    39b8:	48 8d 3d 81 58 00 00 	lea    0x5881(%rip),%rdi        # 9240 <args_doc_str.3+0x3a8>
    39bf:	e8 bc ec ff ff       	call   2680 <puts@plt>
    39c4:	e9 3d 01 00 00       	jmp    3b06 <print_tlb_info+0x330>
    39c9:	48 8d 3d 98 58 00 00 	lea    0x5898(%rip),%rdi        # 9268 <args_doc_str.3+0x3d0>
    39d0:	e8 ab ec ff ff       	call   2680 <puts@plt>
    39d5:	e9 2c 01 00 00       	jmp    3b06 <print_tlb_info+0x330>
    39da:	48 8d 3d af 58 00 00 	lea    0x58af(%rip),%rdi        # 9290 <args_doc_str.3+0x3f8>
    39e1:	e8 9a ec ff ff       	call   2680 <puts@plt>
    39e6:	e9 1b 01 00 00       	jmp    3b06 <print_tlb_info+0x330>
    39eb:	48 8d 3d be 58 00 00 	lea    0x58be(%rip),%rdi        # 92b0 <args_doc_str.3+0x418>
    39f2:	e8 89 ec ff ff       	call   2680 <puts@plt>
    39f7:	e9 0a 01 00 00       	jmp    3b06 <print_tlb_info+0x330>
    39fc:	4c 89 ff             	mov    %r15,%rdi
    39ff:	e8 7c ec ff ff       	call   2680 <puts@plt>
    3a04:	e9 fd 00 00 00       	jmp    3b06 <print_tlb_info+0x330>
    3a09:	48 8d 3d e0 58 00 00 	lea    0x58e0(%rip),%rdi        # 92f0 <args_doc_str.3+0x458>
    3a10:	e8 6b ec ff ff       	call   2680 <puts@plt>
    3a15:	e9 ec 00 00 00       	jmp    3b06 <print_tlb_info+0x330>
    3a1a:	48 8d 3d f7 58 00 00 	lea    0x58f7(%rip),%rdi        # 9318 <args_doc_str.3+0x480>
    3a21:	e8 5a ec ff ff       	call   2680 <puts@plt>
    3a26:	e9 db 00 00 00       	jmp    3b06 <print_tlb_info+0x330>
    3a2b:	48 8d 3d 0e 59 00 00 	lea    0x590e(%rip),%rdi        # 9340 <args_doc_str.3+0x4a8>
    3a32:	e8 49 ec ff ff       	call   2680 <puts@plt>
    3a37:	e9 ca 00 00 00       	jmp    3b06 <print_tlb_info+0x330>
    3a3c:	48 8d 3d 1d 59 00 00 	lea    0x591d(%rip),%rdi        # 9360 <args_doc_str.3+0x4c8>
    3a43:	e8 38 ec ff ff       	call   2680 <puts@plt>
    3a48:	e9 b9 00 00 00       	jmp    3b06 <print_tlb_info+0x330>
    3a4d:	48 8d 3d 34 59 00 00 	lea    0x5934(%rip),%rdi        # 9388 <args_doc_str.3+0x4f0>
    3a54:	e8 27 ec ff ff       	call   2680 <puts@plt>
    3a59:	e9 a8 00 00 00       	jmp    3b06 <print_tlb_info+0x330>
    3a5e:	48 8d 3d 43 59 00 00 	lea    0x5943(%rip),%rdi        # 93a8 <args_doc_str.3+0x510>
    3a65:	e8 16 ec ff ff       	call   2680 <puts@plt>
    3a6a:	e9 97 00 00 00       	jmp    3b06 <print_tlb_info+0x330>
    3a6f:	48 8d 3d 5a 59 00 00 	lea    0x595a(%rip),%rdi        # 93d0 <args_doc_str.3+0x538>
    3a76:	e8 05 ec ff ff       	call   2680 <puts@plt>
    3a7b:	e9 86 00 00 00       	jmp    3b06 <print_tlb_info+0x330>
    3a80:	48 8d 3d 89 59 00 00 	lea    0x5989(%rip),%rdi        # 9410 <args_doc_str.3+0x578>
    3a87:	e8 f4 eb ff ff       	call   2680 <puts@plt>
    3a8c:	eb 78                	jmp    3b06 <print_tlb_info+0x330>
    3a8e:	48 8d 3d 9b 59 00 00 	lea    0x599b(%rip),%rdi        # 9430 <args_doc_str.3+0x598>
    3a95:	e8 e6 eb ff ff       	call   2680 <puts@plt>
    3a9a:	eb 6a                	jmp    3b06 <print_tlb_info+0x330>
    3a9c:	48 8d 3d b5 59 00 00 	lea    0x59b5(%rip),%rdi        # 9458 <args_doc_str.3+0x5c0>
    3aa3:	e8 d8 eb ff ff       	call   2680 <puts@plt>
    3aa8:	eb 5c                	jmp    3b06 <print_tlb_info+0x330>
    3aaa:	48 8d 3d cf 59 00 00 	lea    0x59cf(%rip),%rdi        # 9480 <args_doc_str.3+0x5e8>
    3ab1:	e8 ca eb ff ff       	call   2680 <puts@plt>
    3ab6:	eb 4e                	jmp    3b06 <print_tlb_info+0x330>
    3ab8:	48 8d 3d e9 59 00 00 	lea    0x59e9(%rip),%rdi        # 94a8 <args_doc_str.3+0x610>
    3abf:	e8 bc eb ff ff       	call   2680 <puts@plt>
    3ac4:	eb 40                	jmp    3b06 <print_tlb_info+0x330>
    3ac6:	48 8d 3d 03 5a 00 00 	lea    0x5a03(%rip),%rdi        # 94d0 <args_doc_str.3+0x638>
    3acd:	e8 ae eb ff ff       	call   2680 <puts@plt>
    3ad2:	eb 32                	jmp    3b06 <print_tlb_info+0x330>
    3ad4:	48 8d 3d 1d 5a 00 00 	lea    0x5a1d(%rip),%rdi        # 94f8 <args_doc_str.3+0x660>
    3adb:	e8 a0 eb ff ff       	call   2680 <puts@plt>
    3ae0:	eb 24                	jmp    3b06 <print_tlb_info+0x330>
    3ae2:	48 8d 3d 4f 5a 00 00 	lea    0x5a4f(%rip),%rdi        # 9538 <args_doc_str.3+0x6a0>
    3ae9:	e8 92 eb ff ff       	call   2680 <puts@plt>
    3aee:	eb 16                	jmp    3b06 <print_tlb_info+0x330>
    3af0:	48 8d 3d 69 5a 00 00 	lea    0x5a69(%rip),%rdi        # 9560 <args_doc_str.3+0x6c8>
    3af7:	e8 84 eb ff ff       	call   2680 <puts@plt>
    3afc:	eb 08                	jmp    3b06 <print_tlb_info+0x330>
    3afe:	4c 89 f7             	mov    %r14,%rdi
    3b01:	e8 7a eb ff ff       	call   2680 <puts@plt>
    3b06:	48 ff c3             	inc    %rbx
    3b09:	e9 01 fd ff ff       	jmp    380f <print_tlb_info+0x39>
    3b0e:	44 89 25 cb b0 00 00 	mov    %r12d,0xb0cb(%rip)        # ebe0 <gl_tlb_info_buf_len>
    3b15:	44 89 e0             	mov    %r12d,%eax
    3b18:	5a                   	pop    %rdx
    3b19:	5b                   	pop    %rbx
    3b1a:	5d                   	pop    %rbp
    3b1b:	41 5c                	pop    %r12
    3b1d:	41 5d                	pop    %r13
    3b1f:	41 5e                	pop    %r14
    3b21:	41 5f                	pop    %r15
    3b23:	c3                   	ret    

0000000000003b24 <print_cache_info>:
    3b24:	f3 0f 1e fa          	endbr64 
    3b28:	41 57                	push   %r15
    3b2a:	4c 8d 3d 17 64 00 00 	lea    0x6417(%rip),%r15        # 9f48 <args_doc_str.3+0x10b0>
    3b31:	41 56                	push   %r14
    3b33:	4c 8d 35 e6 63 00 00 	lea    0x63e6(%rip),%r14        # 9f20 <args_doc_str.3+0x1088>
    3b3a:	41 55                	push   %r13
    3b3c:	4c 8d 2d 11 6c 00 00 	lea    0x6c11(%rip),%r13        # a754 <args_doc_str.3+0x18bc>
    3b43:	41 54                	push   %r12
    3b45:	45 31 e4             	xor    %r12d,%r12d
    3b48:	55                   	push   %rbp
    3b49:	53                   	push   %rbx
    3b4a:	31 db                	xor    %ebx,%ebx
    3b4c:	48 83 ec 38          	sub    $0x38,%rsp
    3b50:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3b57:	00 00 
    3b59:	48 89 44 24 28       	mov    %rax,0x28(%rsp)
    3b5e:	31 c0                	xor    %eax,%eax
    3b60:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
    3b65:	e8 e0 fb ff ff       	call   374a <__cpuid_cache_tlb_info>
    3b6a:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    3b6e:	39 5c 24 0c          	cmp    %ebx,0xc(%rsp)
    3b72:	0f 8e 81 04 00 00    	jle    3ff9 <print_cache_info+0x4d5>
    3b78:	48 8d 05 71 b0 00 00 	lea    0xb071(%rip),%rax        # ebf0 <tlb_info_buf>
    3b7f:	8a 04 18             	mov    (%rax,%rbx,1),%al
    3b82:	3c 87                	cmp    $0x87,%al
    3b84:	77 27                	ja     3bad <print_cache_info+0x89>
    3b86:	3c 05                	cmp    $0x5,%al
    3b88:	0f 86 63 04 00 00    	jbe    3ff1 <print_cache_info+0x4cd>
    3b8e:	83 e8 06             	sub    $0x6,%eax
    3b91:	3c 81                	cmp    $0x81,%al
    3b93:	0f 87 58 04 00 00    	ja     3ff1 <print_cache_info+0x4cd>
    3b99:	48 8d 15 ac 69 00 00 	lea    0x69ac(%rip),%rdx        # a54c <args_doc_str.3+0x16b4>
    3ba0:	0f b6 c0             	movzbl %al,%eax
    3ba3:	48 63 04 82          	movslq (%rdx,%rax,4),%rax
    3ba7:	48 01 d0             	add    %rdx,%rax
    3baa:	3e ff e0             	notrack jmp *%rax
    3bad:	3c cf                	cmp    $0xcf,%al
    3baf:	0f 86 3c 04 00 00    	jbe    3ff1 <print_cache_info+0x4cd>
    3bb5:	8d 50 30             	lea    0x30(%rax),%edx
    3bb8:	3c d0                	cmp    $0xd0,%al
    3bba:	0f 82 31 04 00 00    	jb     3ff1 <print_cache_info+0x4cd>
    3bc0:	0f b6 c2             	movzbl %dl,%eax
    3bc3:	49 63 44 85 00       	movslq 0x0(%r13,%rax,4),%rax
    3bc8:	4c 01 e8             	add    %r13,%rax
    3bcb:	3e ff e0             	notrack jmp *%rax
    3bce:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    3bd4:	e9 18 04 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3bd9:	48 8d 3d 18 5a 00 00 	lea    0x5a18(%rip),%rdi        # 95f8 <args_doc_str.3+0x760>
    3be0:	e8 9b ea ff ff       	call   2680 <puts@plt>
    3be5:	e9 07 04 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3bea:	48 8d 3d 2f 5a 00 00 	lea    0x5a2f(%rip),%rdi        # 9620 <args_doc_str.3+0x788>
    3bf1:	e8 8a ea ff ff       	call   2680 <puts@plt>
    3bf6:	e9 f6 03 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3bfb:	48 8d 3d 46 5a 00 00 	lea    0x5a46(%rip),%rdi        # 9648 <args_doc_str.3+0x7b0>
    3c02:	e8 79 ea ff ff       	call   2680 <puts@plt>
    3c07:	e9 e5 03 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3c0c:	48 8d 3d 5d 5a 00 00 	lea    0x5a5d(%rip),%rdi        # 9670 <args_doc_str.3+0x7d8>
    3c13:	e8 68 ea ff ff       	call   2680 <puts@plt>
    3c18:	e9 d4 03 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3c1d:	48 8d 3d 74 5a 00 00 	lea    0x5a74(%rip),%rdi        # 9698 <args_doc_str.3+0x800>
    3c24:	e8 57 ea ff ff       	call   2680 <puts@plt>
    3c29:	e9 c3 03 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3c2e:	48 8d 3d b3 5a 00 00 	lea    0x5ab3(%rip),%rdi        # 96e8 <args_doc_str.3+0x850>
    3c35:	e8 46 ea ff ff       	call   2680 <puts@plt>
    3c3a:	e9 b2 03 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3c3f:	48 8d 3d ca 5a 00 00 	lea    0x5aca(%rip),%rdi        # 9710 <args_doc_str.3+0x878>
    3c46:	e8 35 ea ff ff       	call   2680 <puts@plt>
    3c4b:	e9 a1 03 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3c50:	48 8d 3d e1 5a 00 00 	lea    0x5ae1(%rip),%rdi        # 9738 <args_doc_str.3+0x8a0>
    3c57:	e8 24 ea ff ff       	call   2680 <puts@plt>
    3c5c:	e9 90 03 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3c61:	48 8d 3d f8 5a 00 00 	lea    0x5af8(%rip),%rdi        # 9760 <args_doc_str.3+0x8c8>
    3c68:	e8 13 ea ff ff       	call   2680 <puts@plt>
    3c6d:	e9 7f 03 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3c72:	48 8d 3d 1f 5b 00 00 	lea    0x5b1f(%rip),%rdi        # 9798 <args_doc_str.3+0x900>
    3c79:	e8 02 ea ff ff       	call   2680 <puts@plt>
    3c7e:	e9 6e 03 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3c83:	48 8d 3d 46 5b 00 00 	lea    0x5b46(%rip),%rdi        # 97d0 <args_doc_str.3+0x938>
    3c8a:	e8 f1 e9 ff ff       	call   2680 <puts@plt>
    3c8f:	e9 5d 03 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3c94:	48 8d 3d 5d 5b 00 00 	lea    0x5b5d(%rip),%rdi        # 97f8 <args_doc_str.3+0x960>
    3c9b:	e8 e0 e9 ff ff       	call   2680 <puts@plt>
    3ca0:	e9 4c 03 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3ca5:	48 8d 3d 84 5b 00 00 	lea    0x5b84(%rip),%rdi        # 9830 <args_doc_str.3+0x998>
    3cac:	e8 cf e9 ff ff       	call   2680 <puts@plt>
    3cb1:	e9 3b 03 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3cb6:	48 8d 3d ab 5b 00 00 	lea    0x5bab(%rip),%rdi        # 9868 <args_doc_str.3+0x9d0>
    3cbd:	e8 be e9 ff ff       	call   2680 <puts@plt>
    3cc2:	e9 2a 03 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3cc7:	48 8d 3d c2 5b 00 00 	lea    0x5bc2(%rip),%rdi        # 9890 <args_doc_str.3+0x9f8>
    3cce:	e8 ad e9 ff ff       	call   2680 <puts@plt>
    3cd3:	e9 19 03 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3cd8:	48 8d 3d d9 5b 00 00 	lea    0x5bd9(%rip),%rdi        # 98b8 <args_doc_str.3+0xa20>
    3cdf:	e8 9c e9 ff ff       	call   2680 <puts@plt>
    3ce4:	e9 08 03 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3ce9:	48 8d 3d f0 5b 00 00 	lea    0x5bf0(%rip),%rdi        # 98e0 <args_doc_str.3+0xa48>
    3cf0:	e8 8b e9 ff ff       	call   2680 <puts@plt>
    3cf5:	e9 f7 02 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3cfa:	48 8d 3d 07 5c 00 00 	lea    0x5c07(%rip),%rdi        # 9908 <args_doc_str.3+0xa70>
    3d01:	e8 7a e9 ff ff       	call   2680 <puts@plt>
    3d06:	e9 e6 02 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3d0b:	48 8d 3d 1e 5c 00 00 	lea    0x5c1e(%rip),%rdi        # 9930 <args_doc_str.3+0xa98>
    3d12:	e8 69 e9 ff ff       	call   2680 <puts@plt>
    3d17:	e9 d5 02 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3d1c:	48 8d 3d 35 5c 00 00 	lea    0x5c35(%rip),%rdi        # 9958 <args_doc_str.3+0xac0>
    3d23:	e8 58 e9 ff ff       	call   2680 <puts@plt>
    3d28:	e9 c4 02 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3d2d:	48 8d 3d 44 5c 00 00 	lea    0x5c44(%rip),%rdi        # 9978 <args_doc_str.3+0xae0>
    3d34:	e8 47 e9 ff ff       	call   2680 <puts@plt>
    3d39:	e9 b3 02 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3d3e:	48 8d 3d 53 5c 00 00 	lea    0x5c53(%rip),%rdi        # 9998 <args_doc_str.3+0xb00>
    3d45:	e8 36 e9 ff ff       	call   2680 <puts@plt>
    3d4a:	e9 a2 02 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3d4f:	48 8d 3d 62 5c 00 00 	lea    0x5c62(%rip),%rdi        # 99b8 <args_doc_str.3+0xb20>
    3d56:	e8 25 e9 ff ff       	call   2680 <puts@plt>
    3d5b:	e9 91 02 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3d60:	48 8d 3d 71 5c 00 00 	lea    0x5c71(%rip),%rdi        # 99d8 <args_doc_str.3+0xb40>
    3d67:	e8 14 e9 ff ff       	call   2680 <puts@plt>
    3d6c:	e9 80 02 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3d71:	48 8d 3d 88 5c 00 00 	lea    0x5c88(%rip),%rdi        # 9a00 <args_doc_str.3+0xb68>
    3d78:	e8 03 e9 ff ff       	call   2680 <puts@plt>
    3d7d:	e9 6f 02 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3d82:	48 8d 3d ef 5c 00 00 	lea    0x5cef(%rip),%rdi        # 9a78 <args_doc_str.3+0xbe0>
    3d89:	e8 f2 e8 ff ff       	call   2680 <puts@plt>
    3d8e:	e9 5e 02 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3d93:	48 8d 3d 06 5d 00 00 	lea    0x5d06(%rip),%rdi        # 9aa0 <args_doc_str.3+0xc08>
    3d9a:	e8 e1 e8 ff ff       	call   2680 <puts@plt>
    3d9f:	e9 4d 02 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3da4:	48 8d 3d 1d 5d 00 00 	lea    0x5d1d(%rip),%rdi        # 9ac8 <args_doc_str.3+0xc30>
    3dab:	e8 d0 e8 ff ff       	call   2680 <puts@plt>
    3db0:	e9 3c 02 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3db5:	48 8d 3d 34 5d 00 00 	lea    0x5d34(%rip),%rdi        # 9af0 <args_doc_str.3+0xc58>
    3dbc:	e8 bf e8 ff ff       	call   2680 <puts@plt>
    3dc1:	e9 2b 02 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3dc6:	48 8d 3d 4b 5d 00 00 	lea    0x5d4b(%rip),%rdi        # 9b18 <args_doc_str.3+0xc80>
    3dcd:	e8 ae e8 ff ff       	call   2680 <puts@plt>
    3dd2:	e9 1a 02 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3dd7:	48 8d 3d e2 58 00 00 	lea    0x58e2(%rip),%rdi        # 96c0 <args_doc_str.3+0x828>
    3dde:	e8 9d e8 ff ff       	call   2680 <puts@plt>
    3de3:	e9 09 02 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3de8:	48 8d 3d 51 5d 00 00 	lea    0x5d51(%rip),%rdi        # 9b40 <args_doc_str.3+0xca8>
    3def:	e8 8c e8 ff ff       	call   2680 <puts@plt>
    3df4:	e9 f8 01 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3df9:	48 8d 3d 3a 64 00 00 	lea    0x643a(%rip),%rdi        # a23a <args_doc_str.3+0x13a2>
    3e00:	e8 7b e8 ff ff       	call   2680 <puts@plt>
    3e05:	e9 e7 01 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3e0a:	48 8d 3d 40 64 00 00 	lea    0x6440(%rip),%rdi        # a251 <args_doc_str.3+0x13b9>
    3e11:	e8 6a e8 ff ff       	call   2680 <puts@plt>
    3e16:	e9 d6 01 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3e1b:	48 8d 3d 46 64 00 00 	lea    0x6446(%rip),%rdi        # a268 <args_doc_str.3+0x13d0>
    3e22:	e8 59 e8 ff ff       	call   2680 <puts@plt>
    3e27:	e9 c5 01 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3e2c:	48 8d 3d 35 5d 00 00 	lea    0x5d35(%rip),%rdi        # 9b68 <args_doc_str.3+0xcd0>
    3e33:	e8 48 e8 ff ff       	call   2680 <puts@plt>
    3e38:	e9 b4 01 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3e3d:	48 8d 3d 44 5d 00 00 	lea    0x5d44(%rip),%rdi        # 9b88 <args_doc_str.3+0xcf0>
    3e44:	e8 37 e8 ff ff       	call   2680 <puts@plt>
    3e49:	e9 a3 01 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3e4e:	48 8d 3d 63 5d 00 00 	lea    0x5d63(%rip),%rdi        # 9bb8 <args_doc_str.3+0xd20>
    3e55:	e8 26 e8 ff ff       	call   2680 <puts@plt>
    3e5a:	e9 92 01 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3e5f:	48 8d 3d 82 5d 00 00 	lea    0x5d82(%rip),%rdi        # 9be8 <args_doc_str.3+0xd50>
    3e66:	e8 15 e8 ff ff       	call   2680 <puts@plt>
    3e6b:	e9 81 01 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3e70:	48 8d 3d a1 5d 00 00 	lea    0x5da1(%rip),%rdi        # 9c18 <args_doc_str.3+0xd80>
    3e77:	e8 04 e8 ff ff       	call   2680 <puts@plt>
    3e7c:	e9 70 01 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3e81:	48 8d 3d c0 5d 00 00 	lea    0x5dc0(%rip),%rdi        # 9c48 <args_doc_str.3+0xdb0>
    3e88:	e8 f3 e7 ff ff       	call   2680 <puts@plt>
    3e8d:	e9 5f 01 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3e92:	48 8d 3d cf 5d 00 00 	lea    0x5dcf(%rip),%rdi        # 9c68 <args_doc_str.3+0xdd0>
    3e99:	e8 e2 e7 ff ff       	call   2680 <puts@plt>
    3e9e:	e9 4e 01 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3ea3:	48 8d 3d e6 5d 00 00 	lea    0x5de6(%rip),%rdi        # 9c90 <args_doc_str.3+0xdf8>
    3eaa:	e8 d1 e7 ff ff       	call   2680 <puts@plt>
    3eaf:	e9 3d 01 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3eb4:	48 8d 3d fd 5d 00 00 	lea    0x5dfd(%rip),%rdi        # 9cb8 <args_doc_str.3+0xe20>
    3ebb:	e8 c0 e7 ff ff       	call   2680 <puts@plt>
    3ec0:	e9 2c 01 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3ec5:	48 8d 3d 14 5e 00 00 	lea    0x5e14(%rip),%rdi        # 9ce0 <args_doc_str.3+0xe48>
    3ecc:	e8 af e7 ff ff       	call   2680 <puts@plt>
    3ed1:	e9 1b 01 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3ed6:	48 8d 3d 2b 5e 00 00 	lea    0x5e2b(%rip),%rdi        # 9d08 <args_doc_str.3+0xe70>
    3edd:	e8 9e e7 ff ff       	call   2680 <puts@plt>
    3ee2:	e9 0a 01 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3ee7:	48 8d 3d 3a 5e 00 00 	lea    0x5e3a(%rip),%rdi        # 9d28 <args_doc_str.3+0xe90>
    3eee:	e8 8d e7 ff ff       	call   2680 <puts@plt>
    3ef3:	e9 f9 00 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3ef8:	48 8d 3d 49 5e 00 00 	lea    0x5e49(%rip),%rdi        # 9d48 <args_doc_str.3+0xeb0>
    3eff:	e8 7c e7 ff ff       	call   2680 <puts@plt>
    3f04:	e9 e8 00 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3f09:	48 8d 3d 60 5e 00 00 	lea    0x5e60(%rip),%rdi        # 9d70 <args_doc_str.3+0xed8>
    3f10:	e8 6b e7 ff ff       	call   2680 <puts@plt>
    3f15:	e9 d7 00 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3f1a:	48 8d 3d 6f 5e 00 00 	lea    0x5e6f(%rip),%rdi        # 9d90 <args_doc_str.3+0xef8>
    3f21:	e8 5a e7 ff ff       	call   2680 <puts@plt>
    3f26:	e9 c6 00 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3f2b:	48 8d 3d 86 5e 00 00 	lea    0x5e86(%rip),%rdi        # 9db8 <args_doc_str.3+0xf20>
    3f32:	e8 49 e7 ff ff       	call   2680 <puts@plt>
    3f37:	e9 b5 00 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3f3c:	48 8d 3d 95 5e 00 00 	lea    0x5e95(%rip),%rdi        # 9dd8 <args_doc_str.3+0xf40>
    3f43:	e8 38 e7 ff ff       	call   2680 <puts@plt>
    3f48:	e9 a4 00 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3f4d:	48 8d 3d a4 5e 00 00 	lea    0x5ea4(%rip),%rdi        # 9df8 <args_doc_str.3+0xf60>
    3f54:	e8 27 e7 ff ff       	call   2680 <puts@plt>
    3f59:	e9 93 00 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3f5e:	48 8d 3d b3 5e 00 00 	lea    0x5eb3(%rip),%rdi        # 9e18 <args_doc_str.3+0xf80>
    3f65:	e8 16 e7 ff ff       	call   2680 <puts@plt>
    3f6a:	e9 82 00 00 00       	jmp    3ff1 <print_cache_info+0x4cd>
    3f6f:	48 8d 3d c2 5e 00 00 	lea    0x5ec2(%rip),%rdi        # 9e38 <args_doc_str.3+0xfa0>
    3f76:	e8 05 e7 ff ff       	call   2680 <puts@plt>
    3f7b:	eb 74                	jmp    3ff1 <print_cache_info+0x4cd>
    3f7d:	48 8d 3d d4 5e 00 00 	lea    0x5ed4(%rip),%rdi        # 9e58 <args_doc_str.3+0xfc0>
    3f84:	e8 f7 e6 ff ff       	call   2680 <puts@plt>
    3f89:	eb 66                	jmp    3ff1 <print_cache_info+0x4cd>
    3f8b:	48 8d 3d ee 5e 00 00 	lea    0x5eee(%rip),%rdi        # 9e80 <args_doc_str.3+0xfe8>
    3f92:	e8 e9 e6 ff ff       	call   2680 <puts@plt>
    3f97:	eb 58                	jmp    3ff1 <print_cache_info+0x4cd>
    3f99:	48 8d 3d 88 5a 00 00 	lea    0x5a88(%rip),%rdi        # 9a28 <args_doc_str.3+0xb90>
    3fa0:	e8 db e6 ff ff       	call   2680 <puts@plt>
    3fa5:	eb 4a                	jmp    3ff1 <print_cache_info+0x4cd>
    3fa7:	48 8d 3d fa 5e 00 00 	lea    0x5efa(%rip),%rdi        # 9ea8 <args_doc_str.3+0x1010>
    3fae:	e8 cd e6 ff ff       	call   2680 <puts@plt>
    3fb3:	eb 3c                	jmp    3ff1 <print_cache_info+0x4cd>
    3fb5:	48 8d 3d 14 5f 00 00 	lea    0x5f14(%rip),%rdi        # 9ed0 <args_doc_str.3+0x1038>
    3fbc:	e8 bf e6 ff ff       	call   2680 <puts@plt>
    3fc1:	eb 2e                	jmp    3ff1 <print_cache_info+0x4cd>
    3fc3:	48 8d 3d 86 5a 00 00 	lea    0x5a86(%rip),%rdi        # 9a50 <args_doc_str.3+0xbb8>
    3fca:	e8 b1 e6 ff ff       	call   2680 <puts@plt>
    3fcf:	eb 20                	jmp    3ff1 <print_cache_info+0x4cd>
    3fd1:	48 8d 3d 20 5f 00 00 	lea    0x5f20(%rip),%rdi        # 9ef8 <args_doc_str.3+0x1060>
    3fd8:	e8 a3 e6 ff ff       	call   2680 <puts@plt>
    3fdd:	eb 12                	jmp    3ff1 <print_cache_info+0x4cd>
    3fdf:	4c 89 f7             	mov    %r14,%rdi
    3fe2:	e8 99 e6 ff ff       	call   2680 <puts@plt>
    3fe7:	eb 08                	jmp    3ff1 <print_cache_info+0x4cd>
    3fe9:	4c 89 ff             	mov    %r15,%rdi
    3fec:	e8 8f e6 ff ff       	call   2680 <puts@plt>
    3ff1:	48 ff c3             	inc    %rbx
    3ff4:	e9 75 fb ff ff       	jmp    3b6e <print_cache_info+0x4a>
    3ff9:	45 85 e4             	test   %r12d,%r12d
    3ffc:	0f 84 6f 01 00 00    	je     4171 <print_cache_info+0x64d>
    4002:	4c 8d 05 57 ab 00 00 	lea    0xab57(%rip),%r8        # eb60 <cash>
    4009:	b9 20 00 00 00       	mov    $0x20,%ecx
    400e:	31 c0                	xor    %eax,%eax
    4010:	45 31 e4             	xor    %r12d,%r12d
    4013:	4c 89 c7             	mov    %r8,%rdi
    4016:	4d 89 c5             	mov    %r8,%r13
    4019:	4c 89 c6             	mov    %r8,%rsi
    401c:	f3 ab                	rep stos %eax,%es:(%rdi)
    401e:	bf 04 00 00 00       	mov    $0x4,%edi
    4023:	89 f8                	mov    %edi,%eax
    4025:	44 89 e1             	mov    %r12d,%ecx
    4028:	0f a2                	cpuid  
    402a:	48 c1 e3 20          	shl    $0x20,%rbx
    402e:	89 ed                	mov    %ebp,%ebp
    4030:	89 c2                	mov    %eax,%edx
    4032:	48 09 dd             	or     %rbx,%rbp
    4035:	83 e2 1f             	and    $0x1f,%edx
    4038:	74 4d                	je     4087 <print_cache_info+0x563>
    403a:	c1 e8 05             	shr    $0x5,%eax
    403d:	ff c1                	inc    %ecx
    403f:	41 ff c4             	inc    %r12d
    4042:	89 56 0c             	mov    %edx,0xc(%rsi)
    4045:	83 e0 07             	and    $0x7,%eax
    4048:	89 0e                	mov    %ecx,(%rsi)
    404a:	48 83 c6 10          	add    $0x10,%rsi
    404e:	66 89 46 fa          	mov    %ax,-0x6(%rsi)
    4052:	48 89 e8             	mov    %rbp,%rax
    4055:	48 c1 e8 20          	shr    $0x20,%rax
    4059:	66 25 ff 0f          	and    $0xfff,%ax
    405d:	ff c0                	inc    %eax
    405f:	66 89 46 f4          	mov    %ax,-0xc(%rsi)
    4063:	48 89 e8             	mov    %rbp,%rax
    4066:	48 c1 e8 2c          	shr    $0x2c,%rax
    406a:	66 25 ff 03          	and    $0x3ff,%ax
    406e:	ff c0                	inc    %eax
    4070:	66 89 46 f6          	mov    %ax,-0xa(%rsi)
    4074:	48 89 e8             	mov    %rbp,%rax
    4077:	48 c1 e8 36          	shr    $0x36,%rax
    407b:	ff c0                	inc    %eax
    407d:	66 89 46 f8          	mov    %ax,-0x8(%rsi)
    4081:	41 83 fc 08          	cmp    $0x8,%r12d
    4085:	75 9c                	jne    4023 <print_cache_info+0x4ff>
    4087:	49 63 c4             	movslq %r12d,%rax
    408a:	4c 8d 3d f6 61 00 00 	lea    0x61f6(%rip),%r15        # a287 <args_doc_str.3+0x13ef>
    4091:	4c 8d 35 e8 61 00 00 	lea    0x61e8(%rip),%r14        # a280 <args_doc_str.3+0x13e8>
    4098:	48 c1 e0 04          	shl    $0x4,%rax
    409c:	48 8d 2d ec 61 00 00 	lea    0x61ec(%rip),%rbp        # a28f <args_doc_str.3+0x13f7>
    40a3:	49 8d 1c 00          	lea    (%r8,%rax,1),%rbx
    40a7:	4c 39 eb             	cmp    %r13,%rbx
    40aa:	0f 84 ba 00 00 00    	je     416a <print_cache_info+0x646>
    40b0:	41 8b 45 0c          	mov    0xc(%r13),%eax
    40b4:	83 f8 02             	cmp    $0x2,%eax
    40b7:	74 1e                	je     40d7 <print_cache_info+0x5b3>
    40b9:	83 f8 03             	cmp    $0x3,%eax
    40bc:	74 2a                	je     40e8 <print_cache_info+0x5c4>
    40be:	ff c8                	dec    %eax
    40c0:	75 35                	jne    40f7 <print_cache_info+0x5d3>
    40c2:	48 8d 35 b6 61 00 00 	lea    0x61b6(%rip),%rsi        # a27f <args_doc_str.3+0x13e7>
    40c9:	bf 01 00 00 00       	mov    $0x1,%edi
    40ce:	31 c0                	xor    %eax,%eax
    40d0:	e8 cb e2 ff ff       	call   23a0 <__printf_chk@plt>
    40d5:	eb 20                	jmp    40f7 <print_cache_info+0x5d3>
    40d7:	4c 89 fe             	mov    %r15,%rsi
    40da:	bf 01 00 00 00       	mov    $0x1,%edi
    40df:	31 c0                	xor    %eax,%eax
    40e1:	e8 ba e2 ff ff       	call   23a0 <__printf_chk@plt>
    40e6:	eb 0f                	jmp    40f7 <print_cache_info+0x5d3>
    40e8:	4c 89 f6             	mov    %r14,%rsi
    40eb:	bf 01 00 00 00       	mov    $0x1,%edi
    40f0:	31 c0                	xor    %eax,%eax
    40f2:	e8 a9 e2 ff ff       	call   23a0 <__printf_chk@plt>
    40f7:	41 0f bf 55 0a       	movswl 0xa(%r13),%edx
    40fc:	48 89 ee             	mov    %rbp,%rsi
    40ff:	bf 01 00 00 00       	mov    $0x1,%edi
    4104:	31 c0                	xor    %eax,%eax
    4106:	49 83 c5 10          	add    $0x10,%r13
    410a:	e8 91 e2 ff ff       	call   23a0 <__printf_chk@plt>
    410f:	41 0f bf 45 f6       	movswl -0xa(%r13),%eax
    4114:	41 0f bf 55 f4       	movswl -0xc(%r13),%edx
    4119:	48 8d 35 79 61 00 00 	lea    0x6179(%rip),%rsi        # a299 <args_doc_str.3+0x1401>
    4120:	bf 01 00 00 00       	mov    $0x1,%edi
    4125:	0f af d0             	imul   %eax,%edx
    4128:	41 0f bf 45 f8       	movswl -0x8(%r13),%eax
    412d:	41 0f af 55 f0       	imul   -0x10(%r13),%edx
    4132:	0f af d0             	imul   %eax,%edx
    4135:	31 c0                	xor    %eax,%eax
    4137:	c1 ea 0a             	shr    $0xa,%edx
    413a:	e8 61 e2 ff ff       	call   23a0 <__printf_chk@plt>
    413f:	41 0f bf 4d f4       	movswl -0xc(%r13),%ecx
    4144:	41 8b 55 f0          	mov    -0x10(%r13),%edx
    4148:	31 c0                	xor    %eax,%eax
    414a:	45 0f bf 4d f8       	movswl -0x8(%r13),%r9d
    414f:	45 0f bf 45 f6       	movswl -0xa(%r13),%r8d
    4154:	bf 01 00 00 00       	mov    $0x1,%edi
    4159:	48 8d 35 10 5e 00 00 	lea    0x5e10(%rip),%rsi        # 9f70 <args_doc_str.3+0x10d8>
    4160:	e8 3b e2 ff ff       	call   23a0 <__printf_chk@plt>
    4165:	e9 3d ff ff ff       	jmp    40a7 <print_cache_info+0x583>
    416a:	44 89 25 d7 a9 00 00 	mov    %r12d,0xa9d7(%rip)        # eb48 <gl_det_cache_info_len>
    4171:	48 8b 44 24 28       	mov    0x28(%rsp),%rax
    4176:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    417d:	00 00 
    417f:	74 05                	je     4186 <print_cache_info+0x662>
    4181:	e8 ea e3 ff ff       	call   2570 <__stack_chk_fail@plt>
    4186:	48 83 c4 38          	add    $0x38,%rsp
    418a:	44 89 e0             	mov    %r12d,%eax
    418d:	5b                   	pop    %rbx
    418e:	5d                   	pop    %rbp
    418f:	41 5c                	pop    %r12
    4191:	41 5d                	pop    %r13
    4193:	41 5e                	pop    %r14
    4195:	41 5f                	pop    %r15
    4197:	c3                   	ret    

0000000000004198 <sys_stat_mem_print_header>:
    4198:	f3 0f 1e fa          	endbr64 
    419c:	48 8d 3d cd 5e 00 00 	lea    0x5ecd(%rip),%rdi        # a070 <args_doc_str.3+0x11d8>
    41a3:	e9 d8 e4 ff ff       	jmp    2680 <puts@plt>

00000000000041a8 <sys_stat_mem_print>:
    41a8:	f3 0f 1e fa          	endbr64 
    41ac:	50                   	push   %rax
    41ad:	8b 4f 08             	mov    0x8(%rdi),%ecx
    41b0:	48 8d 35 29 5f 00 00 	lea    0x5f29(%rip),%rsi        # a0e0 <args_doc_str.3+0x1248>
    41b7:	8b 57 04             	mov    0x4(%rdi),%edx
    41ba:	ff 77 38             	push   0x38(%rdi)
    41bd:	ff 77 30             	push   0x30(%rdi)
    41c0:	ff 77 28             	push   0x28(%rdi)
    41c3:	ff 77 20             	push   0x20(%rdi)
    41c6:	ff 77 18             	push   0x18(%rdi)
    41c9:	8b 47 14             	mov    0x14(%rdi),%eax
    41cc:	50                   	push   %rax
    41cd:	44 8b 4f 10          	mov    0x10(%rdi),%r9d
    41d1:	31 c0                	xor    %eax,%eax
    41d3:	44 8b 47 0c          	mov    0xc(%rdi),%r8d
    41d7:	bf 01 00 00 00       	mov    $0x1,%edi
    41dc:	e8 bf e1 ff ff       	call   23a0 <__printf_chk@plt>
    41e1:	48 83 c4 38          	add    $0x38,%rsp
    41e5:	c3                   	ret    

00000000000041e6 <sys_stat_mem_print_delta>:
    41e6:	f3 0f 1e fa          	endbr64 
    41ea:	48 89 f2             	mov    %rsi,%rdx
    41ed:	50                   	push   %rax
    41ee:	44 8b 4e 10          	mov    0x10(%rsi),%r9d
    41f2:	31 c0                	xor    %eax,%eax
    41f4:	44 8b 46 0c          	mov    0xc(%rsi),%r8d
    41f8:	8b 4e 08             	mov    0x8(%rsi),%ecx
    41fb:	44 8b 56 04          	mov    0x4(%rsi),%r10d
    41ff:	48 8b 76 38          	mov    0x38(%rsi),%rsi
    4203:	48 2b 77 38          	sub    0x38(%rdi),%rsi
    4207:	44 2b 57 04          	sub    0x4(%rdi),%r10d
    420b:	2b 4f 08             	sub    0x8(%rdi),%ecx
    420e:	56                   	push   %rsi
    420f:	48 8b 72 30          	mov    0x30(%rdx),%rsi
    4213:	48 2b 77 30          	sub    0x30(%rdi),%rsi
    4217:	56                   	push   %rsi
    4218:	48 8b 72 28          	mov    0x28(%rdx),%rsi
    421c:	48 2b 77 28          	sub    0x28(%rdi),%rsi
    4220:	56                   	push   %rsi
    4221:	48 8b 72 20          	mov    0x20(%rdx),%rsi
    4225:	48 2b 77 20          	sub    0x20(%rdi),%rsi
    4229:	56                   	push   %rsi
    422a:	48 8b 72 18          	mov    0x18(%rdx),%rsi
    422e:	48 2b 77 18          	sub    0x18(%rdi),%rsi
    4232:	56                   	push   %rsi
    4233:	8b 52 14             	mov    0x14(%rdx),%edx
    4236:	48 8d 35 a3 5e 00 00 	lea    0x5ea3(%rip),%rsi        # a0e0 <args_doc_str.3+0x1248>
    423d:	2b 57 14             	sub    0x14(%rdi),%edx
    4240:	52                   	push   %rdx
    4241:	44 89 d2             	mov    %r10d,%edx
    4244:	44 2b 4f 10          	sub    0x10(%rdi),%r9d
    4248:	44 2b 47 0c          	sub    0xc(%rdi),%r8d
    424c:	bf 01 00 00 00       	mov    $0x1,%edi
    4251:	e8 4a e1 ff ff       	call   23a0 <__printf_chk@plt>
    4256:	48 83 c4 38          	add    $0x38,%rsp
    425a:	c3                   	ret    

000000000000425b <dump_histogram_64>:
    425b:	f3 0f 1e fa          	endbr64 
    425f:	41 57                	push   %r15
    4261:	31 c0                	xor    %eax,%eax
    4263:	41 56                	push   %r14
    4265:	4c 8d 35 f8 66 00 00 	lea    0x66f8(%rip),%r14        # a964 <__func__.2+0xc4>
    426c:	41 55                	push   %r13
    426e:	4c 8d 2d 63 66 00 00 	lea    0x6663(%rip),%r13        # a8d8 <__func__.2+0x38>
    4275:	41 54                	push   %r12
    4277:	49 89 fc             	mov    %rdi,%r12
    427a:	55                   	push   %rbp
    427b:	53                   	push   %rbx
    427c:	49 8d 9c 24 80 00 00 	lea    0x80(%r12),%rbx
    4283:	00 
    4284:	56                   	push   %rsi
    4285:	48 8b 2f             	mov    (%rdi),%rbp
    4288:	48 8d 35 c2 66 00 00 	lea    0x66c2(%rip),%rsi        # a951 <__func__.2+0xb1>
    428f:	bf 01 00 00 00       	mov    $0x1,%edi
    4294:	48 89 ea             	mov    %rbp,%rdx
    4297:	e8 04 e1 ff ff       	call   23a0 <__printf_chk@plt>
    429c:	ba 08 00 00 00       	mov    $0x8,%edx
    42a1:	31 c0                	xor    %eax,%eax
    42a3:	45 31 c0             	xor    %r8d,%r8d
    42a6:	4c 03 04 c3          	add    (%rbx,%rax,8),%r8
    42aa:	48 ff c0             	inc    %rax
    42ad:	48 83 f8 10          	cmp    $0x10,%rax
    42b1:	75 f3                	jne    42a6 <dump_histogram_64+0x4b>
    42b3:	44 8d 7a 01          	lea    0x1(%rdx),%r15d
    42b7:	4c 89 f6             	mov    %r14,%rsi
    42ba:	bf 01 00 00 00       	mov    $0x1,%edi
    42bf:	31 c0                	xor    %eax,%eax
    42c1:	44 89 f9             	mov    %r15d,%ecx
    42c4:	4c 01 c5             	add    %r8,%rbp
    42c7:	48 83 eb 80          	sub    $0xffffffffffffff80,%rbx
    42cb:	e8 d0 e0 ff ff       	call   23a0 <__printf_chk@plt>
    42d0:	4c 8b 4b 98          	mov    -0x68(%rbx),%r9
    42d4:	4c 8b 43 90          	mov    -0x70(%rbx),%r8
    42d8:	4c 89 ee             	mov    %r13,%rsi
    42db:	48 8b 4b 88          	mov    -0x78(%rbx),%rcx
    42df:	ff 73 f8             	push   -0x8(%rbx)
    42e2:	bf 01 00 00 00       	mov    $0x1,%edi
    42e7:	31 c0                	xor    %eax,%eax
    42e9:	ff 73 f0             	push   -0x10(%rbx)
    42ec:	ff 73 e8             	push   -0x18(%rbx)
    42ef:	ff 73 e0             	push   -0x20(%rbx)
    42f2:	ff 73 d8             	push   -0x28(%rbx)
    42f5:	ff 73 d0             	push   -0x30(%rbx)
    42f8:	ff 73 c8             	push   -0x38(%rbx)
    42fb:	ff 73 c0             	push   -0x40(%rbx)
    42fe:	ff 73 b8             	push   -0x48(%rbx)
    4301:	ff 73 b0             	push   -0x50(%rbx)
    4304:	ff 73 a8             	push   -0x58(%rbx)
    4307:	ff 73 a0             	push   -0x60(%rbx)
    430a:	48 8b 53 80          	mov    -0x80(%rbx),%rdx
    430e:	e8 8d e0 ff ff       	call   23a0 <__printf_chk@plt>
    4313:	48 83 c4 60          	add    $0x60,%rsp
    4317:	41 83 ff 17          	cmp    $0x17,%r15d
    431b:	74 08                	je     4325 <dump_histogram_64+0xca>
    431d:	44 89 fa             	mov    %r15d,%edx
    4320:	e9 7c ff ff ff       	jmp    42a1 <dump_histogram_64+0x46>
    4325:	31 db                	xor    %ebx,%ebx
    4327:	4c 8d 2d 4e 66 00 00 	lea    0x664e(%rip),%r13        # a97c <__func__.2+0xdc>
    432e:	4d 8b 44 dc 40       	mov    0x40(%r12,%rbx,8),%r8
    4333:	8d 4b 18             	lea    0x18(%rbx),%ecx
    4336:	8d 53 17             	lea    0x17(%rbx),%edx
    4339:	4c 89 ee             	mov    %r13,%rsi
    433c:	bf 01 00 00 00       	mov    $0x1,%edi
    4341:	31 c0                	xor    %eax,%eax
    4343:	e8 58 e0 ff ff       	call   23a0 <__printf_chk@plt>
    4348:	49 03 6c dc 40       	add    0x40(%r12,%rbx,8),%rbp
    434d:	48 ff c3             	inc    %rbx
    4350:	48 83 fb 07          	cmp    $0x7,%rbx
    4354:	75 d8                	jne    432e <dump_histogram_64+0xd3>
    4356:	49 8b 54 24 78       	mov    0x78(%r12),%rdx
    435b:	48 8d 35 2d 66 00 00 	lea    0x662d(%rip),%rsi        # a98f <__func__.2+0xef>
    4362:	bf 01 00 00 00       	mov    $0x1,%edi
    4367:	31 c0                	xor    %eax,%eax
    4369:	e8 32 e0 ff ff       	call   23a0 <__printf_chk@plt>
    436e:	49 8b 54 24 78       	mov    0x78(%r12),%rdx
    4373:	48 8d 35 28 66 00 00 	lea    0x6628(%rip),%rsi        # a9a2 <__func__.2+0x102>
    437a:	59                   	pop    %rcx
    437b:	bf 01 00 00 00       	mov    $0x1,%edi
    4380:	5b                   	pop    %rbx
    4381:	31 c0                	xor    %eax,%eax
    4383:	48 01 ea             	add    %rbp,%rdx
    4386:	5d                   	pop    %rbp
    4387:	41 5c                	pop    %r12
    4389:	41 5d                	pop    %r13
    438b:	41 5e                	pop    %r14
    438d:	41 5f                	pop    %r15
    438f:	e9 0c e0 ff ff       	jmp    23a0 <__printf_chk@plt>

0000000000004394 <makeSysMemItemNode>:
    4394:	41 56                	push   %r14
    4396:	31 c9                	xor    %ecx,%ecx
    4398:	49 89 f6             	mov    %rsi,%r14
    439b:	31 f6                	xor    %esi,%esi
    439d:	41 55                	push   %r13
    439f:	41 54                	push   %r12
    43a1:	49 89 d4             	mov    %rdx,%r12
    43a4:	48 8d 15 7b 66 00 00 	lea    0x667b(%rip),%rdx        # aa26 <__func__.2+0x186>
    43ab:	55                   	push   %rbp
    43ac:	50                   	push   %rax
    43ad:	e8 5e e0 ff ff       	call   2410 <xmlNewChild@plt>
    43b2:	4c 89 f2             	mov    %r14,%rdx
    43b5:	48 8d 35 34 68 00 00 	lea    0x6834(%rip),%rsi        # abf0 <__func__.2+0x350>
    43bc:	49 89 c5             	mov    %rax,%r13
    43bf:	48 89 c7             	mov    %rax,%rdi
    43c2:	e8 b9 e1 ff ff       	call   2580 <xmlNewProp@plt>
    43c7:	31 c9                	xor    %ecx,%ecx
    43c9:	48 8d 15 63 66 00 00 	lea    0x6663(%rip),%rdx        # aa33 <__func__.2+0x193>
    43d0:	31 f6                	xor    %esi,%esi
    43d2:	4c 89 ef             	mov    %r13,%rdi
    43d5:	e8 36 e0 ff ff       	call   2410 <xmlNewChild@plt>
    43da:	31 f6                	xor    %esi,%esi
    43dc:	4c 89 e7             	mov    %r12,%rdi
    43df:	48 89 c5             	mov    %rax,%rbp
    43e2:	e8 59 26 00 00       	call   6a40 <sys_stat_mem_get>
    43e7:	48 89 c7             	mov    %rax,%rdi
    43ea:	e8 91 2d 00 00       	call   7180 <signedIntToXmlChar>
    43ef:	48 8d 15 4b 66 00 00 	lea    0x664b(%rip),%rdx        # aa41 <__func__.2+0x1a1>
    43f6:	31 f6                	xor    %esi,%esi
    43f8:	48 89 ef             	mov    %rbp,%rdi
    43fb:	48 89 c1             	mov    %rax,%rcx
    43fe:	e8 0d e0 ff ff       	call   2410 <xmlNewChild@plt>
    4403:	be 01 00 00 00       	mov    $0x1,%esi
    4408:	4c 89 e7             	mov    %r12,%rdi
    440b:	e8 30 26 00 00       	call   6a40 <sys_stat_mem_get>
    4410:	48 89 c7             	mov    %rax,%rdi
    4413:	e8 68 2d 00 00       	call   7180 <signedIntToXmlChar>
    4418:	48 8d 15 2b 66 00 00 	lea    0x662b(%rip),%rdx        # aa4a <__func__.2+0x1aa>
    441f:	31 f6                	xor    %esi,%esi
    4421:	48 89 ef             	mov    %rbp,%rdi
    4424:	48 89 c1             	mov    %rax,%rcx
    4427:	e8 e4 df ff ff       	call   2410 <xmlNewChild@plt>
    442c:	be 02 00 00 00       	mov    $0x2,%esi
    4431:	4c 89 e7             	mov    %r12,%rdi
    4434:	e8 07 26 00 00       	call   6a40 <sys_stat_mem_get>
    4439:	48 89 c7             	mov    %rax,%rdi
    443c:	e8 3f 2d 00 00       	call   7180 <signedIntToXmlChar>
    4441:	48 8d 15 0d 66 00 00 	lea    0x660d(%rip),%rdx        # aa55 <__func__.2+0x1b5>
    4448:	31 f6                	xor    %esi,%esi
    444a:	48 89 ef             	mov    %rbp,%rdi
    444d:	48 89 c1             	mov    %rax,%rcx
    4450:	e8 bb df ff ff       	call   2410 <xmlNewChild@plt>
    4455:	be 03 00 00 00       	mov    $0x3,%esi
    445a:	4c 89 e7             	mov    %r12,%rdi
    445d:	e8 de 25 00 00       	call   6a40 <sys_stat_mem_get>
    4462:	48 89 c7             	mov    %rax,%rdi
    4465:	e8 16 2d 00 00       	call   7180 <signedIntToXmlChar>
    446a:	48 8d 15 f0 65 00 00 	lea    0x65f0(%rip),%rdx        # aa61 <__func__.2+0x1c1>
    4471:	31 f6                	xor    %esi,%esi
    4473:	48 89 ef             	mov    %rbp,%rdi
    4476:	48 89 c1             	mov    %rax,%rcx
    4479:	e8 92 df ff ff       	call   2410 <xmlNewChild@plt>
    447e:	be 04 00 00 00       	mov    $0x4,%esi
    4483:	4c 89 e7             	mov    %r12,%rdi
    4486:	e8 b5 25 00 00       	call   6a40 <sys_stat_mem_get>
    448b:	48 89 c7             	mov    %rax,%rdi
    448e:	e8 ed 2c 00 00       	call   7180 <signedIntToXmlChar>
    4493:	48 8d 15 c5 65 00 00 	lea    0x65c5(%rip),%rdx        # aa5f <__func__.2+0x1bf>
    449a:	31 f6                	xor    %esi,%esi
    449c:	48 89 ef             	mov    %rbp,%rdi
    449f:	48 89 c1             	mov    %rax,%rcx
    44a2:	e8 69 df ff ff       	call   2410 <xmlNewChild@plt>
    44a7:	be 05 00 00 00       	mov    $0x5,%esi
    44ac:	4c 89 e7             	mov    %r12,%rdi
    44af:	e8 8c 25 00 00       	call   6a40 <sys_stat_mem_get>
    44b4:	48 89 c7             	mov    %rax,%rdi
    44b7:	e8 c4 2c 00 00       	call   7180 <signedIntToXmlChar>
    44bc:	48 8d 15 55 5e 00 00 	lea    0x5e55(%rip),%rdx        # a318 <args_doc_str.3+0x1480>
    44c3:	31 f6                	xor    %esi,%esi
    44c5:	48 89 ef             	mov    %rbp,%rdi
    44c8:	48 89 c1             	mov    %rax,%rcx
    44cb:	e8 40 df ff ff       	call   2410 <xmlNewChild@plt>
    44d0:	be 06 00 00 00       	mov    $0x6,%esi
    44d5:	4c 89 e7             	mov    %r12,%rdi
    44d8:	e8 63 25 00 00       	call   6a40 <sys_stat_mem_get>
    44dd:	48 89 c7             	mov    %rax,%rdi
    44e0:	e8 9b 2c 00 00       	call   7180 <signedIntToXmlChar>
    44e5:	48 8d 15 80 65 00 00 	lea    0x6580(%rip),%rdx        # aa6c <__func__.2+0x1cc>
    44ec:	48 89 ef             	mov    %rbp,%rdi
    44ef:	31 f6                	xor    %esi,%esi
    44f1:	48 89 c1             	mov    %rax,%rcx
    44f4:	e8 17 df ff ff       	call   2410 <xmlNewChild@plt>
    44f9:	be 07 00 00 00       	mov    $0x7,%esi
    44fe:	4c 89 e7             	mov    %r12,%rdi
    4501:	e8 3a 25 00 00       	call   6a40 <sys_stat_mem_get>
    4506:	48 89 c7             	mov    %rax,%rdi
    4509:	e8 72 2c 00 00       	call   7180 <signedIntToXmlChar>
    450e:	48 8d 15 5f 65 00 00 	lea    0x655f(%rip),%rdx        # aa74 <__func__.2+0x1d4>
    4515:	48 89 ef             	mov    %rbp,%rdi
    4518:	31 f6                	xor    %esi,%esi
    451a:	48 89 c1             	mov    %rax,%rcx
    451d:	e8 ee de ff ff       	call   2410 <xmlNewChild@plt>
    4522:	be 08 00 00 00       	mov    $0x8,%esi
    4527:	4c 89 e7             	mov    %r12,%rdi
    452a:	e8 11 25 00 00       	call   6a40 <sys_stat_mem_get>
    452f:	48 89 c7             	mov    %rax,%rdi
    4532:	e8 49 2c 00 00       	call   7180 <signedIntToXmlChar>
    4537:	48 8d 15 3d 65 00 00 	lea    0x653d(%rip),%rdx        # aa7b <__func__.2+0x1db>
    453e:	48 89 ef             	mov    %rbp,%rdi
    4541:	31 f6                	xor    %esi,%esi
    4543:	48 89 c1             	mov    %rax,%rcx
    4546:	e8 c5 de ff ff       	call   2410 <xmlNewChild@plt>
    454b:	be 09 00 00 00       	mov    $0x9,%esi
    4550:	4c 89 e7             	mov    %r12,%rdi
    4553:	e8 e8 24 00 00       	call   6a40 <sys_stat_mem_get>
    4558:	48 89 c7             	mov    %rax,%rdi
    455b:	e8 20 2c 00 00       	call   7180 <signedIntToXmlChar>
    4560:	48 8d 15 b8 5d 00 00 	lea    0x5db8(%rip),%rdx        # a31f <args_doc_str.3+0x1487>
    4567:	48 89 ef             	mov    %rbp,%rdi
    456a:	31 f6                	xor    %esi,%esi
    456c:	48 89 c1             	mov    %rax,%rcx
    456f:	e8 9c de ff ff       	call   2410 <xmlNewChild@plt>
    4574:	5a                   	pop    %rdx
    4575:	4c 89 e8             	mov    %r13,%rax
    4578:	5d                   	pop    %rbp
    4579:	41 5c                	pop    %r12
    457b:	41 5d                	pop    %r13
    457d:	41 5e                	pop    %r14
    457f:	c3                   	ret    

0000000000004580 <makeMemItemDeltaNode.isra.0>:
    4580:	41 55                	push   %r13
    4582:	31 c9                	xor    %ecx,%ecx
    4584:	49 89 d5             	mov    %rdx,%r13
    4587:	48 8d 15 f5 64 00 00 	lea    0x64f5(%rip),%rdx        # aa83 <__func__.2+0x1e3>
    458e:	41 54                	push   %r12
    4590:	49 89 f4             	mov    %rsi,%r12
    4593:	31 f6                	xor    %esi,%esi
    4595:	55                   	push   %rbp
    4596:	e8 75 de ff ff       	call   2410 <xmlNewChild@plt>
    459b:	31 d2                	xor    %edx,%edx
    459d:	4c 89 ee             	mov    %r13,%rsi
    45a0:	4c 89 e7             	mov    %r12,%rdi
    45a3:	48 89 c5             	mov    %rax,%rbp
    45a6:	e8 25 25 00 00       	call   6ad0 <sys_stat_mem_get_delta>
    45ab:	48 89 c7             	mov    %rax,%rdi
    45ae:	e8 cd 2b 00 00       	call   7180 <signedIntToXmlChar>
    45b3:	31 f6                	xor    %esi,%esi
    45b5:	48 89 ef             	mov    %rbp,%rdi
    45b8:	48 8d 15 82 64 00 00 	lea    0x6482(%rip),%rdx        # aa41 <__func__.2+0x1a1>
    45bf:	48 89 c1             	mov    %rax,%rcx
    45c2:	e8 49 de ff ff       	call   2410 <xmlNewChild@plt>
    45c7:	4c 89 ee             	mov    %r13,%rsi
    45ca:	ba 01 00 00 00       	mov    $0x1,%edx
    45cf:	4c 89 e7             	mov    %r12,%rdi
    45d2:	e8 f9 24 00 00       	call   6ad0 <sys_stat_mem_get_delta>
    45d7:	48 89 c7             	mov    %rax,%rdi
    45da:	e8 a1 2b 00 00       	call   7180 <signedIntToXmlChar>
    45df:	31 f6                	xor    %esi,%esi
    45e1:	48 89 ef             	mov    %rbp,%rdi
    45e4:	48 8d 15 5f 64 00 00 	lea    0x645f(%rip),%rdx        # aa4a <__func__.2+0x1aa>
    45eb:	48 89 c1             	mov    %rax,%rcx
    45ee:	e8 1d de ff ff       	call   2410 <xmlNewChild@plt>
    45f3:	4c 89 ee             	mov    %r13,%rsi
    45f6:	ba 02 00 00 00       	mov    $0x2,%edx
    45fb:	4c 89 e7             	mov    %r12,%rdi
    45fe:	e8 cd 24 00 00       	call   6ad0 <sys_stat_mem_get_delta>
    4603:	48 89 c7             	mov    %rax,%rdi
    4606:	e8 75 2b 00 00       	call   7180 <signedIntToXmlChar>
    460b:	31 f6                	xor    %esi,%esi
    460d:	48 89 ef             	mov    %rbp,%rdi
    4610:	48 8d 15 3e 64 00 00 	lea    0x643e(%rip),%rdx        # aa55 <__func__.2+0x1b5>
    4617:	48 89 c1             	mov    %rax,%rcx
    461a:	e8 f1 dd ff ff       	call   2410 <xmlNewChild@plt>
    461f:	4c 89 ee             	mov    %r13,%rsi
    4622:	ba 03 00 00 00       	mov    $0x3,%edx
    4627:	4c 89 e7             	mov    %r12,%rdi
    462a:	e8 a1 24 00 00       	call   6ad0 <sys_stat_mem_get_delta>
    462f:	48 89 c7             	mov    %rax,%rdi
    4632:	e8 49 2b 00 00       	call   7180 <signedIntToXmlChar>
    4637:	31 f6                	xor    %esi,%esi
    4639:	48 89 ef             	mov    %rbp,%rdi
    463c:	48 8d 15 1e 64 00 00 	lea    0x641e(%rip),%rdx        # aa61 <__func__.2+0x1c1>
    4643:	48 89 c1             	mov    %rax,%rcx
    4646:	e8 c5 dd ff ff       	call   2410 <xmlNewChild@plt>
    464b:	4c 89 ee             	mov    %r13,%rsi
    464e:	ba 04 00 00 00       	mov    $0x4,%edx
    4653:	4c 89 e7             	mov    %r12,%rdi
    4656:	e8 75 24 00 00       	call   6ad0 <sys_stat_mem_get_delta>
    465b:	48 89 c7             	mov    %rax,%rdi
    465e:	e8 1d 2b 00 00       	call   7180 <signedIntToXmlChar>
    4663:	31 f6                	xor    %esi,%esi
    4665:	48 89 ef             	mov    %rbp,%rdi
    4668:	48 8d 15 f0 63 00 00 	lea    0x63f0(%rip),%rdx        # aa5f <__func__.2+0x1bf>
    466f:	48 89 c1             	mov    %rax,%rcx
    4672:	e8 99 dd ff ff       	call   2410 <xmlNewChild@plt>
    4677:	4c 89 ee             	mov    %r13,%rsi
    467a:	ba 05 00 00 00       	mov    $0x5,%edx
    467f:	4c 89 e7             	mov    %r12,%rdi
    4682:	e8 49 24 00 00       	call   6ad0 <sys_stat_mem_get_delta>
    4687:	48 89 c7             	mov    %rax,%rdi
    468a:	e8 f1 2a 00 00       	call   7180 <signedIntToXmlChar>
    468f:	31 f6                	xor    %esi,%esi
    4691:	48 89 ef             	mov    %rbp,%rdi
    4694:	48 8d 15 7d 5c 00 00 	lea    0x5c7d(%rip),%rdx        # a318 <args_doc_str.3+0x1480>
    469b:	48 89 c1             	mov    %rax,%rcx
    469e:	e8 6d dd ff ff       	call   2410 <xmlNewChild@plt>
    46a3:	4c 89 ee             	mov    %r13,%rsi
    46a6:	ba 06 00 00 00       	mov    $0x6,%edx
    46ab:	4c 89 e7             	mov    %r12,%rdi
    46ae:	e8 1d 24 00 00       	call   6ad0 <sys_stat_mem_get_delta>
    46b3:	48 89 c7             	mov    %rax,%rdi
    46b6:	e8 c5 2a 00 00       	call   7180 <signedIntToXmlChar>
    46bb:	31 f6                	xor    %esi,%esi
    46bd:	48 89 ef             	mov    %rbp,%rdi
    46c0:	48 8d 15 a5 63 00 00 	lea    0x63a5(%rip),%rdx        # aa6c <__func__.2+0x1cc>
    46c7:	48 89 c1             	mov    %rax,%rcx
    46ca:	e8 41 dd ff ff       	call   2410 <xmlNewChild@plt>
    46cf:	4c 89 ee             	mov    %r13,%rsi
    46d2:	ba 07 00 00 00       	mov    $0x7,%edx
    46d7:	4c 89 e7             	mov    %r12,%rdi
    46da:	e8 f1 23 00 00       	call   6ad0 <sys_stat_mem_get_delta>
    46df:	48 89 c7             	mov    %rax,%rdi
    46e2:	e8 99 2a 00 00       	call   7180 <signedIntToXmlChar>
    46e7:	48 89 ef             	mov    %rbp,%rdi
    46ea:	48 8d 15 83 63 00 00 	lea    0x6383(%rip),%rdx        # aa74 <__func__.2+0x1d4>
    46f1:	31 f6                	xor    %esi,%esi
    46f3:	48 89 c1             	mov    %rax,%rcx
    46f6:	e8 15 dd ff ff       	call   2410 <xmlNewChild@plt>
    46fb:	4c 89 ee             	mov    %r13,%rsi
    46fe:	ba 08 00 00 00       	mov    $0x8,%edx
    4703:	4c 89 e7             	mov    %r12,%rdi
    4706:	e8 c5 23 00 00       	call   6ad0 <sys_stat_mem_get_delta>
    470b:	48 89 c7             	mov    %rax,%rdi
    470e:	e8 6d 2a 00 00       	call   7180 <signedIntToXmlChar>
    4713:	48 89 ef             	mov    %rbp,%rdi
    4716:	48 8d 15 5e 63 00 00 	lea    0x635e(%rip),%rdx        # aa7b <__func__.2+0x1db>
    471d:	31 f6                	xor    %esi,%esi
    471f:	48 89 c1             	mov    %rax,%rcx
    4722:	e8 e9 dc ff ff       	call   2410 <xmlNewChild@plt>
    4727:	4c 89 ee             	mov    %r13,%rsi
    472a:	ba 09 00 00 00       	mov    $0x9,%edx
    472f:	4c 89 e7             	mov    %r12,%rdi
    4732:	e8 99 23 00 00       	call   6ad0 <sys_stat_mem_get_delta>
    4737:	48 89 c7             	mov    %rax,%rdi
    473a:	e8 41 2a 00 00       	call   7180 <signedIntToXmlChar>
    473f:	48 89 ef             	mov    %rbp,%rdi
    4742:	48 8d 15 d6 5b 00 00 	lea    0x5bd6(%rip),%rdx        # a31f <args_doc_str.3+0x1487>
    4749:	5d                   	pop    %rbp
    474a:	48 89 c1             	mov    %rax,%rcx
    474d:	41 5c                	pop    %r12
    474f:	31 f6                	xor    %esi,%esi
    4751:	41 5d                	pop    %r13
    4753:	e9 b8 dc ff ff       	jmp    2410 <xmlNewChild@plt>

0000000000004758 <makeBucketNode>:
    4758:	41 56                	push   %r14
    475a:	4d 89 c6             	mov    %r8,%r14
    475d:	41 55                	push   %r13
    475f:	41 89 f5             	mov    %esi,%r13d
    4762:	31 f6                	xor    %esi,%esi
    4764:	41 54                	push   %r12
    4766:	55                   	push   %rbp
    4767:	89 d5                	mov    %edx,%ebp
    4769:	48 8d 15 26 63 00 00 	lea    0x6326(%rip),%rdx        # aa96 <__func__.2+0x1f6>
    4770:	53                   	push   %rbx
    4771:	89 cb                	mov    %ecx,%ebx
    4773:	31 c9                	xor    %ecx,%ecx
    4775:	e8 96 dc ff ff       	call   2410 <xmlNewChild@plt>
    477a:	49 63 fd             	movslq %r13d,%rdi
    477d:	49 89 c4             	mov    %rax,%r12
    4780:	e8 fb 29 00 00       	call   7180 <signedIntToXmlChar>
    4785:	4c 89 e7             	mov    %r12,%rdi
    4788:	48 8d 35 14 63 00 00 	lea    0x6314(%rip),%rsi        # aaa3 <__func__.2+0x203>
    478f:	48 89 c2             	mov    %rax,%rdx
    4792:	e8 e9 dd ff ff       	call   2580 <xmlNewProp@plt>
    4797:	31 c9                	xor    %ecx,%ecx
    4799:	48 8d 15 09 63 00 00 	lea    0x6309(%rip),%rdx        # aaa9 <__func__.2+0x209>
    47a0:	31 f6                	xor    %esi,%esi
    47a2:	4c 89 e7             	mov    %r12,%rdi
    47a5:	e8 66 dc ff ff       	call   2410 <xmlNewChild@plt>
    47aa:	48 63 fd             	movslq %ebp,%rdi
    47ad:	49 89 c5             	mov    %rax,%r13
    47b0:	e8 cb 29 00 00       	call   7180 <signedIntToXmlChar>
    47b5:	48 8d 15 fd 62 00 00 	lea    0x62fd(%rip),%rdx        # aab9 <__func__.2+0x219>
    47bc:	31 f6                	xor    %esi,%esi
    47be:	4c 89 ef             	mov    %r13,%rdi
    47c1:	48 89 c1             	mov    %rax,%rcx
    47c4:	e8 47 dc ff ff       	call   2410 <xmlNewChild@plt>
    47c9:	48 63 fb             	movslq %ebx,%rdi
    47cc:	e8 af 29 00 00       	call   7180 <signedIntToXmlChar>
    47d1:	48 8d 15 ed 62 00 00 	lea    0x62ed(%rip),%rdx        # aac5 <__func__.2+0x225>
    47d8:	31 f6                	xor    %esi,%esi
    47da:	4c 89 ef             	mov    %r13,%rdi
    47dd:	48 89 c1             	mov    %rax,%rcx
    47e0:	e8 2b dc ff ff       	call   2410 <xmlNewChild@plt>
    47e5:	4c 89 f7             	mov    %r14,%rdi
    47e8:	e8 03 2a 00 00       	call   71f0 <unsignedIntToXmlChar>
    47ed:	4c 89 e7             	mov    %r12,%rdi
    47f0:	48 8d 15 da 62 00 00 	lea    0x62da(%rip),%rdx        # aad1 <__func__.2+0x231>
    47f7:	31 f6                	xor    %esi,%esi
    47f9:	48 89 c1             	mov    %rax,%rcx
    47fc:	e8 0f dc ff ff       	call   2410 <xmlNewChild@plt>
    4801:	5b                   	pop    %rbx
    4802:	4c 89 e0             	mov    %r12,%rax
    4805:	5d                   	pop    %rbp
    4806:	41 5c                	pop    %r12
    4808:	41 5d                	pop    %r13
    480a:	41 5e                	pop    %r14
    480c:	c3                   	ret    

000000000000480d <makeHistogramNode.isra.0>:
    480d:	41 57                	push   %r15
    480f:	31 c9                	xor    %ecx,%ecx
    4811:	41 56                	push   %r14
    4813:	41 55                	push   %r13
    4815:	49 89 fd             	mov    %rdi,%r13
    4818:	48 89 d7             	mov    %rdx,%rdi
    481b:	48 8d 15 a6 61 00 00 	lea    0x61a6(%rip),%rdx        # a9c8 <__func__.2+0x128>
    4822:	41 54                	push   %r12
    4824:	41 89 f4             	mov    %esi,%r12d
    4827:	31 f6                	xor    %esi,%esi
    4829:	55                   	push   %rbp
    482a:	53                   	push   %rbx
    482b:	48 83 ec 28          	sub    $0x28,%rsp
    482f:	e8 dc db ff ff       	call   2410 <xmlNewChild@plt>
    4834:	45 85 e4             	test   %r12d,%r12d
    4837:	48 8d 35 a3 62 00 00 	lea    0x62a3(%rip),%rsi        # aae1 <__func__.2+0x241>
    483e:	48 89 c5             	mov    %rax,%rbp
    4841:	74 11                	je     4854 <makeHistogramNode.isra.0+0x47>
    4843:	48 8d 15 91 62 00 00 	lea    0x6291(%rip),%rdx        # aadb <__func__.2+0x23b>
    484a:	48 89 c7             	mov    %rax,%rdi
    484d:	e8 2e dd ff ff       	call   2580 <xmlNewProp@plt>
    4852:	eb 0f                	jmp    4863 <makeHistogramNode.isra.0+0x56>
    4854:	48 8d 15 5c 64 00 00 	lea    0x645c(%rip),%rdx        # acb7 <__func__.2+0x417>
    485b:	48 89 c7             	mov    %rax,%rdi
    485e:	e8 1d dd ff ff       	call   2580 <xmlNewProp@plt>
    4863:	31 d2                	xor    %edx,%edx
    4865:	44 89 e6             	mov    %r12d,%esi
    4868:	4c 89 ef             	mov    %r13,%rdi
    486b:	41 be 01 00 00 00    	mov    $0x1,%r14d
    4871:	e8 8a 27 00 00       	call   7000 <get_histogram_bucket>
    4876:	b9 08 00 00 00       	mov    $0x8,%ecx
    487b:	31 d2                	xor    %edx,%edx
    487d:	31 f6                	xor    %esi,%esi
    487f:	4c 8b 00             	mov    (%rax),%r8
    4882:	48 89 ef             	mov    %rbp,%rdi
    4885:	48 89 c3             	mov    %rax,%rbx
    4888:	e8 cb fe ff ff       	call   4758 <makeBucketNode>
    488d:	44 89 f2             	mov    %r14d,%edx
    4890:	44 89 e6             	mov    %r12d,%esi
    4893:	4c 89 ef             	mov    %r13,%rdi
    4896:	e8 65 27 00 00       	call   7000 <get_histogram_bucket>
    489b:	45 31 c0             	xor    %r8d,%r8d
    489e:	49 89 c2             	mov    %rax,%r10
    48a1:	31 c0                	xor    %eax,%eax
    48a3:	4d 03 04 c2          	add    (%r10,%rax,8),%r8
    48a7:	48 ff c0             	inc    %rax
    48aa:	48 83 f8 10          	cmp    $0x10,%rax
    48ae:	75 f3                	jne    48a3 <makeHistogramNode.isra.0+0x96>
    48b0:	41 8d 4e 08          	lea    0x8(%r14),%ecx
    48b4:	41 8d 56 07          	lea    0x7(%r14),%edx
    48b8:	44 89 f6             	mov    %r14d,%esi
    48bb:	48 89 ef             	mov    %rbp,%rdi
    48be:	4c 89 54 24 10       	mov    %r10,0x10(%rsp)
    48c3:	45 31 ff             	xor    %r15d,%r15d
    48c6:	e8 8d fe ff ff       	call   4758 <makeBucketNode>
    48cb:	31 c9                	xor    %ecx,%ecx
    48cd:	48 8d 15 12 62 00 00 	lea    0x6212(%rip),%rdx        # aae6 <__func__.2+0x246>
    48d4:	31 f6                	xor    %esi,%esi
    48d6:	48 89 c7             	mov    %rax,%rdi
    48d9:	e8 32 db ff ff       	call   2410 <xmlNewChild@plt>
    48de:	4c 8b 54 24 10       	mov    0x10(%rsp),%r10
    48e3:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    48e8:	4b 8b 3c fa          	mov    (%r10,%r15,8),%rdi
    48ec:	4c 89 54 24 18       	mov    %r10,0x18(%rsp)
    48f1:	e8 fa 28 00 00       	call   71f0 <unsignedIntToXmlChar>
    48f6:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    48fb:	31 f6                	xor    %esi,%esi
    48fd:	48 8d 15 ef 61 00 00 	lea    0x61ef(%rip),%rdx        # aaf3 <__func__.2+0x253>
    4904:	48 89 c1             	mov    %rax,%rcx
    4907:	e8 04 db ff ff       	call   2410 <xmlNewChild@plt>
    490c:	4c 89 ff             	mov    %r15,%rdi
    490f:	49 ff c7             	inc    %r15
    4912:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    4917:	e8 64 28 00 00       	call   7180 <signedIntToXmlChar>
    491c:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    4921:	48 8d 35 7b 61 00 00 	lea    0x617b(%rip),%rsi        # aaa3 <__func__.2+0x203>
    4928:	48 89 c2             	mov    %rax,%rdx
    492b:	e8 50 dc ff ff       	call   2580 <xmlNewProp@plt>
    4930:	49 83 ff 10          	cmp    $0x10,%r15
    4934:	4c 8b 54 24 18       	mov    0x18(%rsp),%r10
    4939:	75 ad                	jne    48e8 <makeHistogramNode.isra.0+0xdb>
    493b:	41 ff c6             	inc    %r14d
    493e:	41 83 fe 10          	cmp    $0x10,%r14d
    4942:	0f 85 45 ff ff ff    	jne    488d <makeHistogramNode.isra.0+0x80>
    4948:	45 31 e4             	xor    %r12d,%r12d
    494b:	4e 8b 44 e3 40       	mov    0x40(%rbx,%r12,8),%r8
    4950:	41 8d 4c 24 18       	lea    0x18(%r12),%ecx
    4955:	31 f6                	xor    %esi,%esi
    4957:	48 89 ef             	mov    %rbp,%rdi
    495a:	41 8d 54 24 17       	lea    0x17(%r12),%edx
    495f:	49 ff c4             	inc    %r12
    4962:	e8 f1 fd ff ff       	call   4758 <makeBucketNode>
    4967:	49 83 fc 07          	cmp    $0x7,%r12
    496b:	75 de                	jne    494b <makeHistogramNode.isra.0+0x13e>
    496d:	4c 8b 43 78          	mov    0x78(%rbx),%r8
    4971:	48 83 c4 28          	add    $0x28,%rsp
    4975:	48 89 ef             	mov    %rbp,%rdi
    4978:	b9 20 00 00 00       	mov    $0x20,%ecx
    497d:	5b                   	pop    %rbx
    497e:	ba 1e 00 00 00       	mov    $0x1e,%edx
    4983:	5d                   	pop    %rbp
    4984:	31 f6                	xor    %esi,%esi
    4986:	41 5c                	pop    %r12
    4988:	41 5d                	pop    %r13
    498a:	41 5e                	pop    %r14
    498c:	41 5f                	pop    %r15
    498e:	e9 c5 fd ff ff       	jmp    4758 <makeBucketNode>

0000000000004993 <print_xml_report>:
    4993:	f3 0f 1e fa          	endbr64 
    4997:	41 57                	push   %r15
    4999:	41 56                	push   %r14
    499b:	41 55                	push   %r13
    499d:	41 89 d5             	mov    %edx,%r13d
    49a0:	41 54                	push   %r12
    49a2:	55                   	push   %rbp
    49a3:	53                   	push   %rbx
    49a4:	48 89 f3             	mov    %rsi,%rbx
    49a7:	48 83 ec 68          	sub    $0x68,%rsp
    49ab:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    49b0:	bf b1 51 00 00       	mov    $0x51b1,%edi
    49b5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    49bc:	00 00 
    49be:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    49c3:	31 c0                	xor    %eax,%eax
    49c5:	e8 96 dc ff ff       	call   2660 <xmlCheckVersion@plt>
    49ca:	48 8d 3d 7a 61 00 00 	lea    0x617a(%rip),%rdi        # ab4b <__func__.2+0x2ab>
    49d1:	e8 0a dc ff ff       	call   25e0 <xmlNewDoc@plt>
    49d6:	31 c9                	xor    %ecx,%ecx
    49d8:	48 8d 15 70 61 00 00 	lea    0x6170(%rip),%rdx        # ab4f <__func__.2+0x2af>
    49df:	31 f6                	xor    %esi,%esi
    49e1:	48 89 c7             	mov    %rax,%rdi
    49e4:	48 89 05 ed b6 00 00 	mov    %rax,0xb6ed(%rip)        # 100d8 <xdoc>
    49eb:	e8 c0 dc ff ff       	call   26b0 <xmlNewDocNode@plt>
    49f0:	48 8b 3d e1 b6 00 00 	mov    0xb6e1(%rip),%rdi        # 100d8 <xdoc>
    49f7:	48 89 c6             	mov    %rax,%rsi
    49fa:	48 89 05 cf b6 00 00 	mov    %rax,0xb6cf(%rip)        # 100d0 <pmbenchmarknode>
    4a01:	e8 9a dc ff ff       	call   26a0 <xmlDocSetRootElement@plt>
    4a06:	48 8b 3d c3 b6 00 00 	mov    0xb6c3(%rip),%rdi        # 100d0 <pmbenchmarknode>
    4a0d:	31 c9                	xor    %ecx,%ecx
    4a0f:	31 f6                	xor    %esi,%esi
    4a11:	48 8d 15 43 61 00 00 	lea    0x6143(%rip),%rdx        # ab5b <__func__.2+0x2bb>
    4a18:	e8 f3 d9 ff ff       	call   2410 <xmlNewChild@plt>
    4a1d:	31 c9                	xor    %ecx,%ecx
    4a1f:	31 f6                	xor    %esi,%esi
    4a21:	48 8d 15 3a 61 00 00 	lea    0x613a(%rip),%rdx        # ab62 <__func__.2+0x2c2>
    4a28:	48 89 c7             	mov    %rax,%rdi
    4a2b:	49 89 c7             	mov    %rax,%r15
    4a2e:	e8 dd d9 ff ff       	call   2410 <xmlNewChild@plt>
    4a33:	31 c9                	xor    %ecx,%ecx
    4a35:	31 f6                	xor    %esi,%esi
    4a37:	48 8d 15 2e 61 00 00 	lea    0x612e(%rip),%rdx        # ab6c <__func__.2+0x2cc>
    4a3e:	48 89 c7             	mov    %rax,%rdi
    4a41:	49 89 c4             	mov    %rax,%r12
    4a44:	e8 c7 d9 ff ff       	call   2410 <xmlNewChild@plt>
    4a49:	31 f6                	xor    %esi,%esi
    4a4b:	48 8d 0d 27 61 00 00 	lea    0x6127(%rip),%rcx        # ab79 <__func__.2+0x2d9>
    4a52:	48 8d 15 2c 61 00 00 	lea    0x612c(%rip),%rdx        # ab85 <__func__.2+0x2e5>
    4a59:	48 89 c5             	mov    %rax,%rbp
    4a5c:	48 89 c7             	mov    %rax,%rdi
    4a5f:	e8 ac d9 ff ff       	call   2410 <xmlNewChild@plt>
    4a64:	31 f6                	xor    %esi,%esi
    4a66:	48 89 ef             	mov    %rbp,%rdi
    4a69:	48 8d 0d 24 61 00 00 	lea    0x6124(%rip),%rcx        # ab94 <__func__.2+0x2f4>
    4a70:	48 8d 15 36 61 00 00 	lea    0x6136(%rip),%rdx        # abad <__func__.2+0x30d>
    4a77:	e8 94 d9 ff ff       	call   2410 <xmlNewChild@plt>
    4a7c:	31 f6                	xor    %esi,%esi
    4a7e:	48 89 ef             	mov    %rbp,%rdi
    4a81:	48 8d 0d b2 63 00 00 	lea    0x63b2(%rip),%rcx        # ae3a <xmloutput_version>
    4a88:	48 8d 15 2e 61 00 00 	lea    0x612e(%rip),%rdx        # abbd <__func__.2+0x31d>
    4a8f:	e8 7c d9 ff ff       	call   2410 <xmlNewChild@plt>
    4a94:	e8 97 21 00 00       	call   6c30 <sys_get_hostname>
    4a99:	31 c9                	xor    %ecx,%ecx
    4a9b:	31 f6                	xor    %esi,%esi
    4a9d:	48 8d 15 2b 61 00 00 	lea    0x612b(%rip),%rdx        # abcf <__func__.2+0x32f>
    4aa4:	4c 89 e7             	mov    %r12,%rdi
    4aa7:	49 89 c6             	mov    %rax,%r14
    4aaa:	e8 61 d9 ff ff       	call   2410 <xmlNewChild@plt>
    4aaf:	31 f6                	xor    %esi,%esi
    4ab1:	4c 89 f1             	mov    %r14,%rcx
    4ab4:	48 8d 15 1c 61 00 00 	lea    0x611c(%rip),%rdx        # abd7 <__func__.2+0x337>
    4abb:	48 89 c5             	mov    %rax,%rbp
    4abe:	48 89 c7             	mov    %rax,%rdi
    4ac1:	e8 4a d9 ff ff       	call   2410 <xmlNewChild@plt>
    4ac6:	31 c9                	xor    %ecx,%ecx
    4ac8:	31 f6                	xor    %esi,%esi
    4aca:	48 8d 15 0f 61 00 00 	lea    0x610f(%rip),%rdx        # abe0 <__func__.2+0x340>
    4ad1:	48 89 ef             	mov    %rbp,%rdi
    4ad4:	e8 37 d9 ff ff       	call   2410 <xmlNewChild@plt>
    4ad9:	31 ff                	xor    %edi,%edi
    4adb:	48 89 c5             	mov    %rax,%rbp
    4ade:	e8 9d 21 00 00       	call   6c80 <sys_get_os_version_string>
    4ae3:	31 f6                	xor    %esi,%esi
    4ae5:	48 8d 15 01 61 00 00 	lea    0x6101(%rip),%rdx        # abed <__func__.2+0x34d>
    4aec:	48 89 ef             	mov    %rbp,%rdi
    4aef:	48 89 c1             	mov    %rax,%rcx
    4af2:	e8 19 d9 ff ff       	call   2410 <xmlNewChild@plt>
    4af7:	31 c0                	xor    %eax,%eax
    4af9:	e8 b2 21 00 00       	call   6cb0 <sys_get_cpu_arch>
    4afe:	31 f6                	xor    %esi,%esi
    4b00:	48 8d 15 ee 60 00 00 	lea    0x60ee(%rip),%rdx        # abf5 <__func__.2+0x355>
    4b07:	48 89 ef             	mov    %rbp,%rdi
    4b0a:	48 89 c1             	mov    %rax,%rcx
    4b0d:	e8 fe d8 ff ff       	call   2410 <xmlNewChild@plt>
    4b12:	bf 04 00 00 00       	mov    $0x4,%edi
    4b17:	e8 64 21 00 00       	call   6c80 <sys_get_os_version_string>
    4b1c:	31 f6                	xor    %esi,%esi
    4b1e:	48 8d 15 d5 60 00 00 	lea    0x60d5(%rip),%rdx        # abfa <__func__.2+0x35a>
    4b25:	48 89 ef             	mov    %rbp,%rdi
    4b28:	48 89 c1             	mov    %rax,%rcx
    4b2b:	e8 e0 d8 ff ff       	call   2410 <xmlNewChild@plt>
    4b30:	83 3d 81 9e 00 00 00 	cmpl   $0x0,0x9e81(%rip)        # e9b8 <gl_goodtime>
    4b37:	74 08                	je     4b41 <print_xml_report+0x1ae>
    4b39:	4c 89 e7             	mov    %r12,%rdi
    4b3c:	e8 8f 27 00 00       	call   72d0 <makeTimeInfoNode>
    4b41:	e8 8a 23 00 00       	call   6ed0 <sys_get_uuid>
    4b46:	31 f6                	xor    %esi,%esi
    4b48:	48 8d 15 b3 60 00 00 	lea    0x60b3(%rip),%rdx        # ac02 <__func__.2+0x362>
    4b4f:	4c 89 e7             	mov    %r12,%rdi
    4b52:	48 89 c1             	mov    %rax,%rcx
    4b55:	e8 b6 d8 ff ff       	call   2410 <xmlNewChild@plt>
    4b5a:	31 c9                	xor    %ecx,%ecx
    4b5c:	31 f6                	xor    %esi,%esi
    4b5e:	48 8d 15 a2 60 00 00 	lea    0x60a2(%rip),%rdx        # ac07 <__func__.2+0x367>
    4b65:	4c 89 e7             	mov    %r12,%rdi
    4b68:	e8 a3 d8 ff ff       	call   2410 <xmlNewChild@plt>
    4b6d:	48 63 3b             	movslq (%rbx),%rdi
    4b70:	48 89 c5             	mov    %rax,%rbp
    4b73:	e8 78 26 00 00       	call   71f0 <unsignedIntToXmlChar>
    4b78:	31 f6                	xor    %esi,%esi
    4b7a:	48 8d 15 8d 60 00 00 	lea    0x608d(%rip),%rdx        # ac0e <__func__.2+0x36e>
    4b81:	48 89 ef             	mov    %rbp,%rdi
    4b84:	48 89 c1             	mov    %rax,%rcx
    4b87:	e8 84 d8 ff ff       	call   2410 <xmlNewChild@plt>
    4b8c:	48 63 7b 08          	movslq 0x8(%rbx),%rdi
    4b90:	e8 5b 26 00 00       	call   71f0 <unsignedIntToXmlChar>
    4b95:	31 f6                	xor    %esi,%esi
    4b97:	48 8d 15 d8 37 00 00 	lea    0x37d8(%rip),%rdx        # 8376 <_IO_stdin_used+0x376>
    4b9e:	48 89 ef             	mov    %rbp,%rdi
    4ba1:	48 89 c1             	mov    %rax,%rcx
    4ba4:	e8 67 d8 ff ff       	call   2410 <xmlNewChild@plt>
    4ba9:	48 63 7b 0c          	movslq 0xc(%rbx),%rdi
    4bad:	e8 3e 26 00 00       	call   71f0 <unsignedIntToXmlChar>
    4bb2:	31 f6                	xor    %esi,%esi
    4bb4:	48 8d 15 dc 37 00 00 	lea    0x37dc(%rip),%rdx        # 8397 <_IO_stdin_used+0x397>
    4bbb:	48 89 ef             	mov    %rbp,%rdi
    4bbe:	48 89 c1             	mov    %rax,%rcx
    4bc1:	e8 4a d8 ff ff       	call   2410 <xmlNewChild@plt>
    4bc6:	48 63 7b 54          	movslq 0x54(%rbx),%rdi
    4bca:	e8 b1 25 00 00       	call   7180 <signedIntToXmlChar>
    4bcf:	31 f6                	xor    %esi,%esi
    4bd1:	48 8d 15 71 38 00 00 	lea    0x3871(%rip),%rdx        # 8449 <_IO_stdin_used+0x449>
    4bd8:	48 89 ef             	mov    %rbp,%rdi
    4bdb:	48 89 c1             	mov    %rax,%rcx
    4bde:	e8 2d d8 ff ff       	call   2410 <xmlNewChild@plt>
    4be3:	f2 0f 10 43 30       	movsd  0x30(%rbx),%xmm0
    4be8:	e8 13 25 00 00       	call   7100 <floatToXmlChar>
    4bed:	31 f6                	xor    %esi,%esi
    4bef:	48 8d 15 e7 37 00 00 	lea    0x37e7(%rip),%rdx        # 83dd <_IO_stdin_used+0x3dd>
    4bf6:	48 89 ef             	mov    %rbp,%rdi
    4bf9:	48 89 c1             	mov    %rax,%rcx
    4bfc:	e8 0f d8 ff ff       	call   2410 <xmlNewChild@plt>
    4c01:	48 63 7b 38          	movslq 0x38(%rbx),%rdi
    4c05:	e8 e6 25 00 00       	call   71f0 <unsignedIntToXmlChar>
    4c0a:	31 f6                	xor    %esi,%esi
    4c0c:	48 8d 15 f1 37 00 00 	lea    0x37f1(%rip),%rdx        # 8404 <_IO_stdin_used+0x404>
    4c13:	48 89 ef             	mov    %rbp,%rdi
    4c16:	48 89 c1             	mov    %rax,%rcx
    4c19:	e8 f2 d7 ff ff       	call   2410 <xmlNewChild@plt>
    4c1e:	48 63 7b 3c          	movslq 0x3c(%rbx),%rdi
    4c22:	e8 c9 25 00 00       	call   71f0 <unsignedIntToXmlChar>
    4c27:	31 f6                	xor    %esi,%esi
    4c29:	48 8d 15 e0 37 00 00 	lea    0x37e0(%rip),%rdx        # 8410 <_IO_stdin_used+0x410>
    4c30:	48 89 ef             	mov    %rbp,%rdi
    4c33:	48 89 c1             	mov    %rax,%rcx
    4c36:	e8 d5 d7 ff ff       	call   2410 <xmlNewChild@plt>
    4c3b:	48 63 7b 40          	movslq 0x40(%rbx),%rdi
    4c3f:	e8 ac 25 00 00       	call   71f0 <unsignedIntToXmlChar>
    4c44:	31 f6                	xor    %esi,%esi
    4c46:	48 8d 15 c9 37 00 00 	lea    0x37c9(%rip),%rdx        # 8416 <_IO_stdin_used+0x416>
    4c4d:	48 89 ef             	mov    %rbp,%rdi
    4c50:	48 89 c1             	mov    %rax,%rcx
    4c53:	e8 b8 d7 ff ff       	call   2410 <xmlNewChild@plt>
    4c58:	48 63 7b 60          	movslq 0x60(%rbx),%rdi
    4c5c:	e8 1f 25 00 00       	call   7180 <signedIntToXmlChar>
    4c61:	48 8d 15 d3 37 00 00 	lea    0x37d3(%rip),%rdx        # 843b <_IO_stdin_used+0x43b>
    4c68:	31 f6                	xor    %esi,%esi
    4c6a:	48 89 ef             	mov    %rbp,%rdi
    4c6d:	48 89 c1             	mov    %rax,%rcx
    4c70:	e8 9b d7 ff ff       	call   2410 <xmlNewChild@plt>
    4c75:	48 63 7b 64          	movslq 0x64(%rbx),%rdi
    4c79:	e8 02 25 00 00       	call   7180 <signedIntToXmlChar>
    4c7e:	48 8d 15 aa 37 00 00 	lea    0x37aa(%rip),%rdx        # 842f <_IO_stdin_used+0x42f>
    4c85:	31 f6                	xor    %esi,%esi
    4c87:	48 89 ef             	mov    %rbp,%rdi
    4c8a:	48 89 c1             	mov    %rax,%rcx
    4c8d:	e8 7e d7 ff ff       	call   2410 <xmlNewChild@plt>
    4c92:	48 8b 43 18          	mov    0x18(%rbx),%rax
    4c96:	48 85 c0             	test   %rax,%rax
    4c99:	74 1a                	je     4cb5 <print_xml_report+0x322>
    4c9b:	48 8b 48 20          	mov    0x20(%rax),%rcx
    4c9f:	48 85 c9             	test   %rcx,%rcx
    4ca2:	74 11                	je     4cb5 <print_xml_report+0x322>
    4ca4:	48 8d 15 22 37 00 00 	lea    0x3722(%rip),%rdx        # 83cd <_IO_stdin_used+0x3cd>
    4cab:	31 f6                	xor    %esi,%esi
    4cad:	48 89 ef             	mov    %rbp,%rdi
    4cb0:	e8 5b d7 ff ff       	call   2410 <xmlNewChild@plt>
    4cb5:	48 8b 43 10          	mov    0x10(%rbx),%rax
    4cb9:	48 85 c0             	test   %rax,%rax
    4cbc:	74 1a                	je     4cd8 <print_xml_report+0x345>
    4cbe:	48 8b 48 20          	mov    0x20(%rax),%rcx
    4cc2:	48 85 c9             	test   %rcx,%rcx
    4cc5:	74 11                	je     4cd8 <print_xml_report+0x345>
    4cc7:	48 8d 15 f1 36 00 00 	lea    0x36f1(%rip),%rdx        # 83bf <_IO_stdin_used+0x3bf>
    4cce:	31 f6                	xor    %esi,%esi
    4cd0:	48 89 ef             	mov    %rbp,%rdi
    4cd3:	e8 38 d7 ff ff       	call   2410 <xmlNewChild@plt>
    4cd8:	48 8b 43 48          	mov    0x48(%rbx),%rax
    4cdc:	48 85 c0             	test   %rax,%rax
    4cdf:	74 1a                	je     4cfb <print_xml_report+0x368>
    4ce1:	48 8b 48 18          	mov    0x18(%rax),%rcx
    4ce5:	48 85 c9             	test   %rcx,%rcx
    4ce8:	74 11                	je     4cfb <print_xml_report+0x368>
    4cea:	48 8d 15 26 5f 00 00 	lea    0x5f26(%rip),%rdx        # ac17 <__func__.2+0x377>
    4cf1:	31 f6                	xor    %esi,%esi
    4cf3:	48 89 ef             	mov    %rbp,%rdi
    4cf6:	e8 15 d7 ff ff       	call   2410 <xmlNewChild@plt>
    4cfb:	45 85 ed             	test   %r13d,%r13d
    4cfe:	74 18                	je     4d18 <print_xml_report+0x385>
    4d00:	48 8d 0d 16 5f 00 00 	lea    0x5f16(%rip),%rcx        # ac1d <__func__.2+0x37d>
    4d07:	48 8d 15 11 5f 00 00 	lea    0x5f11(%rip),%rdx        # ac1f <__func__.2+0x37f>
    4d0e:	31 f6                	xor    %esi,%esi
    4d10:	4c 89 e7             	mov    %r12,%rdi
    4d13:	e8 f8 d6 ff ff       	call   2410 <xmlNewChild@plt>
    4d18:	4c 8d 6c 24 28       	lea    0x28(%rsp),%r13
    4d1d:	4c 8d 25 14 5f 00 00 	lea    0x5f14(%rip),%r12        # ac38 <__func__.2+0x398>
    4d24:	4c 89 ef             	mov    %r13,%rdi
    4d27:	e8 84 12 00 00       	call   5fb0 <__cpuid_obtain_brand_string>
    4d2c:	31 c9                	xor    %ecx,%ecx
    4d2e:	31 f6                	xor    %esi,%esi
    4d30:	4c 89 ff             	mov    %r15,%rdi
    4d33:	85 c0                	test   %eax,%eax
    4d35:	48 8d 15 ef 5e 00 00 	lea    0x5eef(%rip),%rdx        # ac2b <__func__.2+0x38b>
    4d3c:	74 1a                	je     4d58 <print_xml_report+0x3c5>
    4d3e:	e8 cd d6 ff ff       	call   2410 <xmlNewChild@plt>
    4d43:	4c 89 e9             	mov    %r13,%rcx
    4d46:	4c 89 e2             	mov    %r12,%rdx
    4d49:	31 f6                	xor    %esi,%esi
    4d4b:	48 89 c7             	mov    %rax,%rdi
    4d4e:	48 89 c5             	mov    %rax,%rbp
    4d51:	e8 ba d6 ff ff       	call   2410 <xmlNewChild@plt>
    4d56:	eb 1c                	jmp    4d74 <print_xml_report+0x3e1>
    4d58:	e8 b3 d6 ff ff       	call   2410 <xmlNewChild@plt>
    4d5d:	48 8d 0d de 5e 00 00 	lea    0x5ede(%rip),%rcx        # ac42 <__func__.2+0x3a2>
    4d64:	4c 89 e2             	mov    %r12,%rdx
    4d67:	31 f6                	xor    %esi,%esi
    4d69:	48 89 c7             	mov    %rax,%rdi
    4d6c:	48 89 c5             	mov    %rax,%rbp
    4d6f:	e8 9c d6 ff ff       	call   2410 <xmlNewChild@plt>
    4d74:	8b 3d 2e 9b 00 00    	mov    0x9b2e(%rip),%edi        # e8a8 <freq_khz>
    4d7a:	45 31 e4             	xor    %r12d,%r12d
    4d7d:	4c 8d 35 1f 5d 00 00 	lea    0x5d1f(%rip),%r14        # aaa3 <__func__.2+0x203>
    4d84:	e8 67 24 00 00       	call   71f0 <unsignedIntToXmlChar>
    4d89:	48 8d 15 be 5e 00 00 	lea    0x5ebe(%rip),%rdx        # ac4e <__func__.2+0x3ae>
    4d90:	31 f6                	xor    %esi,%esi
    4d92:	48 89 ef             	mov    %rbp,%rdi
    4d95:	48 89 c1             	mov    %rax,%rcx
    4d98:	e8 73 d6 ff ff       	call   2410 <xmlNewChild@plt>
    4d9d:	8b 05 3d 9e 00 00    	mov    0x9e3d(%rip),%eax        # ebe0 <gl_tlb_info_buf_len>
    4da3:	31 c9                	xor    %ecx,%ecx
    4da5:	31 f6                	xor    %esi,%esi
    4da7:	48 8d 15 a9 5e 00 00 	lea    0x5ea9(%rip),%rdx        # ac57 <__func__.2+0x3b7>
    4dae:	48 89 ef             	mov    %rbp,%rdi
    4db1:	89 44 24 04          	mov    %eax,0x4(%rsp)
    4db5:	e8 56 d6 ff ff       	call   2410 <xmlNewChild@plt>
    4dba:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)
    4dbf:	4c 8d 0d 9a 5e 00 00 	lea    0x5e9a(%rip),%r9        # ac60 <__func__.2+0x3c0>
    4dc6:	48 89 c3             	mov    %rax,%rbx
    4dc9:	45 89 e2             	mov    %r12d,%r10d
    4dcc:	44 39 64 24 04       	cmp    %r12d,0x4(%rsp)
    4dd1:	7e 5c                	jle    4e2f <print_xml_report+0x49c>
    4dd3:	4c 89 ca             	mov    %r9,%rdx
    4dd6:	31 c9                	xor    %ecx,%ecx
    4dd8:	31 f6                	xor    %esi,%esi
    4dda:	48 89 df             	mov    %rbx,%rdi
    4ddd:	44 89 54 24 18       	mov    %r10d,0x18(%rsp)
    4de2:	e8 29 d6 ff ff       	call   2410 <xmlNewChild@plt>
    4de7:	4c 89 e7             	mov    %r12,%rdi
    4dea:	49 ff c4             	inc    %r12
    4ded:	49 89 c5             	mov    %rax,%r13
    4df0:	e8 fb 23 00 00       	call   71f0 <unsignedIntToXmlChar>
    4df5:	4c 89 f6             	mov    %r14,%rsi
    4df8:	4c 89 ef             	mov    %r13,%rdi
    4dfb:	48 89 c2             	mov    %rax,%rdx
    4dfe:	e8 7d d7 ff ff       	call   2580 <xmlNewProp@plt>
    4e03:	8b 7c 24 18          	mov    0x18(%rsp),%edi
    4e07:	e8 e4 12 00 00       	call   60f0 <get_tlb_info>
    4e0c:	0f b6 f8             	movzbl %al,%edi
    4e0f:	e8 4c 24 00 00       	call   7260 <byteToXmlChar>
    4e14:	48 8d 35 e9 5d 00 00 	lea    0x5de9(%rip),%rsi        # ac04 <__func__.2+0x364>
    4e1b:	4c 89 ef             	mov    %r13,%rdi
    4e1e:	48 89 c2             	mov    %rax,%rdx
    4e21:	e8 5a d7 ff ff       	call   2580 <xmlNewProp@plt>
    4e26:	4c 8d 0d 33 5e 00 00 	lea    0x5e33(%rip),%r9        # ac60 <__func__.2+0x3c0>
    4e2d:	eb 9a                	jmp    4dc9 <print_xml_report+0x436>
    4e2f:	44 8b 2d 12 9d 00 00 	mov    0x9d12(%rip),%r13d        # eb48 <gl_det_cache_info_len>
    4e36:	31 f6                	xor    %esi,%esi
    4e38:	31 c9                	xor    %ecx,%ecx
    4e3a:	48 89 ef             	mov    %rbp,%rdi
    4e3d:	48 8d 15 25 5e 00 00 	lea    0x5e25(%rip),%rdx        # ac69 <__func__.2+0x3c9>
    4e44:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
    4e49:	e8 c2 d5 ff ff       	call   2410 <xmlNewChild@plt>
    4e4e:	45 85 ed             	test   %r13d,%r13d
    4e51:	48 8d 35 3c 36 00 00 	lea    0x363c(%rip),%rsi        # 8494 <_IO_stdin_used+0x494>
    4e58:	49 89 c6             	mov    %rax,%r14
    4e5b:	75 14                	jne    4e71 <print_xml_report+0x4de>
    4e5d:	48 8d 15 e9 5c 00 00 	lea    0x5ce9(%rip),%rdx        # ab4d <__func__.2+0x2ad>
    4e64:	48 89 c7             	mov    %rax,%rdi
    4e67:	e8 14 d7 ff ff       	call   2580 <xmlNewProp@plt>
    4e6c:	e9 47 01 00 00       	jmp    4fb8 <print_xml_report+0x625>
    4e71:	48 8d 15 a5 5d 00 00 	lea    0x5da5(%rip),%rdx        # ac1d <__func__.2+0x37d>
    4e78:	48 89 c7             	mov    %rax,%rdi
    4e7b:	31 ed                	xor    %ebp,%ebp
    4e7d:	e8 fe d6 ff ff       	call   2580 <xmlNewProp@plt>
    4e82:	4c 8d 0d eb 5d 00 00 	lea    0x5deb(%rip),%r9        # ac74 <__func__.2+0x3d4>
    4e89:	41 39 ed             	cmp    %ebp,%r13d
    4e8c:	0f 8e 26 01 00 00    	jle    4fb8 <print_xml_report+0x625>
    4e92:	4c 89 ca             	mov    %r9,%rdx
    4e95:	31 c9                	xor    %ecx,%ecx
    4e97:	31 f6                	xor    %esi,%esi
    4e99:	4c 89 f7             	mov    %r14,%rdi
    4e9c:	e8 6f d5 ff ff       	call   2410 <xmlNewChild@plt>
    4ea1:	89 ef                	mov    %ebp,%edi
    4ea3:	49 89 c4             	mov    %rax,%r12
    4ea6:	e8 65 12 00 00       	call   6110 <get_cache_type>
    4eab:	48 8d 35 2f 5c 00 00 	lea    0x5c2f(%rip),%rsi        # aae1 <__func__.2+0x241>
    4eb2:	4c 89 e7             	mov    %r12,%rdi
    4eb5:	48 89 c2             	mov    %rax,%rdx
    4eb8:	e8 c3 d6 ff ff       	call   2580 <xmlNewProp@plt>
    4ebd:	be 04 00 00 00       	mov    $0x4,%esi
    4ec2:	89 ef                	mov    %ebp,%edi
    4ec4:	e8 b7 12 00 00       	call   6180 <get_cache_info>
    4ec9:	48 63 f8             	movslq %eax,%rdi
    4ecc:	e8 af 22 00 00       	call   7180 <signedIntToXmlChar>
    4ed1:	48 8d 15 a2 5d 00 00 	lea    0x5da2(%rip),%rdx        # ac7a <__func__.2+0x3da>
    4ed8:	31 f6                	xor    %esi,%esi
    4eda:	4c 89 e7             	mov    %r12,%rdi
    4edd:	48 89 c1             	mov    %rax,%rcx
    4ee0:	e8 2b d5 ff ff       	call   2410 <xmlNewChild@plt>
    4ee5:	be 05 00 00 00       	mov    $0x5,%esi
    4eea:	89 ef                	mov    %ebp,%edi
    4eec:	e8 8f 12 00 00       	call   6180 <get_cache_info>
    4ef1:	48 63 f8             	movslq %eax,%rdi
    4ef4:	e8 87 22 00 00       	call   7180 <signedIntToXmlChar>
    4ef9:	48 8d 15 80 5d 00 00 	lea    0x5d80(%rip),%rdx        # ac80 <__func__.2+0x3e0>
    4f00:	31 f6                	xor    %esi,%esi
    4f02:	4c 89 e7             	mov    %r12,%rdi
    4f05:	48 89 c1             	mov    %rax,%rcx
    4f08:	e8 03 d5 ff ff       	call   2410 <xmlNewChild@plt>
    4f0d:	31 f6                	xor    %esi,%esi
    4f0f:	89 ef                	mov    %ebp,%edi
    4f11:	e8 6a 12 00 00       	call   6180 <get_cache_info>
    4f16:	48 63 f8             	movslq %eax,%rdi
    4f19:	e8 62 22 00 00       	call   7180 <signedIntToXmlChar>
    4f1e:	48 8d 15 64 5d 00 00 	lea    0x5d64(%rip),%rdx        # ac89 <__func__.2+0x3e9>
    4f25:	31 f6                	xor    %esi,%esi
    4f27:	4c 89 e7             	mov    %r12,%rdi
    4f2a:	48 89 c1             	mov    %rax,%rcx
    4f2d:	e8 de d4 ff ff       	call   2410 <xmlNewChild@plt>
    4f32:	be 01 00 00 00       	mov    $0x1,%esi
    4f37:	89 ef                	mov    %ebp,%edi
    4f39:	e8 42 12 00 00       	call   6180 <get_cache_info>
    4f3e:	48 63 f8             	movslq %eax,%rdi
    4f41:	e8 3a 22 00 00       	call   7180 <signedIntToXmlChar>
    4f46:	48 8d 15 41 5d 00 00 	lea    0x5d41(%rip),%rdx        # ac8e <__func__.2+0x3ee>
    4f4d:	31 f6                	xor    %esi,%esi
    4f4f:	4c 89 e7             	mov    %r12,%rdi
    4f52:	48 89 c1             	mov    %rax,%rcx
    4f55:	e8 b6 d4 ff ff       	call   2410 <xmlNewChild@plt>
    4f5a:	be 02 00 00 00       	mov    $0x2,%esi
    4f5f:	89 ef                	mov    %ebp,%edi
    4f61:	e8 1a 12 00 00       	call   6180 <get_cache_info>
    4f66:	48 63 f8             	movslq %eax,%rdi
    4f69:	e8 12 22 00 00       	call   7180 <signedIntToXmlChar>
    4f6e:	48 8d 15 22 5d 00 00 	lea    0x5d22(%rip),%rdx        # ac97 <__func__.2+0x3f7>
    4f75:	31 f6                	xor    %esi,%esi
    4f77:	4c 89 e7             	mov    %r12,%rdi
    4f7a:	48 89 c1             	mov    %rax,%rcx
    4f7d:	e8 8e d4 ff ff       	call   2410 <xmlNewChild@plt>
    4f82:	be 03 00 00 00       	mov    $0x3,%esi
    4f87:	89 ef                	mov    %ebp,%edi
    4f89:	ff c5                	inc    %ebp
    4f8b:	e8 f0 11 00 00       	call   6180 <get_cache_info>
    4f90:	48 63 f8             	movslq %eax,%rdi
    4f93:	e8 e8 21 00 00       	call   7180 <signedIntToXmlChar>
    4f98:	48 8d 15 03 5d 00 00 	lea    0x5d03(%rip),%rdx        # aca2 <__func__.2+0x402>
    4f9f:	31 f6                	xor    %esi,%esi
    4fa1:	4c 89 e7             	mov    %r12,%rdi
    4fa4:	48 89 c1             	mov    %rax,%rcx
    4fa7:	e8 64 d4 ff ff       	call   2410 <xmlNewChild@plt>
    4fac:	4c 8d 0d c1 5c 00 00 	lea    0x5cc1(%rip),%r9        # ac74 <__func__.2+0x3d4>
    4fb3:	e9 d1 fe ff ff       	jmp    4e89 <print_xml_report+0x4f6>
    4fb8:	31 c9                	xor    %ecx,%ecx
    4fba:	48 8d 15 e6 5c 00 00 	lea    0x5ce6(%rip),%rdx        # aca7 <__func__.2+0x407>
    4fc1:	31 f6                	xor    %esi,%esi
    4fc3:	4c 89 ff             	mov    %r15,%rdi
    4fc6:	e8 45 d4 ff ff       	call   2410 <xmlNewChild@plt>
    4fcb:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
    4fd0:	45 31 ed             	xor    %r13d,%r13d
    4fd3:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    4fd8:	44 39 2d 31 99 00 00 	cmp    %r13d,0x9931(%rip)        # e910 <params+0x50>
    4fdf:	44 89 ef             	mov    %r13d,%edi
    4fe2:	0f 8e 46 04 00 00    	jle    542e <print_xml_report+0xa9b>
    4fe8:	e8 33 09 00 00       	call   5920 <get_result>
    4fed:	48 89 c5             	mov    %rax,%rbp
    4ff0:	8b 05 b2 98 00 00    	mov    0x98b2(%rip),%eax        # e8a8 <freq_khz>
    4ff6:	f3 48 0f 2a d8       	cvtsi2ss %rax,%xmm3
    4ffb:	48 8b 45 00          	mov    0x0(%rbp),%rax
    4fff:	48 85 c0             	test   %rax,%rax
    5002:	78 07                	js     500b <print_xml_report+0x678>
    5004:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    5009:	eb 15                	jmp    5020 <print_xml_report+0x68d>
    500b:	48 89 c2             	mov    %rax,%rdx
    500e:	83 e0 01             	and    $0x1,%eax
    5011:	48 d1 ea             	shr    %rdx
    5014:	48 09 c2             	or     %rax,%rdx
    5017:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    501c:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    5020:	48 8b 45 08          	mov    0x8(%rbp),%rax
    5024:	48 85 c0             	test   %rax,%rax
    5027:	78 07                	js     5030 <print_xml_report+0x69d>
    5029:	f3 48 0f 2a c8       	cvtsi2ss %rax,%xmm1
    502e:	eb 15                	jmp    5045 <print_xml_report+0x6b2>
    5030:	48 89 c2             	mov    %rax,%rdx
    5033:	83 e0 01             	and    $0x1,%eax
    5036:	48 d1 ea             	shr    %rdx
    5039:	48 09 c2             	or     %rax,%rdx
    503c:	f3 48 0f 2a ca       	cvtsi2ss %rdx,%xmm1
    5041:	f3 0f 58 c9          	addss  %xmm1,%xmm1
    5045:	f3 0f 5e c1          	divss  %xmm1,%xmm0
    5049:	48 8b 45 20          	mov    0x20(%rbp),%rax
    504d:	f3 0f 59 05 4f 3e 00 	mulss  0x3e4f(%rip),%xmm0        # 8ea4 <args_doc_str.3+0xc>
    5054:	00 
    5055:	0f 28 c8             	movaps %xmm0,%xmm1
    5058:	f3 0f 5e cb          	divss  %xmm3,%xmm1
    505c:	48 85 c0             	test   %rax,%rax
    505f:	78 07                	js     5068 <print_xml_report+0x6d5>
    5061:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    5066:	eb 15                	jmp    507d <print_xml_report+0x6ea>
    5068:	48 89 c2             	mov    %rax,%rdx
    506b:	83 e0 01             	and    $0x1,%eax
    506e:	48 d1 ea             	shr    %rdx
    5071:	48 09 c2             	or     %rax,%rdx
    5074:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    5079:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    507d:	48 8b 45 28          	mov    0x28(%rbp),%rax
    5081:	48 85 c0             	test   %rax,%rax
    5084:	78 07                	js     508d <print_xml_report+0x6fa>
    5086:	f3 48 0f 2a d0       	cvtsi2ss %rax,%xmm2
    508b:	eb 15                	jmp    50a2 <print_xml_report+0x70f>
    508d:	48 89 c2             	mov    %rax,%rdx
    5090:	83 e0 01             	and    $0x1,%eax
    5093:	48 d1 ea             	shr    %rdx
    5096:	48 09 c2             	or     %rax,%rdx
    5099:	f3 48 0f 2a d2       	cvtsi2ss %rdx,%xmm2
    509e:	f3 0f 58 d2          	addss  %xmm2,%xmm2
    50a2:	f3 0f 5e c2          	divss  %xmm2,%xmm0
    50a6:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    50ab:	31 c9                	xor    %ecx,%ecx
    50ad:	31 f6                	xor    %esi,%esi
    50af:	48 8d 15 f8 5b 00 00 	lea    0x5bf8(%rip),%rdx        # acae <__func__.2+0x40e>
    50b6:	49 ff c5             	inc    %r13
    50b9:	f3 0f 59 05 e3 3d 00 	mulss  0x3de3(%rip),%xmm0        # 8ea4 <args_doc_str.3+0xc>
    50c0:	00 
    50c1:	f3 0f 5e c3          	divss  %xmm3,%xmm0
    50c5:	f3 0f 5c c8          	subss  %xmm0,%xmm1
    50c9:	f3 0f 11 4c 24 04    	movss  %xmm1,0x4(%rsp)
    50cf:	e8 3c d3 ff ff       	call   2410 <xmlNewChild@plt>
    50d4:	4c 89 ef             	mov    %r13,%rdi
    50d7:	49 89 c4             	mov    %rax,%r12
    50da:	e8 11 21 00 00       	call   71f0 <unsignedIntToXmlChar>
    50df:	48 8d 35 d6 5b 00 00 	lea    0x5bd6(%rip),%rsi        # acbc <__func__.2+0x41c>
    50e6:	4c 89 e7             	mov    %r12,%rdi
    50e9:	48 89 c2             	mov    %rax,%rdx
    50ec:	e8 8f d4 ff ff       	call   2580 <xmlNewProp@plt>
    50f1:	31 c9                	xor    %ecx,%ecx
    50f3:	48 8d 15 cd 5b 00 00 	lea    0x5bcd(%rip),%rdx        # acc7 <__func__.2+0x427>
    50fa:	31 f6                	xor    %esi,%esi
    50fc:	4c 89 e7             	mov    %r12,%rdi
    50ff:	e8 0c d3 ff ff       	call   2410 <xmlNewChild@plt>
    5104:	f3 0f 5a 44 24 04    	cvtss2sd 0x4(%rsp),%xmm0
    510a:	49 89 c6             	mov    %rax,%r14
    510d:	e8 ee 1f 00 00       	call   7100 <floatToXmlChar>
    5112:	48 8d 15 bc 5b 00 00 	lea    0x5bbc(%rip),%rdx        # acd5 <__func__.2+0x435>
    5119:	31 f6                	xor    %esi,%esi
    511b:	4c 89 f7             	mov    %r14,%rdi
    511e:	48 89 c1             	mov    %rax,%rcx
    5121:	e8 ea d2 ff ff       	call   2410 <xmlNewChild@plt>
    5126:	8b 05 7c 97 00 00    	mov    0x977c(%rip),%eax        # e8a8 <freq_khz>
    512c:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    5131:	f3 0f 59 44 24 04    	mulss  0x4(%rsp),%xmm0
    5137:	f3 0f 5e 05 65 3d 00 	divss  0x3d65(%rip),%xmm0        # 8ea4 <args_doc_str.3+0xc>
    513e:	00 
    513f:	f3 0f 2c f8          	cvttss2si %xmm0,%edi
    5143:	48 63 ff             	movslq %edi,%rdi
    5146:	e8 35 20 00 00       	call   7180 <signedIntToXmlChar>
    514b:	4c 89 f7             	mov    %r14,%rdi
    514e:	48 8d 15 8a 5b 00 00 	lea    0x5b8a(%rip),%rdx        # acdf <__func__.2+0x43f>
    5155:	31 f6                	xor    %esi,%esi
    5157:	48 89 c1             	mov    %rax,%rcx
    515a:	e8 b1 d2 ff ff       	call   2410 <xmlNewChild@plt>
    515f:	31 c9                	xor    %ecx,%ecx
    5161:	48 8d 15 82 5b 00 00 	lea    0x5b82(%rip),%rdx        # acea <__func__.2+0x44a>
    5168:	31 f6                	xor    %esi,%esi
    516a:	4c 89 e7             	mov    %r12,%rdi
    516d:	e8 9e d2 ff ff       	call   2410 <xmlNewChild@plt>
    5172:	31 c9                	xor    %ecx,%ecx
    5174:	48 8d 15 7e 5b 00 00 	lea    0x5b7e(%rip),%rdx        # acf9 <__func__.2+0x459>
    517b:	31 f6                	xor    %esi,%esi
    517d:	48 89 c7             	mov    %rax,%rdi
    5180:	49 89 c6             	mov    %rax,%r14
    5183:	e8 88 d2 ff ff       	call   2410 <xmlNewChild@plt>
    5188:	49 89 c7             	mov    %rax,%r15
    518b:	48 8b 45 00          	mov    0x0(%rbp),%rax
    518f:	48 85 c0             	test   %rax,%rax
    5192:	78 07                	js     519b <print_xml_report+0x808>
    5194:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    5199:	eb 15                	jmp    51b0 <print_xml_report+0x81d>
    519b:	48 89 c2             	mov    %rax,%rdx
    519e:	83 e0 01             	and    $0x1,%eax
    51a1:	48 d1 ea             	shr    %rdx
    51a4:	48 09 c2             	or     %rax,%rdx
    51a7:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    51ac:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    51b0:	48 8b 45 08          	mov    0x8(%rbp),%rax
    51b4:	48 85 c0             	test   %rax,%rax
    51b7:	78 07                	js     51c0 <print_xml_report+0x82d>
    51b9:	f3 48 0f 2a c8       	cvtsi2ss %rax,%xmm1
    51be:	eb 15                	jmp    51d5 <print_xml_report+0x842>
    51c0:	48 89 c2             	mov    %rax,%rdx
    51c3:	83 e0 01             	and    $0x1,%eax
    51c6:	48 d1 ea             	shr    %rdx
    51c9:	48 09 c2             	or     %rax,%rdx
    51cc:	f3 48 0f 2a ca       	cvtsi2ss %rdx,%xmm1
    51d1:	f3 0f 58 c9          	addss  %xmm1,%xmm1
    51d5:	f3 0f 5e c1          	divss  %xmm1,%xmm0
    51d9:	8b 05 c9 96 00 00    	mov    0x96c9(%rip),%eax        # e8a8 <freq_khz>
    51df:	f3 48 0f 2a c8       	cvtsi2ss %rax,%xmm1
    51e4:	f3 0f 59 05 b8 3c 00 	mulss  0x3cb8(%rip),%xmm0        # 8ea4 <args_doc_str.3+0xc>
    51eb:	00 
    51ec:	f3 0f 5e c1          	divss  %xmm1,%xmm0
    51f0:	f3 0f 5a c0          	cvtss2sd %xmm0,%xmm0
    51f4:	e8 07 1f 00 00       	call   7100 <floatToXmlChar>
    51f9:	31 f6                	xor    %esi,%esi
    51fb:	4c 89 ff             	mov    %r15,%rdi
    51fe:	48 89 c1             	mov    %rax,%rcx
    5201:	48 8d 15 01 5b 00 00 	lea    0x5b01(%rip),%rdx        # ad09 <__func__.2+0x469>
    5208:	e8 03 d2 ff ff       	call   2410 <xmlNewChild@plt>
    520d:	48 8b 45 00          	mov    0x0(%rbp),%rax
    5211:	31 d2                	xor    %edx,%edx
    5213:	48 f7 75 08          	divq   0x8(%rbp)
    5217:	48 63 f8             	movslq %eax,%rdi
    521a:	e8 61 1f 00 00       	call   7180 <signedIntToXmlChar>
    521f:	48 8d 15 ee 5a 00 00 	lea    0x5aee(%rip),%rdx        # ad14 <__func__.2+0x474>
    5226:	31 f6                	xor    %esi,%esi
    5228:	4c 89 ff             	mov    %r15,%rdi
    522b:	48 89 c1             	mov    %rax,%rcx
    522e:	e8 dd d1 ff ff       	call   2410 <xmlNewChild@plt>
    5233:	48 8b 7d 08          	mov    0x8(%rbp),%rdi
    5237:	e8 b4 1f 00 00       	call   71f0 <unsignedIntToXmlChar>
    523c:	48 8d 15 dd 5a 00 00 	lea    0x5add(%rip),%rdx        # ad20 <__func__.2+0x480>
    5243:	31 f6                	xor    %esi,%esi
    5245:	4c 89 f7             	mov    %r14,%rdi
    5248:	48 89 c1             	mov    %rax,%rcx
    524b:	e8 c0 d1 ff ff       	call   2410 <xmlNewChild@plt>
    5250:	31 c9                	xor    %ecx,%ecx
    5252:	48 8d 15 d7 5a 00 00 	lea    0x5ad7(%rip),%rdx        # ad30 <__func__.2+0x490>
    5259:	31 f6                	xor    %esi,%esi
    525b:	4c 89 f7             	mov    %r14,%rdi
    525e:	e8 ad d1 ff ff       	call   2410 <xmlNewChild@plt>
    5263:	49 89 c7             	mov    %rax,%r15
    5266:	48 8b 45 20          	mov    0x20(%rbp),%rax
    526a:	48 85 c0             	test   %rax,%rax
    526d:	78 07                	js     5276 <print_xml_report+0x8e3>
    526f:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    5274:	eb 15                	jmp    528b <print_xml_report+0x8f8>
    5276:	48 89 c2             	mov    %rax,%rdx
    5279:	83 e0 01             	and    $0x1,%eax
    527c:	48 d1 ea             	shr    %rdx
    527f:	48 09 c2             	or     %rax,%rdx
    5282:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    5287:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    528b:	48 8b 45 28          	mov    0x28(%rbp),%rax
    528f:	48 85 c0             	test   %rax,%rax
    5292:	78 07                	js     529b <print_xml_report+0x908>
    5294:	f3 48 0f 2a c8       	cvtsi2ss %rax,%xmm1
    5299:	eb 15                	jmp    52b0 <print_xml_report+0x91d>
    529b:	48 89 c2             	mov    %rax,%rdx
    529e:	83 e0 01             	and    $0x1,%eax
    52a1:	48 d1 ea             	shr    %rdx
    52a4:	48 09 c2             	or     %rax,%rdx
    52a7:	f3 48 0f 2a ca       	cvtsi2ss %rdx,%xmm1
    52ac:	f3 0f 58 c9          	addss  %xmm1,%xmm1
    52b0:	f3 0f 5e c1          	divss  %xmm1,%xmm0
    52b4:	8b 05 ee 95 00 00    	mov    0x95ee(%rip),%eax        # e8a8 <freq_khz>
    52ba:	f3 48 0f 2a c8       	cvtsi2ss %rax,%xmm1
    52bf:	f3 0f 59 05 dd 3b 00 	mulss  0x3bdd(%rip),%xmm0        # 8ea4 <args_doc_str.3+0xc>
    52c6:	00 
    52c7:	f3 0f 5e c1          	divss  %xmm1,%xmm0
    52cb:	f3 0f 5a c0          	cvtss2sd %xmm0,%xmm0
    52cf:	e8 2c 1e 00 00       	call   7100 <floatToXmlChar>
    52d4:	31 f6                	xor    %esi,%esi
    52d6:	4c 89 ff             	mov    %r15,%rdi
    52d9:	48 89 c1             	mov    %rax,%rcx
    52dc:	48 8d 15 5e 5a 00 00 	lea    0x5a5e(%rip),%rdx        # ad41 <__func__.2+0x4a1>
    52e3:	e8 28 d1 ff ff       	call   2410 <xmlNewChild@plt>
    52e8:	48 8b 45 20          	mov    0x20(%rbp),%rax
    52ec:	31 d2                	xor    %edx,%edx
    52ee:	48 f7 75 28          	divq   0x28(%rbp)
    52f2:	48 63 f8             	movslq %eax,%rdi
    52f5:	e8 86 1e 00 00       	call   7180 <signedIntToXmlChar>
    52fa:	31 f6                	xor    %esi,%esi
    52fc:	48 8d 15 4a 5a 00 00 	lea    0x5a4a(%rip),%rdx        # ad4d <__func__.2+0x4ad>
    5303:	4c 89 ff             	mov    %r15,%rdi
    5306:	48 89 c1             	mov    %rax,%rcx
    5309:	e8 02 d1 ff ff       	call   2410 <xmlNewChild@plt>
    530e:	48 8b 7d 28          	mov    0x28(%rbp),%rdi
    5312:	e8 d9 1e 00 00       	call   71f0 <unsignedIntToXmlChar>
    5317:	31 f6                	xor    %esi,%esi
    5319:	48 8d 15 3a 5a 00 00 	lea    0x5a3a(%rip),%rdx        # ad5a <__func__.2+0x4ba>
    5320:	4c 89 f7             	mov    %r14,%rdi
    5323:	48 89 c1             	mov    %rax,%rcx
    5326:	e8 e5 d0 ff ff       	call   2410 <xmlNewChild@plt>
    532b:	83 3d ce 95 00 00 00 	cmpl   $0x0,0x95ce(%rip)        # e900 <params+0x40>
    5332:	0f 85 a0 fc ff ff    	jne    4fd8 <print_xml_report+0x645>
    5338:	4c 89 e7             	mov    %r12,%rdi
    533b:	31 c9                	xor    %ecx,%ecx
    533d:	48 8d 15 24 5a 00 00 	lea    0x5a24(%rip),%rdx        # ad68 <__func__.2+0x4c8>
    5344:	31 f6                	xor    %esi,%esi
    5346:	e8 c5 d0 ff ff       	call   2410 <xmlNewChild@plt>
    534b:	31 c9                	xor    %ecx,%ecx
    534d:	48 8d 15 23 5a 00 00 	lea    0x5a23(%rip),%rdx        # ad77 <__func__.2+0x4d7>
    5354:	31 f6                	xor    %esi,%esi
    5356:	48 89 c7             	mov    %rax,%rdi
    5359:	49 89 c4             	mov    %rax,%r12
    535c:	e8 af d0 ff ff       	call   2410 <xmlNewChild@plt>
    5361:	49 89 c6             	mov    %rax,%r14
    5364:	48 8b 45 10          	mov    0x10(%rbp),%rax
    5368:	48 85 c0             	test   %rax,%rax
    536b:	78 07                	js     5374 <print_xml_report+0x9e1>
    536d:	f3 48 0f 2a c0       	cvtsi2ss %rax,%xmm0
    5372:	eb 15                	jmp    5389 <print_xml_report+0x9f6>
    5374:	48 89 c2             	mov    %rax,%rdx
    5377:	83 e0 01             	and    $0x1,%eax
    537a:	48 d1 ea             	shr    %rdx
    537d:	48 09 c2             	or     %rax,%rdx
    5380:	f3 48 0f 2a c2       	cvtsi2ss %rdx,%xmm0
    5385:	f3 0f 58 c0          	addss  %xmm0,%xmm0
    5389:	48 8b 45 18          	mov    0x18(%rbp),%rax
    538d:	48 85 c0             	test   %rax,%rax
    5390:	78 07                	js     5399 <print_xml_report+0xa06>
    5392:	f3 48 0f 2a c8       	cvtsi2ss %rax,%xmm1
    5397:	eb 15                	jmp    53ae <print_xml_report+0xa1b>
    5399:	48 89 c2             	mov    %rax,%rdx
    539c:	83 e0 01             	and    $0x1,%eax
    539f:	48 d1 ea             	shr    %rdx
    53a2:	48 09 c2             	or     %rax,%rdx
    53a5:	f3 48 0f 2a ca       	cvtsi2ss %rdx,%xmm1
    53aa:	f3 0f 58 c9          	addss  %xmm1,%xmm1
    53ae:	f3 0f 5e c1          	divss  %xmm1,%xmm0
    53b2:	8b 05 f0 94 00 00    	mov    0x94f0(%rip),%eax        # e8a8 <freq_khz>
    53b8:	f3 48 0f 2a c8       	cvtsi2ss %rax,%xmm1
    53bd:	f3 0f 59 05 df 3a 00 	mulss  0x3adf(%rip),%xmm0        # 8ea4 <args_doc_str.3+0xc>
    53c4:	00 
    53c5:	f3 0f 5e c1          	divss  %xmm1,%xmm0
    53c9:	f3 0f 5a c0          	cvtss2sd %xmm0,%xmm0
    53cd:	e8 2e 1d 00 00       	call   7100 <floatToXmlChar>
    53d2:	31 f6                	xor    %esi,%esi
    53d4:	4c 89 f7             	mov    %r14,%rdi
    53d7:	48 89 c1             	mov    %rax,%rcx
    53da:	48 8d 15 a5 59 00 00 	lea    0x59a5(%rip),%rdx        # ad86 <__func__.2+0x4e6>
    53e1:	e8 2a d0 ff ff       	call   2410 <xmlNewChild@plt>
    53e6:	48 8b 45 10          	mov    0x10(%rbp),%rax
    53ea:	31 d2                	xor    %edx,%edx
    53ec:	48 f7 75 18          	divq   0x18(%rbp)
    53f0:	48 63 f8             	movslq %eax,%rdi
    53f3:	e8 88 1d 00 00       	call   7180 <signedIntToXmlChar>
    53f8:	31 f6                	xor    %esi,%esi
    53fa:	48 8d 15 8f 59 00 00 	lea    0x598f(%rip),%rdx        # ad90 <__func__.2+0x4f0>
    5401:	4c 89 f7             	mov    %r14,%rdi
    5404:	48 89 c1             	mov    %rax,%rcx
    5407:	e8 04 d0 ff ff       	call   2410 <xmlNewChild@plt>
    540c:	48 8b 7d 18          	mov    0x18(%rbp),%rdi
    5410:	e8 db 1d 00 00       	call   71f0 <unsignedIntToXmlChar>
    5415:	48 8d 15 7f 59 00 00 	lea    0x597f(%rip),%rdx        # ad9b <__func__.2+0x4fb>
    541c:	31 f6                	xor    %esi,%esi
    541e:	4c 89 e7             	mov    %r12,%rdi
    5421:	48 89 c1             	mov    %rax,%rcx
    5424:	e8 e7 cf ff ff       	call   2410 <xmlNewChild@plt>
    5429:	e9 aa fb ff ff       	jmp    4fd8 <print_xml_report+0x645>
    542e:	4c 8b 7c 24 18       	mov    0x18(%rsp),%r15
    5433:	48 8d 05 26 91 00 00 	lea    0x9126(%rip),%rax        # e560 <histogram_access>
    543a:	48 39 43 10          	cmp    %rax,0x10(%rbx)
    543e:	75 43                	jne    5483 <print_xml_report+0xaf0>
    5440:	31 c9                	xor    %ecx,%ecx
    5442:	31 f6                	xor    %esi,%esi
    5444:	48 8d 15 5d 59 00 00 	lea    0x595d(%rip),%rdx        # ada8 <__func__.2+0x508>
    544b:	4c 89 ff             	mov    %r15,%rdi
    544e:	e8 bd cf ff ff       	call   2410 <xmlNewChild@plt>
    5453:	83 7b 64 00          	cmpl   $0x0,0x64(%rbx)
    5457:	49 89 c4             	mov    %rax,%r12
    545a:	7e 0f                	jle    546b <print_xml_report+0xad8>
    545c:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    5461:	48 89 c2             	mov    %rax,%rdx
    5464:	31 f6                	xor    %esi,%esi
    5466:	e8 a2 f3 ff ff       	call   480d <makeHistogramNode.isra.0>
    546b:	83 7b 64 63          	cmpl   $0x63,0x64(%rbx)
    546f:	7f 12                	jg     5483 <print_xml_report+0xaf0>
    5471:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    5476:	4c 89 e2             	mov    %r12,%rdx
    5479:	be 01 00 00 00       	mov    $0x1,%esi
    547e:	e8 8a f3 ff ff       	call   480d <makeHistogramNode.isra.0>
    5483:	4c 89 ff             	mov    %r15,%rdi
    5486:	31 c9                	xor    %ecx,%ecx
    5488:	48 8d 15 24 59 00 00 	lea    0x5924(%rip),%rdx        # adb3 <__func__.2+0x513>
    548f:	31 f6                	xor    %esi,%esi
    5491:	e8 7a cf ff ff       	call   2410 <xmlNewChild@plt>
    5496:	4c 8d 2d a3 93 00 00 	lea    0x93a3(%rip),%r13        # e840 <mem_info_before_warmup>
    549d:	83 3d 5c 94 00 00 00 	cmpl   $0x0,0x945c(%rip)        # e900 <params+0x40>
    54a4:	4c 8d 3d 15 59 00 00 	lea    0x5915(%rip),%r15        # adc0 <__func__.2+0x520>
    54ab:	48 89 05 0e ac 00 00 	mov    %rax,0xac0e(%rip)        # 100c0 <sysmeminfonode>
    54b2:	48 89 c7             	mov    %rax,%rdi
    54b5:	4c 89 ea             	mov    %r13,%rdx
    54b8:	48 8d 2d c1 92 00 00 	lea    0x92c1(%rip),%rbp        # e780 <mem_info_middle_run>
    54bf:	4c 8d 25 5a 92 00 00 	lea    0x925a(%rip),%r12        # e720 <mem_info_after_run>
    54c6:	74 29                	je     54f1 <print_xml_report+0xb5e>
    54c8:	4c 89 fe             	mov    %r15,%rsi
    54cb:	e8 c4 ee ff ff       	call   4394 <makeSysMemItemNode>
    54d0:	83 3d e9 92 00 00 00 	cmpl   $0x0,0x92e9(%rip)        # e7c0 <mem_info_middle_run+0x40>
    54d7:	48 89 c7             	mov    %rax,%rdi
    54da:	74 08                	je     54e4 <print_xml_report+0xb51>
    54dc:	48 89 ea             	mov    %rbp,%rdx
    54df:	4c 89 ee             	mov    %r13,%rsi
    54e2:	eb 52                	jmp    5536 <print_xml_report+0xba3>
    54e4:	4c 89 e2             	mov    %r12,%rdx
    54e7:	4c 89 ee             	mov    %r13,%rsi
    54ea:	e8 91 f0 ff ff       	call   4580 <makeMemItemDeltaNode.isra.0>
    54ef:	eb 7b                	jmp    556c <print_xml_report+0xbd9>
    54f1:	48 8d 35 d8 58 00 00 	lea    0x58d8(%rip),%rsi        # add0 <__func__.2+0x530>
    54f8:	4c 8d 35 e1 92 00 00 	lea    0x92e1(%rip),%r14        # e7e0 <mem_info_before_run>
    54ff:	e8 90 ee ff ff       	call   4394 <makeSysMemItemNode>
    5504:	4c 89 f2             	mov    %r14,%rdx
    5507:	4c 89 ee             	mov    %r13,%rsi
    550a:	48 89 c7             	mov    %rax,%rdi
    550d:	e8 6e f0 ff ff       	call   4580 <makeMemItemDeltaNode.isra.0>
    5512:	48 8b 3d a7 ab 00 00 	mov    0xaba7(%rip),%rdi        # 100c0 <sysmeminfonode>
    5519:	4c 89 f2             	mov    %r14,%rdx
    551c:	4c 89 fe             	mov    %r15,%rsi
    551f:	e8 70 ee ff ff       	call   4394 <makeSysMemItemNode>
    5524:	83 3d 95 92 00 00 00 	cmpl   $0x0,0x9295(%rip)        # e7c0 <mem_info_middle_run+0x40>
    552b:	48 89 c7             	mov    %rax,%rdi
    552e:	74 31                	je     5561 <print_xml_report+0xbce>
    5530:	48 89 ea             	mov    %rbp,%rdx
    5533:	4c 89 f6             	mov    %r14,%rsi
    5536:	e8 45 f0 ff ff       	call   4580 <makeMemItemDeltaNode.isra.0>
    553b:	48 8b 3d 7e ab 00 00 	mov    0xab7e(%rip),%rdi        # 100c0 <sysmeminfonode>
    5542:	48 89 ea             	mov    %rbp,%rdx
    5545:	48 8d 35 7c 58 00 00 	lea    0x587c(%rip),%rsi        # adc8 <__func__.2+0x528>
    554c:	e8 43 ee ff ff       	call   4394 <makeSysMemItemNode>
    5551:	4c 89 e2             	mov    %r12,%rdx
    5554:	48 89 ee             	mov    %rbp,%rsi
    5557:	48 89 c7             	mov    %rax,%rdi
    555a:	e8 21 f0 ff ff       	call   4580 <makeMemItemDeltaNode.isra.0>
    555f:	eb 0b                	jmp    556c <print_xml_report+0xbd9>
    5561:	4c 89 e2             	mov    %r12,%rdx
    5564:	4c 89 f6             	mov    %r14,%rsi
    5567:	e8 14 f0 ff ff       	call   4580 <makeMemItemDeltaNode.isra.0>
    556c:	48 8b 3d 4d ab 00 00 	mov    0xab4d(%rip),%rdi        # 100c0 <sysmeminfonode>
    5573:	4c 89 e2             	mov    %r12,%rdx
    5576:	48 8d 35 5e 58 00 00 	lea    0x585e(%rip),%rsi        # addb <__func__.2+0x53b>
    557d:	e8 12 ee ff ff       	call   4394 <makeSysMemItemNode>
    5582:	48 89 05 3f ab 00 00 	mov    %rax,0xab3f(%rip)        # 100c8 <postrunnode>
    5589:	48 8b 44 24 58       	mov    0x58(%rsp),%rax
    558e:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    5595:	00 00 
    5597:	74 05                	je     559e <print_xml_report+0xc0b>
    5599:	e8 d2 cf ff ff       	call   2570 <__stack_chk_fail@plt>
    559e:	48 83 c4 68          	add    $0x68,%rsp
    55a2:	5b                   	pop    %rbx
    55a3:	5d                   	pop    %rbp
    55a4:	41 5c                	pop    %r12
    55a6:	41 5d                	pop    %r13
    55a8:	41 5e                	pop    %r14
    55aa:	41 5f                	pop    %r15
    55ac:	c3                   	ret    

00000000000055ad <print_xml_report_post_unmap>:
    55ad:	f3 0f 1e fa          	endbr64 
    55b1:	41 54                	push   %r12
    55b3:	4c 8d 25 06 91 00 00 	lea    0x9106(%rip),%r12        # e6c0 <mem_info_after_unmap>
    55ba:	48 8d 35 5f 91 00 00 	lea    0x915f(%rip),%rsi        # e720 <mem_info_after_run>
    55c1:	55                   	push   %rbp
    55c2:	48 89 fd             	mov    %rdi,%rbp
    55c5:	4c 89 e2             	mov    %r12,%rdx
    55c8:	50                   	push   %rax
    55c9:	48 8b 3d f8 aa 00 00 	mov    0xaaf8(%rip),%rdi        # 100c8 <postrunnode>
    55d0:	e8 ab ef ff ff       	call   4580 <makeMemItemDeltaNode.isra.0>
    55d5:	48 8b 3d e4 aa 00 00 	mov    0xaae4(%rip),%rdi        # 100c0 <sysmeminfonode>
    55dc:	4c 89 e2             	mov    %r12,%rdx
    55df:	48 8d 35 fe 57 00 00 	lea    0x57fe(%rip),%rsi        # ade4 <__func__.2+0x544>
    55e6:	e8 a9 ed ff ff       	call   4394 <makeSysMemItemNode>
    55eb:	31 ff                	xor    %edi,%edi
    55ed:	e8 6e cf ff ff       	call   2560 <xmlKeepBlanksDefault@plt>
    55f2:	48 8b 35 df aa 00 00 	mov    0xaadf(%rip),%rsi        # 100d8 <xdoc>
    55f9:	48 89 ef             	mov    %rbp,%rdi
    55fc:	41 58                	pop    %r8
    55fe:	b9 01 00 00 00       	mov    $0x1,%ecx
    5603:	5d                   	pop    %rbp
    5604:	48 8d 15 e4 57 00 00 	lea    0x57e4(%rip),%rdx        # adef <__func__.2+0x54f>
    560b:	41 5c                	pop    %r12
    560d:	e9 1e d0 ff ff       	jmp    2630 <xmlSaveFormatFileEnc@plt>
    5612:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5619:	00 00 00 
    561c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005620 <_start>:
    5620:	f3 0f 1e fa          	endbr64 
    5624:	31 ed                	xor    %ebp,%ebp
    5626:	49 89 d1             	mov    %rdx,%r9
    5629:	5e                   	pop    %rsi
    562a:	48 89 e2             	mov    %rsp,%rdx
    562d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    5631:	50                   	push   %rax
    5632:	54                   	push   %rsp
    5633:	45 31 c0             	xor    %r8d,%r8d
    5636:	31 c9                	xor    %ecx,%ecx
    5638:	48 8d 3d ff db ff ff 	lea    -0x2401(%rip),%rdi        # 323e <main>
    563f:	ff 15 83 89 00 00    	call   *0x8983(%rip)        # dfc8 <__libc_start_main@GLIBC_2.34>
    5645:	f4                   	hlt    
    5646:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    564d:	00 00 00 

0000000000005650 <deregister_tm_clones>:
    5650:	48 8d 3d 79 8f 00 00 	lea    0x8f79(%rip),%rdi        # e5d0 <__TMC_END__>
    5657:	48 8d 05 72 8f 00 00 	lea    0x8f72(%rip),%rax        # e5d0 <__TMC_END__>
    565e:	48 39 f8             	cmp    %rdi,%rax
    5661:	74 15                	je     5678 <deregister_tm_clones+0x28>
    5663:	48 8b 05 66 89 00 00 	mov    0x8966(%rip),%rax        # dfd0 <_ITM_deregisterTMCloneTable@Base>
    566a:	48 85 c0             	test   %rax,%rax
    566d:	74 09                	je     5678 <deregister_tm_clones+0x28>
    566f:	ff e0                	jmp    *%rax
    5671:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5678:	c3                   	ret    
    5679:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005680 <register_tm_clones>:
    5680:	48 8d 3d 49 8f 00 00 	lea    0x8f49(%rip),%rdi        # e5d0 <__TMC_END__>
    5687:	48 8d 35 42 8f 00 00 	lea    0x8f42(%rip),%rsi        # e5d0 <__TMC_END__>
    568e:	48 29 fe             	sub    %rdi,%rsi
    5691:	48 89 f0             	mov    %rsi,%rax
    5694:	48 c1 ee 3f          	shr    $0x3f,%rsi
    5698:	48 c1 f8 03          	sar    $0x3,%rax
    569c:	48 01 c6             	add    %rax,%rsi
    569f:	48 d1 fe             	sar    %rsi
    56a2:	74 14                	je     56b8 <register_tm_clones+0x38>
    56a4:	48 8b 05 35 89 00 00 	mov    0x8935(%rip),%rax        # dfe0 <_ITM_registerTMCloneTable@Base>
    56ab:	48 85 c0             	test   %rax,%rax
    56ae:	74 08                	je     56b8 <register_tm_clones+0x38>
    56b0:	ff e0                	jmp    *%rax
    56b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    56b8:	c3                   	ret    
    56b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000056c0 <__do_global_dtors_aux>:
    56c0:	f3 0f 1e fa          	endbr64 
    56c4:	80 3d 5d 8f 00 00 00 	cmpb   $0x0,0x8f5d(%rip)        # e628 <completed.0>
    56cb:	75 2b                	jne    56f8 <__do_global_dtors_aux+0x38>
    56cd:	55                   	push   %rbp
    56ce:	48 83 3d ea 88 00 00 	cmpq   $0x0,0x88ea(%rip)        # dfc0 <__cxa_finalize@GLIBC_2.2.5>
    56d5:	00 
    56d6:	48 89 e5             	mov    %rsp,%rbp
    56d9:	74 0c                	je     56e7 <__do_global_dtors_aux+0x27>
    56db:	48 8b 3d 26 89 00 00 	mov    0x8926(%rip),%rdi        # e008 <__dso_handle>
    56e2:	e8 a9 cc ff ff       	call   2390 <__cxa_finalize@plt>
    56e7:	e8 64 ff ff ff       	call   5650 <deregister_tm_clones>
    56ec:	c6 05 35 8f 00 00 01 	movb   $0x1,0x8f35(%rip)        # e628 <completed.0>
    56f3:	5d                   	pop    %rbp
    56f4:	c3                   	ret    
    56f5:	0f 1f 00             	nopl   (%rax)
    56f8:	c3                   	ret    
    56f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005700 <frame_dummy>:
    5700:	f3 0f 1e fa          	endbr64 
    5704:	e9 77 ff ff ff       	jmp    5680 <register_tm_clones>
    5709:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005710 <mem_info_oneshot>:
    5710:	f3 0f 1e fa          	endbr64 
    5714:	48 89 f7             	mov    %rsi,%rdi
    5717:	48 8d 35 62 90 00 00 	lea    0x9062(%rip),%rsi        # e780 <mem_info_middle_run>
    571e:	e9 fd 10 00 00       	jmp    6820 <sys_stat_mem_update>
    5723:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    572a:	00 00 00 00 
    572e:	66 90                	xchg   %ax,%ax

0000000000005730 <report_stat>:
    5730:	f3 0f 1e fa          	endbr64 
    5734:	41 54                	push   %r12
    5736:	55                   	push   %rbp
    5737:	48 89 fd             	mov    %rdi,%rbp
    573a:	53                   	push   %rbx
    573b:	48 89 f3             	mov    %rsi,%rbx
    573e:	48 89 df             	mov    %rbx,%rdi
    5741:	48 83 ec 50          	sub    $0x50,%rsp
    5745:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    574c:	00 00 
    574e:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    5753:	31 c0                	xor    %eax,%eax
    5755:	49 89 e4             	mov    %rsp,%r12
    5758:	4c 89 e6             	mov    %r12,%rsi
    575b:	e8 c0 10 00 00       	call   6820 <sys_stat_mem_update>
    5760:	4c 89 e7             	mov    %r12,%rdi
    5763:	e8 40 ea ff ff       	call   41a8 <sys_stat_mem_print>
    5768:	48 89 1d 01 8f 00 00 	mov    %rbx,0x8f01(%rip)        # e670 <alarms+0x10>
    576f:	69 05 2f 91 00 00 e8 	imul   $0x3e8,0x912f(%rip),%eax        # e8a8 <freq_khz>
    5776:	03 00 00 
    5779:	48 01 e8             	add    %rbp,%rax
    577c:	48 89 05 dd 8e 00 00 	mov    %rax,0x8edd(%rip)        # e660 <alarms>
    5783:	48 8d 05 a6 ff ff ff 	lea    -0x5a(%rip),%rax        # 5730 <report_stat>
    578a:	48 89 05 d7 8e 00 00 	mov    %rax,0x8ed7(%rip)        # e668 <alarms+0x8>
    5791:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    5796:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    579d:	00 00 
    579f:	75 09                	jne    57aa <report_stat+0x7a>
    57a1:	48 83 c4 50          	add    $0x50,%rsp
    57a5:	5b                   	pop    %rbx
    57a6:	5d                   	pop    %rbp
    57a7:	41 5c                	pop    %r12
    57a9:	c3                   	ret    
    57aa:	e8 c1 cd ff ff       	call   2570 <__stack_chk_fail@plt>
    57af:	90                   	nop

00000000000057b0 <prn>:
    57b0:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
    57b7:	48 89 74 24 28       	mov    %rsi,0x28(%rsp)
    57bc:	48 89 54 24 30       	mov    %rdx,0x30(%rsp)
    57c1:	48 89 4c 24 38       	mov    %rcx,0x38(%rsp)
    57c6:	4c 89 44 24 40       	mov    %r8,0x40(%rsp)
    57cb:	4c 89 4c 24 48       	mov    %r9,0x48(%rsp)
    57d0:	84 c0                	test   %al,%al
    57d2:	74 37                	je     580b <prn+0x5b>
    57d4:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    57d9:	0f 29 4c 24 60       	movaps %xmm1,0x60(%rsp)
    57de:	0f 29 54 24 70       	movaps %xmm2,0x70(%rsp)
    57e3:	0f 29 9c 24 80 00 00 	movaps %xmm3,0x80(%rsp)
    57ea:	00 
    57eb:	0f 29 a4 24 90 00 00 	movaps %xmm4,0x90(%rsp)
    57f2:	00 
    57f3:	0f 29 ac 24 a0 00 00 	movaps %xmm5,0xa0(%rsp)
    57fa:	00 
    57fb:	0f 29 b4 24 b0 00 00 	movaps %xmm6,0xb0(%rsp)
    5802:	00 
    5803:	0f 29 bc 24 c0 00 00 	movaps %xmm7,0xc0(%rsp)
    580a:	00 
    580b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5812:	00 00 
    5814:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    5819:	31 c0                	xor    %eax,%eax
    581b:	8b 15 db 90 00 00    	mov    0x90db(%rip),%edx        # e8fc <params+0x3c>
    5821:	85 d2                	test   %edx,%edx
    5823:	75 3d                	jne    5862 <prn+0xb2>
    5825:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
    582c:	00 
    582d:	48 89 fa             	mov    %rdi,%rdx
    5830:	48 89 e1             	mov    %rsp,%rcx
    5833:	be 01 00 00 00       	mov    $0x1,%esi
    5838:	48 8b 3d a1 8d 00 00 	mov    0x8da1(%rip),%rdi        # e5e0 <stdout@GLIBC_2.2.5>
    583f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    5844:	48 8d 44 24 20       	lea    0x20(%rsp),%rax
    5849:	c7 04 24 08 00 00 00 	movl   $0x8,(%rsp)
    5850:	c7 44 24 04 30 00 00 	movl   $0x30,0x4(%rsp)
    5857:	00 
    5858:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    585d:	e8 9e cb ff ff       	call   2400 <__vfprintf_chk@plt>
    5862:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    5867:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    586e:	00 00 
    5870:	75 08                	jne    587a <prn+0xca>
    5872:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
    5879:	c3                   	ret    
    587a:	e8 f1 cc ff ff       	call   2570 <__stack_chk_fail@plt>
    587f:	90                   	nop

0000000000005880 <sigint_sigaction_entry>:
    5880:	f3 0f 1e fa          	endbr64 
    5884:	41 55                	push   %r13
    5886:	41 54                	push   %r12
    5888:	49 89 f4             	mov    %rsi,%r12
    588b:	55                   	push   %rbp
    588c:	89 fd                	mov    %edi,%ebp
    588e:	53                   	push   %rbx
    588f:	48 83 ec 08          	sub    $0x8,%rsp
    5893:	e8 18 cb ff ff       	call   23b0 <__errno_location@plt>
    5898:	41 83 3c 24 02       	cmpl   $0x2,(%r12)
    589d:	44 8b 28             	mov    (%rax),%r13d
    58a0:	74 2e                	je     58d0 <sigint_sigaction_entry+0x50>
    58a2:	48 8d 3d ad 27 00 00 	lea    0x27ad(%rip),%rdi        # 8056 <_IO_stdin_used+0x56>
    58a9:	31 c0                	xor    %eax,%eax
    58ab:	e8 00 ff ff ff       	call   57b0 <prn>
    58b0:	89 ef                	mov    %ebp,%edi
    58b2:	31 f6                	xor    %esi,%esi
    58b4:	e8 f7 cc ff ff       	call   25b0 <signal@plt>
    58b9:	48 83 c4 08          	add    $0x8,%rsp
    58bd:	89 ef                	mov    %ebp,%edi
    58bf:	5b                   	pop    %rbx
    58c0:	5d                   	pop    %rbp
    58c1:	41 5c                	pop    %r12
    58c3:	41 5d                	pop    %r13
    58c5:	e9 86 cc ff ff       	jmp    2550 <raise@plt>
    58ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    58d0:	48 89 c3             	mov    %rax,%rbx
    58d3:	48 8d 3d 8c 27 00 00 	lea    0x278c(%rip),%rdi        # 8066 <_IO_stdin_used+0x66>
    58da:	31 c0                	xor    %eax,%eax
    58dc:	e8 cf fe ff ff       	call   57b0 <prn>
    58e1:	89 ef                	mov    %ebp,%edi
    58e3:	31 f6                	xor    %esi,%esi
    58e5:	c7 05 b1 8f 00 00 01 	movl   $0x1,0x8fb1(%rip)        # e8a0 <control+0x10>
    58ec:	00 00 00 
    58ef:	e8 bc cc ff ff       	call   25b0 <signal@plt>
    58f4:	44 89 2b             	mov    %r13d,(%rbx)
    58f7:	48 83 c4 08          	add    $0x8,%rsp
    58fb:	5b                   	pop    %rbx
    58fc:	5d                   	pop    %rbp
    58fd:	41 5c                	pop    %r12
    58ff:	41 5d                	pop    %r13
    5901:	c3                   	ret    
    5902:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    5909:	00 00 00 00 
    590d:	0f 1f 00             	nopl   (%rax)

0000000000005910 <get_tsops>:
    5910:	f3 0f 1e fa          	endbr64 
    5914:	48 8b 05 ed 8f 00 00 	mov    0x8fed(%rip),%rax        # e908 <params+0x48>
    591b:	c3                   	ret    
    591c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005920 <get_result>:
    5920:	f3 0f 1e fa          	endbr64 
    5924:	48 8b 05 65 8f 00 00 	mov    0x8f65(%rip),%rax        # e890 <control>
    592b:	48 63 ff             	movslq %edi,%rdi
    592e:	48 8d 14 ff          	lea    (%rdi,%rdi,8),%rdx
    5932:	48 8d 44 d0 10       	lea    0x10(%rax,%rdx,8),%rax
    5937:	c3                   	ret    
    5938:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    593f:	00 

0000000000005940 <disable_core_dump>:
    5940:	f3 0f 1e fa          	endbr64 
    5944:	48 83 ec 28          	sub    $0x28,%rsp
    5948:	bf 04 00 00 00       	mov    $0x4,%edi
    594d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5954:	00 00 
    5956:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    595b:	31 c0                	xor    %eax,%eax
    595d:	48 89 e6             	mov    %rsp,%rsi
    5960:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    5967:	00 
    5968:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    596f:	00 00 
    5971:	e8 9a cb ff ff       	call   2510 <setrlimit@plt>
    5976:	85 c0                	test   %eax,%eax
    5978:	75 16                	jne    5990 <disable_core_dump+0x50>
    597a:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    597f:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    5986:	00 00 
    5988:	75 14                	jne    599e <disable_core_dump+0x5e>
    598a:	48 83 c4 28          	add    $0x28,%rsp
    598e:	c3                   	ret    
    598f:	90                   	nop
    5990:	48 8d 3d 51 2f 00 00 	lea    0x2f51(%rip),%rdi        # 88e8 <_IO_stdin_used+0x8e8>
    5997:	e8 54 cb ff ff       	call   24f0 <perror@plt>
    599c:	eb dc                	jmp    597a <disable_core_dump+0x3a>
    599e:	e8 cd cb ff ff       	call   2570 <__stack_chk_fail@plt>
    59a3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    59aa:	00 00 00 
    59ad:	0f 1f 00             	nopl   (%rax)

00000000000059b0 <linear_get_warmup_run>:
    59b0:	f3 0f 1e fa          	endbr64 
    59b4:	48 8b 47 08          	mov    0x8(%rdi),%rax
    59b8:	c3                   	ret    
    59b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000059c0 <uniform_get_warmup_run>:
    59c0:	f3 0f 1e fa          	endbr64 
    59c4:	48 8b 47 08          	mov    0x8(%rdi),%rax
    59c8:	48 c1 e0 02          	shl    $0x2,%rax
    59cc:	c3                   	ret    
    59cd:	0f 1f 00             	nopl   (%rax)

00000000000059d0 <normal_ih_get_warmup_run>:
    59d0:	f3 0f 1e fa          	endbr64 
    59d4:	48 8b 47 20          	mov    0x20(%rdi),%rax
    59d8:	c3                   	ret    
    59d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000059e0 <normal_get_warmup_run>:
    59e0:	f3 0f 1e fa          	endbr64 
    59e4:	48 8b 47 08          	mov    0x8(%rdi),%rax
    59e8:	c3                   	ret    
    59e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000059f0 <pareto_get_warmup_run>:
    59f0:	f3 0f 1e fa          	endbr64 
    59f4:	f2 0f 10 0d d4 35 00 	movsd  0x35d4(%rip),%xmm1        # 8fd0 <args_doc_str.3+0x138>
    59fb:	00 
    59fc:	f2 0f 10 47 10       	movsd  0x10(%rdi),%xmm0
    5a01:	66 0f 2f c1          	comisd %xmm1,%xmm0
    5a05:	73 11                	jae    5a18 <pareto_get_warmup_run+0x28>
    5a07:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
    5a0c:	48 c1 e0 03          	shl    $0x3,%rax
    5a10:	c3                   	ret    
    5a11:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5a18:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
    5a1c:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
    5a21:	48 0f ba f8 3f       	btc    $0x3f,%rax
    5a26:	48 c1 e0 03          	shl    $0x3,%rax
    5a2a:	c3                   	ret    
    5a2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000005a30 <generic_free_pattern>:
    5a30:	f3 0f 1e fa          	endbr64 
    5a34:	48 83 ec 08          	sub    $0x8,%rsp
    5a38:	e8 83 cb ff ff       	call   25c0 <free@plt>
    5a3d:	31 c0                	xor    %eax,%eax
    5a3f:	48 83 c4 08          	add    $0x8,%rsp
    5a43:	c3                   	ret    
    5a44:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    5a4b:	00 00 00 00 
    5a4f:	90                   	nop

0000000000005a50 <linear_alloc_pattern_fn>:
    5a50:	f3 0f 1e fa          	endbr64 
    5a54:	41 56                	push   %r14
    5a56:	66 49 0f 7e c6       	movq   %xmm0,%r14
    5a5b:	53                   	push   %rbx
    5a5c:	48 89 fb             	mov    %rdi,%rbx
    5a5f:	bf 18 00 00 00       	mov    $0x18,%edi
    5a64:	48 83 ec 08          	sub    $0x8,%rsp
    5a68:	e8 b3 cb ff ff       	call   2620 <malloc@plt>
    5a6d:	48 85 c0             	test   %rax,%rax
    5a70:	74 1e                	je     5a90 <linear_alloc_pattern_fn+0x40>
    5a72:	66 49 0f 6e ce       	movq   %r14,%xmm1
    5a77:	48 89 58 08          	mov    %rbx,0x8(%rax)
    5a7b:	f2 0f 2c d1          	cvttsd2si %xmm1,%edx
    5a7f:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    5a86:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%rax)
    5a8d:	89 50 14             	mov    %edx,0x14(%rax)
    5a90:	48 83 c4 08          	add    $0x8,%rsp
    5a94:	5b                   	pop    %rbx
    5a95:	41 5e                	pop    %r14
    5a97:	c3                   	ret    
    5a98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5a9f:	00 

0000000000005aa0 <uniform_alloc_pattern_fn>:
    5aa0:	f3 0f 1e fa          	endbr64 
    5aa4:	55                   	push   %rbp
    5aa5:	48 89 fd             	mov    %rdi,%rbp
    5aa8:	bf 10 00 00 00       	mov    $0x10,%edi
    5aad:	53                   	push   %rbx
    5aae:	89 f3                	mov    %esi,%ebx
    5ab0:	48 83 ec 08          	sub    $0x8,%rsp
    5ab4:	e8 67 cb ff ff       	call   2620 <malloc@plt>
    5ab9:	48 85 c0             	test   %rax,%rax
    5abc:	74 0a                	je     5ac8 <uniform_alloc_pattern_fn+0x28>
    5abe:	8d 53 02             	lea    0x2(%rbx),%edx
    5ac1:	48 89 68 08          	mov    %rbp,0x8(%rax)
    5ac5:	48 89 10             	mov    %rdx,(%rax)
    5ac8:	48 83 c4 08          	add    $0x8,%rsp
    5acc:	5b                   	pop    %rbx
    5acd:	5d                   	pop    %rbp
    5ace:	c3                   	ret    
    5acf:	90                   	nop

0000000000005ad0 <normal_ih_alloc_pattern_fn>:
    5ad0:	f3 0f 1e fa          	endbr64 
    5ad4:	55                   	push   %rbp
    5ad5:	89 f5                	mov    %esi,%ebp
    5ad7:	53                   	push   %rbx
    5ad8:	48 89 fb             	mov    %rdi,%rbx
    5adb:	bf 28 00 00 00       	mov    $0x28,%edi
    5ae0:	48 83 ec 08          	sub    $0x8,%rsp
    5ae4:	e8 37 cb ff ff       	call   2620 <malloc@plt>
    5ae9:	49 89 c0             	mov    %rax,%r8
    5aec:	48 85 c0             	test   %rax,%rax
    5aef:	74 43                	je     5b34 <normal_ih_alloc_pattern_fn+0x64>
    5af1:	8d 45 03             	lea    0x3(%rbp),%eax
    5af4:	48 8d 53 04          	lea    0x4(%rbx),%rdx
    5af8:	48 be ab aa aa aa aa 	movabs $0xaaaaaaaaaaaaaaab,%rsi
    5aff:	aa aa aa 
    5b02:	49 89 00             	mov    %rax,(%r8)
    5b05:	48 89 d0             	mov    %rdx,%rax
    5b08:	48 8d 4b ff          	lea    -0x1(%rbx),%rcx
    5b0c:	48 f7 e6             	mul    %rsi
    5b0f:	49 89 48 20          	mov    %rcx,0x20(%r8)
    5b13:	48 c1 ea 03          	shr    $0x3,%rdx
    5b17:	8d 04 52             	lea    (%rdx,%rdx,2),%eax
    5b1a:	48 63 d2             	movslq %edx,%rdx
    5b1d:	c1 e0 02             	shl    $0x2,%eax
    5b20:	49 89 50 10          	mov    %rdx,0x10(%r8)
    5b24:	48 98                	cltq   
    5b26:	48 29 c1             	sub    %rax,%rcx
    5b29:	49 89 40 08          	mov    %rax,0x8(%r8)
    5b2d:	48 d1 e9             	shr    %rcx
    5b30:	41 89 48 18          	mov    %ecx,0x18(%r8)
    5b34:	48 83 c4 08          	add    $0x8,%rsp
    5b38:	4c 89 c0             	mov    %r8,%rax
    5b3b:	5b                   	pop    %rbx
    5b3c:	5d                   	pop    %rbp
    5b3d:	c3                   	ret    
    5b3e:	66 90                	xchg   %ax,%ax

0000000000005b40 <normal_alloc_pattern_fn>:
    5b40:	f3 0f 1e fa          	endbr64 
    5b44:	41 56                	push   %r14
    5b46:	66 49 0f 7e c6       	movq   %xmm0,%r14
    5b4b:	55                   	push   %rbp
    5b4c:	48 89 fd             	mov    %rdi,%rbp
    5b4f:	bf 20 00 00 00       	mov    $0x20,%edi
    5b54:	53                   	push   %rbx
    5b55:	89 f3                	mov    %esi,%ebx
    5b57:	e8 c4 ca ff ff       	call   2620 <malloc@plt>
    5b5c:	48 85 c0             	test   %rax,%rax
    5b5f:	74 1e                	je     5b7f <normal_alloc_pattern_fn+0x3f>
    5b61:	66 49 0f 6e ce       	movq   %r14,%xmm1
    5b66:	8d 4b 05             	lea    0x5(%rbx),%ecx
    5b69:	48 89 68 08          	mov    %rbp,0x8(%rax)
    5b6d:	f2 0f 2c d1          	cvttsd2si %xmm1,%edx
    5b71:	48 89 08             	mov    %rcx,(%rax)
    5b74:	48 c7 40 10 ff ff ff 	movq   $0xffffffffffffffff,0x10(%rax)
    5b7b:	ff 
    5b7c:	89 50 18             	mov    %edx,0x18(%rax)
    5b7f:	5b                   	pop    %rbx
    5b80:	5d                   	pop    %rbp
    5b81:	41 5e                	pop    %r14
    5b83:	c3                   	ret    
    5b84:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    5b8b:	00 00 00 00 
    5b8f:	90                   	nop

0000000000005b90 <pareto_alloc_pattern_fn>:
    5b90:	f3 0f 1e fa          	endbr64 
    5b94:	41 54                	push   %r12
    5b96:	55                   	push   %rbp
    5b97:	89 f5                	mov    %esi,%ebp
    5b99:	53                   	push   %rbx
    5b9a:	48 89 fb             	mov    %rdi,%rbx
    5b9d:	bf 30 00 00 00       	mov    $0x30,%edi
    5ba2:	48 83 ec 10          	sub    $0x10,%rsp
    5ba6:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
    5bac:	e8 6f ca ff ff       	call   2620 <malloc@plt>
    5bb1:	49 89 c4             	mov    %rax,%r12
    5bb4:	48 85 c0             	test   %rax,%rax
    5bb7:	74 7f                	je     5c38 <pareto_alloc_pattern_fn+0xa8>
    5bb9:	f2 0f 10 15 1f 34 00 	movsd  0x341f(%rip),%xmm2        # 8fe0 <args_doc_str.3+0x148>
    5bc0:	00 
    5bc1:	8d 45 08             	lea    0x8(%rbp),%eax
    5bc4:	48 85 db             	test   %rbx,%rbx
    5bc7:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
    5bcd:	49 89 04 24          	mov    %rax,(%r12)
    5bd1:	f2 41 0f 11 54 24 08 	movsd  %xmm2,0x8(%r12)
    5bd8:	78 6e                	js     5c48 <pareto_alloc_pattern_fn+0xb8>
    5bda:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5bde:	f2 48 0f 2a c3       	cvtsi2sd %rbx,%xmm0
    5be3:	66 0f 28 da          	movapd %xmm2,%xmm3
    5be7:	f2 41 0f 11 44 24 10 	movsd  %xmm0,0x10(%r12)
    5bee:	f2 0f 5e d8          	divsd  %xmm0,%xmm3
    5bf2:	f2 41 0f 11 4c 24 18 	movsd  %xmm1,0x18(%r12)
    5bf9:	f2 0f 11 4c 24 08    	movsd  %xmm1,0x8(%rsp)
    5bff:	66 0f 28 c3          	movapd %xmm3,%xmm0
    5c03:	e8 b8 ca ff ff       	call   26c0 <pow@plt>
    5c08:	48 8b 05 d1 33 00 00 	mov    0x33d1(%rip),%rax        # 8fe0 <args_doc_str.3+0x148>
    5c0f:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
    5c15:	66 48 0f 6e d0       	movq   %rax,%xmm2
    5c1a:	f2 0f 5c d0          	subsd  %xmm0,%xmm2
    5c1e:	f2 0f 10 05 ca 33 00 	movsd  0x33ca(%rip),%xmm0        # 8ff0 <args_doc_str.3+0x158>
    5c25:	00 
    5c26:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    5c2a:	f2 41 0f 11 54 24 20 	movsd  %xmm2,0x20(%r12)
    5c31:	f2 41 0f 11 44 24 28 	movsd  %xmm0,0x28(%r12)
    5c38:	48 83 c4 10          	add    $0x10,%rsp
    5c3c:	4c 89 e0             	mov    %r12,%rax
    5c3f:	5b                   	pop    %rbx
    5c40:	5d                   	pop    %rbp
    5c41:	41 5c                	pop    %r12
    5c43:	c3                   	ret    
    5c44:	0f 1f 40 00          	nopl   0x0(%rax)
    5c48:	48 89 d8             	mov    %rbx,%rax
    5c4b:	83 e3 01             	and    $0x1,%ebx
    5c4e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    5c52:	48 d1 e8             	shr    %rax
    5c55:	48 09 d8             	or     %rbx,%rax
    5c58:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    5c5d:	f2 0f 58 c0          	addsd  %xmm0,%xmm0
    5c61:	eb 80                	jmp    5be3 <pareto_alloc_pattern_fn+0x53>
    5c63:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    5c6a:	00 00 00 00 
    5c6e:	66 90                	xchg   %ax,%ax

0000000000005c70 <get_pattern_from_name>:
    5c70:	f3 0f 1e fa          	endbr64 
    5c74:	48 85 ff             	test   %rdi,%rdi
    5c77:	74 67                	je     5ce0 <get_pattern_from_name+0x70>
    5c79:	44 0f b6 17          	movzbl (%rdi),%r10d
    5c7d:	4c 8d 0d e4 7e 00 00 	lea    0x7ee4(%rip),%r9        # db68 <all_pattern+0x8>
    5c84:	4c 8d 05 55 88 00 00 	lea    0x8855(%rip),%r8        # e4e0 <linear_pattern>
    5c8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5c90:	49 8b 70 20          	mov    0x20(%r8),%rsi
    5c94:	44 38 16             	cmp    %r10b,(%rsi)
    5c97:	75 37                	jne    5cd0 <get_pattern_from_name+0x60>
    5c99:	45 84 d2             	test   %r10b,%r10b
    5c9c:	74 27                	je     5cc5 <get_pattern_from_name+0x55>
    5c9e:	b8 01 00 00 00       	mov    $0x1,%eax
    5ca3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    5ca8:	0f b6 14 06          	movzbl (%rsi,%rax,1),%edx
    5cac:	3a 14 07             	cmp    (%rdi,%rax,1),%dl
    5caf:	75 1f                	jne    5cd0 <get_pattern_from_name+0x60>
    5cb1:	84 d2                	test   %dl,%dl
    5cb3:	0f 94 c2             	sete   %dl
    5cb6:	48 83 f8 0f          	cmp    $0xf,%rax
    5cba:	0f 94 c1             	sete   %cl
    5cbd:	48 83 c0 01          	add    $0x1,%rax
    5cc1:	08 ca                	or     %cl,%dl
    5cc3:	74 e3                	je     5ca8 <get_pattern_from_name+0x38>
    5cc5:	4c 89 c0             	mov    %r8,%rax
    5cc8:	c3                   	ret    
    5cc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5cd0:	4d 8b 01             	mov    (%r9),%r8
    5cd3:	49 83 c1 08          	add    $0x8,%r9
    5cd7:	4d 85 c0             	test   %r8,%r8
    5cda:	75 b4                	jne    5c90 <get_pattern_from_name+0x20>
    5cdc:	4c 89 c0             	mov    %r8,%rax
    5cdf:	c3                   	ret    
    5ce0:	45 31 c0             	xor    %r8d,%r8d
    5ce3:	eb e0                	jmp    5cc5 <get_pattern_from_name+0x55>
    5ce5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    5cec:	00 00 00 00 

0000000000005cf0 <get_offset_function>:
    5cf0:	f3 0f 1e fa          	endbr64 
    5cf4:	85 ff                	test   %edi,%edi
    5cf6:	48 8d 15 73 29 40 00 	lea    0x402973(%rip),%rdx        # 408670 <offset_constant>
    5cfd:	48 8d 05 3c 29 40 00 	lea    0x40293c(%rip),%rax        # 408640 <offset_random>
    5d04:	48 0f 49 c2          	cmovns %rdx,%rax
    5d08:	c3                   	ret    
    5d09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000005d10 <measure_rdtsc_frequency>:
    5d10:	41 54                	push   %r12
    5d12:	55                   	push   %rbp
    5d13:	53                   	push   %rbx
    5d14:	0f 31                	rdtsc  
    5d16:	bf 00 00 02 00       	mov    $0x20000,%edi
    5d1b:	48 89 d5             	mov    %rdx,%rbp
    5d1e:	49 89 c4             	mov    %rax,%r12
    5d21:	e8 2a c9 ff ff       	call   2650 <usleep@plt>
    5d26:	89 c1                	mov    %eax,%ecx
    5d28:	0f 31                	rdtsc  
    5d2a:	85 c9                	test   %ecx,%ecx
    5d2c:	75 6a                	jne    5d98 <measure_rdtsc_frequency+0x88>
    5d2e:	48 c1 e2 20          	shl    $0x20,%rdx
    5d32:	48 89 d3             	mov    %rdx,%rbx
    5d35:	48 89 ea             	mov    %rbp,%rdx
    5d38:	48 c1 e2 20          	shl    $0x20,%rdx
    5d3c:	48 09 c3             	or     %rax,%rbx
    5d3f:	48 89 d0             	mov    %rdx,%rax
    5d42:	4c 09 e0             	or     %r12,%rax
    5d45:	48 29 c3             	sub    %rax,%rbx
    5d48:	0f 31                	rdtsc  
    5d4a:	48 c1 e2 20          	shl    $0x20,%rdx
    5d4e:	bf 00 00 04 00       	mov    $0x40000,%edi
    5d53:	48 09 c2             	or     %rax,%rdx
    5d56:	48 89 d5             	mov    %rdx,%rbp
    5d59:	e8 f2 c8 ff ff       	call   2650 <usleep@plt>
    5d5e:	89 c1                	mov    %eax,%ecx
    5d60:	0f 31                	rdtsc  
    5d62:	48 c1 e2 20          	shl    $0x20,%rdx
    5d66:	48 09 c2             	or     %rax,%rdx
    5d69:	85 c9                	test   %ecx,%ecx
    5d6b:	75 2b                	jne    5d98 <measure_rdtsc_frequency+0x88>
    5d6d:	48 8d 44 5d 00       	lea    0x0(%rbp,%rbx,2),%rax
    5d72:	48 29 d0             	sub    %rdx,%rax
    5d75:	48 ba ff ff ff ff ff 	movabs $0x1ffffffffffffff,%rdx
    5d7c:	ff ff 01 
    5d7f:	48 21 d0             	and    %rdx,%rax
    5d82:	48 29 c3             	sub    %rax,%rbx
    5d85:	48 69 c3 e8 03 00 00 	imul   $0x3e8,%rbx,%rax
    5d8c:	5b                   	pop    %rbx
    5d8d:	5d                   	pop    %rbp
    5d8e:	41 5c                	pop    %r12
    5d90:	48 c1 e8 11          	shr    $0x11,%rax
    5d94:	c3                   	ret    
    5d95:	0f 1f 00             	nopl   (%rax)
    5d98:	48 8d 3d 59 32 00 00 	lea    0x3259(%rip),%rdi        # 8ff8 <args_doc_str.3+0x160>
    5d9f:	e8 dc c8 ff ff       	call   2680 <puts@plt>
    5da4:	5b                   	pop    %rbx
    5da5:	31 c0                	xor    %eax,%eax
    5da7:	5d                   	pop    %rbp
    5da8:	41 5c                	pop    %r12
    5daa:	c3                   	ret    
    5dab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000005db0 <cpuid_cpu_model>:
    5db0:	8b 35 4a a0 00 00    	mov    0xa04a(%rip),%esi        # fe00 <_cpuid>
    5db6:	53                   	push   %rbx
    5db7:	89 f0                	mov    %esi,%eax
    5db9:	83 e0 01             	and    $0x1,%eax
    5dbc:	75 25                	jne    5de3 <cpuid_cpu_model+0x33>
    5dbe:	89 c1                	mov    %eax,%ecx
    5dc0:	0f a2                	cpuid  
    5dc2:	83 ce 01             	or     $0x1,%esi
    5dc5:	89 05 3d a0 00 00    	mov    %eax,0xa03d(%rip)        # fe08 <_cpuid+0x8>
    5dcb:	89 1d 3b a0 00 00    	mov    %ebx,0xa03b(%rip)        # fe0c <_cpuid+0xc>
    5dd1:	89 0d 39 a0 00 00    	mov    %ecx,0xa039(%rip)        # fe10 <_cpuid+0x10>
    5dd7:	89 15 37 a0 00 00    	mov    %edx,0xa037(%rip)        # fe14 <_cpuid+0x14>
    5ddd:	89 35 1d a0 00 00    	mov    %esi,0xa01d(%rip)        # fe00 <_cpuid>
    5de3:	8b 15 1f a0 00 00    	mov    0xa01f(%rip),%edx        # fe08 <_cpuid+0x8>
    5de9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    5dee:	85 d2                	test   %edx,%edx
    5df0:	74 33                	je     5e25 <cpuid_cpu_model+0x75>
    5df2:	8b 35 08 a0 00 00    	mov    0xa008(%rip),%esi        # fe00 <_cpuid>
    5df8:	89 f1                	mov    %esi,%ecx
    5dfa:	83 e1 02             	and    $0x2,%ecx
    5dfd:	74 31                	je     5e30 <cpuid_cpu_model+0x80>
    5dff:	8b 05 13 a0 00 00    	mov    0xa013(%rip),%eax        # fe18 <_cpuid+0x18>
    5e05:	0f b6 d4             	movzbl %ah,%edx
    5e08:	89 c1                	mov    %eax,%ecx
    5e0a:	c1 e9 08             	shr    $0x8,%ecx
    5e0d:	83 e2 0f             	and    $0xf,%edx
    5e10:	83 e1 0f             	and    $0xf,%ecx
    5e13:	80 fa 0f             	cmp    $0xf,%dl
    5e16:	74 48                	je     5e60 <cpuid_cpu_model+0xb0>
    5e18:	80 fa 06             	cmp    $0x6,%dl
    5e1b:	74 4d                	je     5e6a <cpuid_cpu_model+0xba>
    5e1d:	89 0f                	mov    %ecx,(%rdi)
    5e1f:	c0 e8 04             	shr    $0x4,%al
    5e22:	0f b6 c0             	movzbl %al,%eax
    5e25:	5b                   	pop    %rbx
    5e26:	c3                   	ret    
    5e27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5e2e:	00 00 
    5e30:	b8 01 00 00 00       	mov    $0x1,%eax
    5e35:	0f a2                	cpuid  
    5e37:	83 ce 02             	or     $0x2,%esi
    5e3a:	89 05 d8 9f 00 00    	mov    %eax,0x9fd8(%rip)        # fe18 <_cpuid+0x18>
    5e40:	89 1d d6 9f 00 00    	mov    %ebx,0x9fd6(%rip)        # fe1c <_cpuid+0x1c>
    5e46:	89 0d d4 9f 00 00    	mov    %ecx,0x9fd4(%rip)        # fe20 <_cpuid+0x20>
    5e4c:	89 15 d2 9f 00 00    	mov    %edx,0x9fd2(%rip)        # fe24 <_cpuid+0x24>
    5e52:	89 35 a8 9f 00 00    	mov    %esi,0x9fa8(%rip)        # fe00 <_cpuid>
    5e58:	eb a5                	jmp    5dff <cpuid_cpu_model+0x4f>
    5e5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5e60:	89 c2                	mov    %eax,%edx
    5e62:	c1 ea 14             	shr    $0x14,%edx
    5e65:	0f b6 d2             	movzbl %dl,%edx
    5e68:	01 d1                	add    %edx,%ecx
    5e6a:	89 c2                	mov    %eax,%edx
    5e6c:	c0 e8 04             	shr    $0x4,%al
    5e6f:	89 0f                	mov    %ecx,(%rdi)
    5e71:	c1 ea 0c             	shr    $0xc,%edx
    5e74:	0f b6 c0             	movzbl %al,%eax
    5e77:	81 e2 f0 00 00 00    	and    $0xf0,%edx
    5e7d:	01 d0                	add    %edx,%eax
    5e7f:	eb a4                	jmp    5e25 <cpuid_cpu_model+0x75>
    5e81:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    5e88:	00 00 00 00 
    5e8c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005e90 <is_rdtscp_available>:
    5e90:	f3 0f 1e fa          	endbr64 
    5e94:	8b 35 6a 9f 00 00    	mov    0x9f6a(%rip),%esi        # fe04 <_cpuid+0x4>
    5e9a:	53                   	push   %rbx
    5e9b:	89 f1                	mov    %esi,%ecx
    5e9d:	83 e1 01             	and    $0x1,%ecx
    5ea0:	75 28                	jne    5eca <is_rdtscp_available+0x3a>
    5ea2:	b8 00 00 00 80       	mov    $0x80000000,%eax
    5ea7:	0f a2                	cpuid  
    5ea9:	83 ce 01             	or     $0x1,%esi
    5eac:	89 05 56 a1 00 00    	mov    %eax,0xa156(%rip)        # 10008 <_cpuid+0x208>
    5eb2:	89 1d 54 a1 00 00    	mov    %ebx,0xa154(%rip)        # 1000c <_cpuid+0x20c>
    5eb8:	89 0d 52 a1 00 00    	mov    %ecx,0xa152(%rip)        # 10010 <_cpuid+0x210>
    5ebe:	89 15 50 a1 00 00    	mov    %edx,0xa150(%rip)        # 10014 <_cpuid+0x214>
    5ec4:	89 35 3a 9f 00 00    	mov    %esi,0x9f3a(%rip)        # fe04 <_cpuid+0x4>
    5eca:	31 c0                	xor    %eax,%eax
    5ecc:	81 3d 32 a1 00 00 00 	cmpl   $0x80000000,0xa132(%rip)        # 10008 <_cpuid+0x208>
    5ed3:	00 00 80 
    5ed6:	76 41                	jbe    5f19 <is_rdtscp_available+0x89>
    5ed8:	8b 35 26 9f 00 00    	mov    0x9f26(%rip),%esi        # fe04 <_cpuid+0x4>
    5ede:	89 f1                	mov    %esi,%ecx
    5ee0:	83 e1 02             	and    $0x2,%ecx
    5ee3:	75 28                	jne    5f0d <is_rdtscp_available+0x7d>
    5ee5:	b8 01 00 00 80       	mov    $0x80000001,%eax
    5eea:	0f a2                	cpuid  
    5eec:	83 ce 02             	or     $0x2,%esi
    5eef:	89 05 23 a1 00 00    	mov    %eax,0xa123(%rip)        # 10018 <_cpuid+0x218>
    5ef5:	89 1d 21 a1 00 00    	mov    %ebx,0xa121(%rip)        # 1001c <_cpuid+0x21c>
    5efb:	89 0d 1f a1 00 00    	mov    %ecx,0xa11f(%rip)        # 10020 <_cpuid+0x220>
    5f01:	89 15 1d a1 00 00    	mov    %edx,0xa11d(%rip)        # 10024 <_cpuid+0x224>
    5f07:	89 35 f7 9e 00 00    	mov    %esi,0x9ef7(%rip)        # fe04 <_cpuid+0x4>
    5f0d:	8b 05 11 a1 00 00    	mov    0xa111(%rip),%eax        # 10024 <_cpuid+0x224>
    5f13:	c1 e8 1b             	shr    $0x1b,%eax
    5f16:	83 e0 01             	and    $0x1,%eax
    5f19:	5b                   	pop    %rbx
    5f1a:	c3                   	ret    
    5f1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000005f20 <is_tsc_invariant>:
    5f20:	f3 0f 1e fa          	endbr64 
    5f24:	8b 35 da 9e 00 00    	mov    0x9eda(%rip),%esi        # fe04 <_cpuid+0x4>
    5f2a:	53                   	push   %rbx
    5f2b:	89 f1                	mov    %esi,%ecx
    5f2d:	83 e1 01             	and    $0x1,%ecx
    5f30:	75 28                	jne    5f5a <is_tsc_invariant+0x3a>
    5f32:	b8 00 00 00 80       	mov    $0x80000000,%eax
    5f37:	0f a2                	cpuid  
    5f39:	83 ce 01             	or     $0x1,%esi
    5f3c:	89 05 c6 a0 00 00    	mov    %eax,0xa0c6(%rip)        # 10008 <_cpuid+0x208>
    5f42:	89 1d c4 a0 00 00    	mov    %ebx,0xa0c4(%rip)        # 1000c <_cpuid+0x20c>
    5f48:	89 0d c2 a0 00 00    	mov    %ecx,0xa0c2(%rip)        # 10010 <_cpuid+0x210>
    5f4e:	89 15 c0 a0 00 00    	mov    %edx,0xa0c0(%rip)        # 10014 <_cpuid+0x214>
    5f54:	89 35 aa 9e 00 00    	mov    %esi,0x9eaa(%rip)        # fe04 <_cpuid+0x4>
    5f5a:	31 c0                	xor    %eax,%eax
    5f5c:	81 3d a2 a0 00 00 06 	cmpl   $0x80000006,0xa0a2(%rip)        # 10008 <_cpuid+0x208>
    5f63:	00 00 80 
    5f66:	76 45                	jbe    5fad <is_tsc_invariant+0x8d>
    5f68:	8b 35 96 9e 00 00    	mov    0x9e96(%rip),%esi        # fe04 <_cpuid+0x4>
    5f6e:	89 f1                	mov    %esi,%ecx
    5f70:	81 e1 80 00 00 00    	and    $0x80,%ecx
    5f76:	75 29                	jne    5fa1 <is_tsc_invariant+0x81>
    5f78:	b8 07 00 00 80       	mov    $0x80000007,%eax
    5f7d:	0f a2                	cpuid  
    5f7f:	40 80 ce 80          	or     $0x80,%sil
    5f83:	89 05 ef a0 00 00    	mov    %eax,0xa0ef(%rip)        # 10078 <_cpuid+0x278>
    5f89:	89 1d ed a0 00 00    	mov    %ebx,0xa0ed(%rip)        # 1007c <_cpuid+0x27c>
    5f8f:	89 0d eb a0 00 00    	mov    %ecx,0xa0eb(%rip)        # 10080 <_cpuid+0x280>
    5f95:	89 15 e9 a0 00 00    	mov    %edx,0xa0e9(%rip)        # 10084 <_cpuid+0x284>
    5f9b:	89 35 63 9e 00 00    	mov    %esi,0x9e63(%rip)        # fe04 <_cpuid+0x4>
    5fa1:	8b 05 dd a0 00 00    	mov    0xa0dd(%rip),%eax        # 10084 <_cpuid+0x284>
    5fa7:	c1 e8 08             	shr    $0x8,%eax
    5faa:	83 e0 01             	and    $0x1,%eax
    5fad:	5b                   	pop    %rbx
    5fae:	c3                   	ret    
    5faf:	90                   	nop

0000000000005fb0 <__cpuid_obtain_brand_string>:
    5fb0:	f3 0f 1e fa          	endbr64 
    5fb4:	8b 35 4a 9e 00 00    	mov    0x9e4a(%rip),%esi        # fe04 <_cpuid+0x4>
    5fba:	53                   	push   %rbx
    5fbb:	89 f1                	mov    %esi,%ecx
    5fbd:	83 e1 01             	and    $0x1,%ecx
    5fc0:	75 28                	jne    5fea <__cpuid_obtain_brand_string+0x3a>
    5fc2:	b8 00 00 00 80       	mov    $0x80000000,%eax
    5fc7:	0f a2                	cpuid  
    5fc9:	83 ce 01             	or     $0x1,%esi
    5fcc:	89 05 36 a0 00 00    	mov    %eax,0xa036(%rip)        # 10008 <_cpuid+0x208>
    5fd2:	89 1d 34 a0 00 00    	mov    %ebx,0xa034(%rip)        # 1000c <_cpuid+0x20c>
    5fd8:	89 0d 32 a0 00 00    	mov    %ecx,0xa032(%rip)        # 10010 <_cpuid+0x210>
    5fde:	89 15 30 a0 00 00    	mov    %edx,0xa030(%rip)        # 10014 <_cpuid+0x214>
    5fe4:	89 35 1a 9e 00 00    	mov    %esi,0x9e1a(%rip)        # fe04 <_cpuid+0x4>
    5fea:	81 3d 14 a0 00 00 03 	cmpl   $0x80000003,0xa014(%rip)        # 10008 <_cpuid+0x208>
    5ff1:	00 00 80 
    5ff4:	0f 86 e6 00 00 00    	jbe    60e0 <__cpuid_obtain_brand_string+0x130>
    5ffa:	8b 35 04 9e 00 00    	mov    0x9e04(%rip),%esi        # fe04 <_cpuid+0x4>
    6000:	89 f1                	mov    %esi,%ecx
    6002:	83 e1 04             	and    $0x4,%ecx
    6005:	75 28                	jne    602f <__cpuid_obtain_brand_string+0x7f>
    6007:	b8 02 00 00 80       	mov    $0x80000002,%eax
    600c:	0f a2                	cpuid  
    600e:	83 ce 04             	or     $0x4,%esi
    6011:	89 05 11 a0 00 00    	mov    %eax,0xa011(%rip)        # 10028 <_cpuid+0x228>
    6017:	89 1d 0f a0 00 00    	mov    %ebx,0xa00f(%rip)        # 1002c <_cpuid+0x22c>
    601d:	89 0d 0d a0 00 00    	mov    %ecx,0xa00d(%rip)        # 10030 <_cpuid+0x230>
    6023:	89 15 0b a0 00 00    	mov    %edx,0xa00b(%rip)        # 10034 <_cpuid+0x234>
    6029:	89 35 d5 9d 00 00    	mov    %esi,0x9dd5(%rip)        # fe04 <_cpuid+0x4>
    602f:	89 f1                	mov    %esi,%ecx
    6031:	83 e1 08             	and    $0x8,%ecx
    6034:	75 2e                	jne    6064 <__cpuid_obtain_brand_string+0xb4>
    6036:	b8 03 00 00 80       	mov    $0x80000003,%eax
    603b:	0f a2                	cpuid  
    603d:	8b 35 c1 9d 00 00    	mov    0x9dc1(%rip),%esi        # fe04 <_cpuid+0x4>
    6043:	89 05 ef 9f 00 00    	mov    %eax,0x9fef(%rip)        # 10038 <_cpuid+0x238>
    6049:	89 1d ed 9f 00 00    	mov    %ebx,0x9fed(%rip)        # 1003c <_cpuid+0x23c>
    604f:	83 ce 08             	or     $0x8,%esi
    6052:	89 0d e8 9f 00 00    	mov    %ecx,0x9fe8(%rip)        # 10040 <_cpuid+0x240>
    6058:	89 15 e6 9f 00 00    	mov    %edx,0x9fe6(%rip)        # 10044 <_cpuid+0x244>
    605e:	89 35 a0 9d 00 00    	mov    %esi,0x9da0(%rip)        # fe04 <_cpuid+0x4>
    6064:	83 e6 10             	and    $0x10,%esi
    6067:	74 47                	je     60b0 <__cpuid_obtain_brand_string+0x100>
    6069:	0f b6 0d b8 9f 00 00 	movzbl 0x9fb8(%rip),%ecx        # 10028 <_cpuid+0x228>
    6070:	48 8d 15 b1 9f 00 00 	lea    0x9fb1(%rip),%rdx        # 10028 <_cpuid+0x228>
    6077:	80 f9 20             	cmp    $0x20,%cl
    607a:	75 11                	jne    608d <__cpuid_obtain_brand_string+0xdd>
    607c:	0f 1f 40 00          	nopl   0x0(%rax)
    6080:	0f b6 4a 01          	movzbl 0x1(%rdx),%ecx
    6084:	48 83 c2 01          	add    $0x1,%rdx
    6088:	80 f9 20             	cmp    $0x20,%cl
    608b:	74 f3                	je     6080 <__cpuid_obtain_brand_string+0xd0>
    608d:	48 89 f8             	mov    %rdi,%rax
    6090:	eb 09                	jmp    609b <__cpuid_obtain_brand_string+0xeb>
    6092:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6098:	0f b6 0a             	movzbl (%rdx),%ecx
    609b:	48 83 c0 01          	add    $0x1,%rax
    609f:	48 83 c2 01          	add    $0x1,%rdx
    60a3:	88 48 ff             	mov    %cl,-0x1(%rax)
    60a6:	84 c9                	test   %cl,%cl
    60a8:	75 ee                	jne    6098 <__cpuid_obtain_brand_string+0xe8>
    60aa:	29 f8                	sub    %edi,%eax
    60ac:	5b                   	pop    %rbx
    60ad:	c3                   	ret    
    60ae:	66 90                	xchg   %ax,%ax
    60b0:	b8 04 00 00 80       	mov    $0x80000004,%eax
    60b5:	89 f1                	mov    %esi,%ecx
    60b7:	0f a2                	cpuid  
    60b9:	83 0d 44 9d 00 00 10 	orl    $0x10,0x9d44(%rip)        # fe04 <_cpuid+0x4>
    60c0:	89 05 82 9f 00 00    	mov    %eax,0x9f82(%rip)        # 10048 <_cpuid+0x248>
    60c6:	89 1d 80 9f 00 00    	mov    %ebx,0x9f80(%rip)        # 1004c <_cpuid+0x24c>
    60cc:	89 0d 7e 9f 00 00    	mov    %ecx,0x9f7e(%rip)        # 10050 <_cpuid+0x250>
    60d2:	89 15 7c 9f 00 00    	mov    %edx,0x9f7c(%rip)        # 10054 <_cpuid+0x254>
    60d8:	eb 8f                	jmp    6069 <__cpuid_obtain_brand_string+0xb9>
    60da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    60e0:	31 c0                	xor    %eax,%eax
    60e2:	c6 07 00             	movb   $0x0,(%rdi)
    60e5:	5b                   	pop    %rbx
    60e6:	c3                   	ret    
    60e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    60ee:	00 00 

00000000000060f0 <get_tlb_info>:
    60f0:	f3 0f 1e fa          	endbr64 
    60f4:	48 63 ff             	movslq %edi,%rdi
    60f7:	48 8d 05 f2 8a 00 00 	lea    0x8af2(%rip),%rax        # ebf0 <tlb_info_buf>
    60fe:	0f b6 04 38          	movzbl (%rax,%rdi,1),%eax
    6102:	c3                   	ret    
    6103:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    610a:	00 00 00 00 
    610e:	66 90                	xchg   %ax,%ax

0000000000006110 <get_cache_type>:
    6110:	f3 0f 1e fa          	endbr64 
    6114:	48 63 c7             	movslq %edi,%rax
    6117:	48 8d 0d 42 8a 00 00 	lea    0x8a42(%rip),%rcx        # eb60 <cash>
    611e:	48 c1 e0 04          	shl    $0x4,%rax
    6122:	8b 4c 01 0c          	mov    0xc(%rcx,%rax,1),%ecx
    6126:	48 8d 05 7b 41 00 00 	lea    0x417b(%rip),%rax        # a2a8 <args_doc_str.3+0x1410>
    612d:	83 f9 02             	cmp    $0x2,%ecx
    6130:	74 3e                	je     6170 <get_cache_type+0x60>
    6132:	48 8d 05 69 41 00 00 	lea    0x4169(%rip),%rax        # a2a2 <args_doc_str.3+0x140a>
    6139:	83 f9 03             	cmp    $0x3,%ecx
    613c:	74 32                	je     6170 <get_cache_type+0x60>
    613e:	48 8d 05 5c 41 00 00 	lea    0x415c(%rip),%rax        # a2a1 <args_doc_str.3+0x1409>
    6145:	83 f9 01             	cmp    $0x1,%ecx
    6148:	74 26                	je     6170 <get_cache_type+0x60>
    614a:	48 83 ec 08          	sub    $0x8,%rsp
    614e:	89 fa                	mov    %edi,%edx
    6150:	48 8d 35 63 41 00 00 	lea    0x4163(%rip),%rsi        # a2ba <args_doc_str.3+0x1422>
    6157:	31 c0                	xor    %eax,%eax
    6159:	bf 01 00 00 00       	mov    $0x1,%edi
    615e:	e8 3d c2 ff ff       	call   23a0 <__printf_chk@plt>
    6163:	48 8d 05 45 41 00 00 	lea    0x4145(%rip),%rax        # a2af <args_doc_str.3+0x1417>
    616a:	48 83 c4 08          	add    $0x8,%rsp
    616e:	c3                   	ret    
    616f:	90                   	nop
    6170:	c3                   	ret    
    6171:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    6178:	00 00 00 00 
    617c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006180 <get_cache_info>:
    6180:	f3 0f 1e fa          	endbr64 
    6184:	83 fe 05             	cmp    $0x5,%esi
    6187:	0f 87 98 00 00 00    	ja     6225 <get_cache_info+0xa5>
    618d:	48 8d 15 80 46 00 00 	lea    0x4680(%rip),%rdx        # a814 <args_doc_str.3+0x197c>
    6194:	89 f1                	mov    %esi,%ecx
    6196:	48 63 ff             	movslq %edi,%rdi
    6199:	48 63 04 8a          	movslq (%rdx,%rcx,4),%rax
    619d:	48 c1 e7 04          	shl    $0x4,%rdi
    61a1:	48 01 d0             	add    %rdx,%rax
    61a4:	3e ff e0             	notrack jmp *%rax
    61a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    61ae:	00 00 
    61b0:	48 8d 05 a9 89 00 00 	lea    0x89a9(%rip),%rax        # eb60 <cash>
    61b7:	0f bf 44 38 0a       	movswl 0xa(%rax,%rdi,1),%eax
    61bc:	c3                   	ret    
    61bd:	0f 1f 00             	nopl   (%rax)
    61c0:	48 8d 15 99 89 00 00 	lea    0x8999(%rip),%rdx        # eb60 <cash>
    61c7:	48 01 fa             	add    %rdi,%rdx
    61ca:	0f bf 42 04          	movswl 0x4(%rdx),%eax
    61ce:	0f bf 4a 06          	movswl 0x6(%rdx),%ecx
    61d2:	0f af c1             	imul   %ecx,%eax
    61d5:	0f af 02             	imul   (%rdx),%eax
    61d8:	0f bf 52 08          	movswl 0x8(%rdx),%edx
    61dc:	0f af c2             	imul   %edx,%eax
    61df:	c1 e8 0a             	shr    $0xa,%eax
    61e2:	c3                   	ret    
    61e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    61e8:	48 8d 05 71 89 00 00 	lea    0x8971(%rip),%rax        # eb60 <cash>
    61ef:	8b 04 38             	mov    (%rax,%rdi,1),%eax
    61f2:	c3                   	ret    
    61f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    61f8:	48 8d 05 61 89 00 00 	lea    0x8961(%rip),%rax        # eb60 <cash>
    61ff:	0f bf 44 38 04       	movswl 0x4(%rax,%rdi,1),%eax
    6204:	c3                   	ret    
    6205:	0f 1f 00             	nopl   (%rax)
    6208:	48 8d 05 51 89 00 00 	lea    0x8951(%rip),%rax        # eb60 <cash>
    620f:	0f bf 44 38 06       	movswl 0x6(%rax,%rdi,1),%eax
    6214:	c3                   	ret    
    6215:	0f 1f 00             	nopl   (%rax)
    6218:	48 8d 05 41 89 00 00 	lea    0x8941(%rip),%rax        # eb60 <cash>
    621f:	0f bf 44 38 08       	movswl 0x8(%rax,%rdi,1),%eax
    6224:	c3                   	ret    
    6225:	48 83 ec 08          	sub    $0x8,%rsp
    6229:	89 f1                	mov    %esi,%ecx
    622b:	89 fa                	mov    %edi,%edx
    622d:	31 c0                	xor    %eax,%eax
    622f:	48 8d 35 62 3d 00 00 	lea    0x3d62(%rip),%rsi        # 9f98 <args_doc_str.3+0x1100>
    6236:	bf 01 00 00 00       	mov    $0x1,%edi
    623b:	e8 60 c1 ff ff       	call   23a0 <__printf_chk@plt>
    6240:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    6245:	48 83 c4 08          	add    $0x8,%rsp
    6249:	c3                   	ret    
    624a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000006250 <get_cycle_freq_fallback>:
    6250:	f3 0f 1e fa          	endbr64 
    6254:	41 54                	push   %r12
    6256:	48 8d 35 aa 2c 00 00 	lea    0x2caa(%rip),%rsi        # 8f07 <args_doc_str.3+0x6f>
    625d:	48 8d 3d 71 40 00 00 	lea    0x4071(%rip),%rdi        # a2d5 <args_doc_str.3+0x143d>
    6264:	53                   	push   %rbx
    6265:	48 83 ec 18          	sub    $0x18,%rsp
    6269:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6270:	00 00 
    6272:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    6277:	31 c0                	xor    %eax,%eax
    6279:	e8 22 c3 ff ff       	call   25a0 <fopen@plt>
    627e:	48 85 c0             	test   %rax,%rax
    6281:	0f 84 b2 00 00 00    	je     6339 <get_cycle_freq_fallback+0xe9>
    6287:	4c 8d 25 72 99 00 00 	lea    0x9972(%rip),%r12        # fc00 <buf.3>
    628e:	48 89 c1             	mov    %rax,%rcx
    6291:	ba 01 00 00 00       	mov    $0x1,%edx
    6296:	be 00 02 00 00       	mov    $0x200,%esi
    629b:	4c 89 e7             	mov    %r12,%rdi
    629e:	e8 cd c3 ff ff       	call   2670 <fread@plt>
    62a3:	4c 89 e7             	mov    %r12,%rdi
    62a6:	48 8d 35 36 40 00 00 	lea    0x4036(%rip),%rsi        # a2e3 <args_doc_str.3+0x144b>
    62ad:	e8 2e c1 ff ff       	call   23e0 <strstr@plt>
    62b2:	48 8d 54 24 04       	lea    0x4(%rsp),%rdx
    62b7:	48 8d 35 2d 40 00 00 	lea    0x402d(%rip),%rsi        # a2eb <args_doc_str.3+0x1453>
    62be:	48 8d 78 0b          	lea    0xb(%rax),%rdi
    62c2:	31 c0                	xor    %eax,%eax
    62c4:	e8 77 c2 ff ff       	call   2540 <__isoc99_sscanf@plt>
    62c9:	f3 0f 10 05 d3 2b 00 	movss  0x2bd3(%rip),%xmm0        # 8ea4 <args_doc_str.3+0xc>
    62d0:	00 
    62d1:	f3 0f 59 44 24 04    	mulss  0x4(%rsp),%xmm0
    62d7:	f3 48 0f 2c d8       	cvttss2si %xmm0,%rbx
    62dc:	8d 83 e0 5e f8 ff    	lea    -0x7a120(%rbx),%eax
    62e2:	41 89 dc             	mov    %ebx,%r12d
    62e5:	3d 20 aa 44 00       	cmp    $0x44aa20,%eax
    62ea:	77 3c                	ja     6328 <get_cycle_freq_fallback+0xd8>
    62ec:	e8 1f fa ff ff       	call   5d10 <measure_rdtsc_frequency>
    62f1:	85 c0                	test   %eax,%eax
    62f3:	74 12                	je     6307 <get_cycle_freq_fallback+0xb7>
    62f5:	81 c3 9f 86 01 00    	add    $0x1869f,%ebx
    62fb:	29 c3                	sub    %eax,%ebx
    62fd:	81 fb 3f 0d 03 00    	cmp    $0x30d3f,%ebx
    6303:	44 0f 43 e0          	cmovae %eax,%r12d
    6307:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    630c:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    6313:	00 00 
    6315:	75 33                	jne    634a <get_cycle_freq_fallback+0xfa>
    6317:	48 83 c4 18          	add    $0x18,%rsp
    631b:	44 89 e0             	mov    %r12d,%eax
    631e:	5b                   	pop    %rbx
    631f:	41 5c                	pop    %r12
    6321:	c3                   	ret    
    6322:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6328:	48 8d 3d b1 3c 00 00 	lea    0x3cb1(%rip),%rdi        # 9fe0 <args_doc_str.3+0x1148>
    632f:	45 31 e4             	xor    %r12d,%r12d
    6332:	e8 49 c3 ff ff       	call   2680 <puts@plt>
    6337:	eb ce                	jmp    6307 <get_cycle_freq_fallback+0xb7>
    6339:	48 8d 3d 78 3c 00 00 	lea    0x3c78(%rip),%rdi        # 9fb8 <args_doc_str.3+0x1120>
    6340:	45 31 e4             	xor    %r12d,%r12d
    6343:	e8 a8 c1 ff ff       	call   24f0 <perror@plt>
    6348:	eb bd                	jmp    6307 <get_cycle_freq_fallback+0xb7>
    634a:	e8 21 c2 ff ff       	call   2570 <__stack_chk_fail@plt>
    634f:	90                   	nop

0000000000006350 <get_cycle_freq>:
    6350:	f3 0f 1e fa          	endbr64 
    6354:	41 54                	push   %r12
    6356:	53                   	push   %rbx
    6357:	48 83 ec 58          	sub    $0x58,%rsp
    635b:	8b 35 9f 9a 00 00    	mov    0x9a9f(%rip),%esi        # fe00 <_cpuid>
    6361:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6368:	00 00 
    636a:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    636f:	31 c0                	xor    %eax,%eax
    6371:	89 f0                	mov    %esi,%eax
    6373:	83 e0 01             	and    $0x1,%eax
    6376:	75 25                	jne    639d <get_cycle_freq+0x4d>
    6378:	89 c1                	mov    %eax,%ecx
    637a:	0f a2                	cpuid  
    637c:	83 ce 01             	or     $0x1,%esi
    637f:	89 05 83 9a 00 00    	mov    %eax,0x9a83(%rip)        # fe08 <_cpuid+0x8>
    6385:	89 1d 81 9a 00 00    	mov    %ebx,0x9a81(%rip)        # fe0c <_cpuid+0xc>
    638b:	89 0d 7f 9a 00 00    	mov    %ecx,0x9a7f(%rip)        # fe10 <_cpuid+0x10>
    6391:	89 15 7d 9a 00 00    	mov    %edx,0x9a7d(%rip)        # fe14 <_cpuid+0x14>
    6397:	89 35 63 9a 00 00    	mov    %esi,0x9a63(%rip)        # fe00 <_cpuid>
    639d:	83 3d 64 9a 00 00 14 	cmpl   $0x14,0x9a64(%rip)        # fe08 <_cpuid+0x8>
    63a4:	0f 86 b6 00 00 00    	jbe    6460 <get_cycle_freq+0x110>
    63aa:	8b 35 50 9a 00 00    	mov    0x9a50(%rip),%esi        # fe00 <_cpuid>
    63b0:	89 f1                	mov    %esi,%ecx
    63b2:	81 e1 00 00 20 00    	and    $0x200000,%ecx
    63b8:	75 28                	jne    63e2 <get_cycle_freq+0x92>
    63ba:	b8 05 00 00 00       	mov    $0x5,%eax
    63bf:	0f a2                	cpuid  
    63c1:	83 ce 20             	or     $0x20,%esi
    63c4:	89 05 8e 9a 00 00    	mov    %eax,0x9a8e(%rip)        # fe58 <_cpuid+0x58>
    63ca:	89 1d 8c 9a 00 00    	mov    %ebx,0x9a8c(%rip)        # fe5c <_cpuid+0x5c>
    63d0:	89 0d 8a 9a 00 00    	mov    %ecx,0x9a8a(%rip)        # fe60 <_cpuid+0x60>
    63d6:	89 15 88 9a 00 00    	mov    %edx,0x9a88(%rip)        # fe64 <_cpuid+0x64>
    63dc:	89 35 1e 9a 00 00    	mov    %esi,0x9a1e(%rip)        # fe00 <_cpuid>
    63e2:	8b 0d 70 9b 00 00    	mov    0x9b70(%rip),%ecx        # ff58 <_cpuid+0x158>
    63e8:	85 c9                	test   %ecx,%ecx
    63ea:	74 74                	je     6460 <get_cycle_freq+0x110>
    63ec:	8b 35 6a 9b 00 00    	mov    0x9b6a(%rip),%esi        # ff5c <_cpuid+0x15c>
    63f2:	85 f6                	test   %esi,%esi
    63f4:	74 6a                	je     6460 <get_cycle_freq+0x110>
    63f6:	8b 15 64 9b 00 00    	mov    0x9b64(%rip),%edx        # ff60 <_cpuid+0x160>
    63fc:	85 d2                	test   %edx,%edx
    63fe:	0f 84 ac 01 00 00    	je     65b0 <get_cycle_freq+0x260>
    6404:	89 d0                	mov    %edx,%eax
    6406:	48 0f af c6          	imul   %rsi,%rax
    640a:	31 d2                	xor    %edx,%edx
    640c:	48 f7 f1             	div    %rcx
    640f:	48 ba cf f7 53 e3 a5 	movabs $0x20c49ba5e353f7cf,%rdx
    6416:	9b c4 20 
    6419:	48 c1 e8 03          	shr    $0x3,%rax
    641d:	48 f7 e2             	mul    %rdx
    6420:	48 c1 ea 04          	shr    $0x4,%rdx
    6424:	41 89 d4             	mov    %edx,%r12d
    6427:	85 d2                	test   %edx,%edx
    6429:	74 35                	je     6460 <get_cycle_freq+0x110>
    642b:	e8 e0 f8 ff ff       	call   5d10 <measure_rdtsc_frequency>
    6430:	85 c0                	test   %eax,%eax
    6432:	74 2c                	je     6460 <get_cycle_freq+0x110>
    6434:	41 8d 94 24 9f 86 01 	lea    0x1869f(%r12),%edx
    643b:	00 
    643c:	29 c2                	sub    %eax,%edx
    643e:	81 fa 3e 0d 03 00    	cmp    $0x30d3e,%edx
    6444:	0f 86 b6 01 00 00    	jbe    6600 <get_cycle_freq+0x2b0>
    644a:	48 8d 3d bf 3b 00 00 	lea    0x3bbf(%rip),%rdi        # a010 <args_doc_str.3+0x1178>
    6451:	e8 2a c2 ff ff       	call   2680 <puts@plt>
    6456:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    645d:	00 00 00 
    6460:	48 8d 3d 87 3e 00 00 	lea    0x3e87(%rip),%rdi        # a2ee <args_doc_str.3+0x1456>
    6467:	31 f6                	xor    %esi,%esi
    6469:	31 c0                	xor    %eax,%eax
    646b:	e8 20 c0 ff ff       	call   2490 <open@plt>
    6470:	89 c7                	mov    %eax,%edi
    6472:	85 c0                	test   %eax,%eax
    6474:	78 1e                	js     6494 <get_cycle_freq+0x144>
    6476:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    647b:	b9 ce 00 00 00       	mov    $0xce,%ecx
    6480:	ba 08 00 00 00       	mov    $0x8,%edx
    6485:	e8 66 c1 ff ff       	call   25f0 <pread@plt>
    648a:	48 83 f8 08          	cmp    $0x8,%rax
    648e:	0f 84 9c 00 00 00    	je     6530 <get_cycle_freq+0x1e0>
    6494:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    6499:	e8 12 fb ff ff       	call   5fb0 <__cpuid_obtain_brand_string>
    649e:	48 63 d0             	movslq %eax,%rdx
    64a1:	48 01 fa             	add    %rdi,%rdx
    64a4:	85 c0                	test   %eax,%eax
    64a6:	74 68                	je     6510 <get_cycle_freq+0x1c0>
    64a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    64af:	00 
    64b0:	48 89 d0             	mov    %rdx,%rax
    64b3:	48 39 fa             	cmp    %rdi,%rdx
    64b6:	72 58                	jb     6510 <get_cycle_freq+0x1c0>
    64b8:	80 38 7a             	cmpb   $0x7a,(%rax)
    64bb:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
    64bf:	75 ef                	jne    64b0 <get_cycle_freq+0x160>
    64c1:	80 78 ff 48          	cmpb   $0x48,-0x1(%rax)
    64c5:	48 8d 50 fe          	lea    -0x2(%rax),%rdx
    64c9:	75 e5                	jne    64b0 <get_cycle_freq+0x160>
    64cb:	0f b6 48 fe          	movzbl -0x2(%rax),%ecx
    64cf:	80 f9 47             	cmp    $0x47,%cl
    64d2:	0f 84 a9 01 00 00    	je     6681 <get_cycle_freq+0x331>
    64d8:	80 f9 4d             	cmp    $0x4d,%cl
    64db:	75 d3                	jne    64b0 <get_cycle_freq+0x160>
    64dd:	bb e8 03 00 00       	mov    $0x3e8,%ebx
    64e2:	c6 40 fe 20          	movb   $0x20,-0x2(%rax)
    64e6:	4c 8d 40 fd          	lea    -0x3(%rax),%r8
    64ea:	eb 15                	jmp    6501 <get_cycle_freq+0x1b1>
    64ec:	0f 1f 40 00          	nopl   0x0(%rax)
    64f0:	41 80 38 20          	cmpb   $0x20,(%r8)
    64f4:	49 8d 40 ff          	lea    -0x1(%r8),%rax
    64f8:	0f 84 21 01 00 00    	je     661f <get_cycle_freq+0x2cf>
    64fe:	49 89 c0             	mov    %rax,%r8
    6501:	49 39 f8             	cmp    %rdi,%r8
    6504:	73 ea                	jae    64f0 <get_cycle_freq+0x1a0>
    6506:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    650d:	00 00 00 
    6510:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    6515:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    651c:	00 00 
    651e:	0f 85 85 01 00 00    	jne    66a9 <get_cycle_freq+0x359>
    6524:	48 83 c4 58          	add    $0x58,%rsp
    6528:	5b                   	pop    %rbx
    6529:	41 5c                	pop    %r12
    652b:	e9 20 fd ff ff       	jmp    6250 <get_cycle_freq_fallback>
    6530:	48 8d 7c 24 04       	lea    0x4(%rsp),%rdi
    6535:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    653a:	e8 71 f8 ff ff       	call   5db0 <cpuid_cpu_model>
    653f:	83 f8 ff             	cmp    $0xffffffff,%eax
    6542:	0f 84 4c ff ff ff    	je     6494 <get_cycle_freq+0x144>
    6548:	83 7c 24 04 06       	cmpl   $0x6,0x4(%rsp)
    654d:	0f 85 41 ff ff ff    	jne    6494 <get_cycle_freq+0x144>
    6553:	0f b6 df             	movzbl %bh,%ebx
    6556:	83 e8 2a             	sub    $0x2a,%eax
    6559:	49 89 dc             	mov    %rbx,%r12
    655c:	83 f8 1c             	cmp    $0x1c,%eax
    655f:	77 0f                	ja     6570 <get_cycle_freq+0x220>
    6561:	ba 01 00 0d 18       	mov    $0x180d0001,%edx
    6566:	48 0f a3 c2          	bt     %rax,%rdx
    656a:	0f 82 1b 01 00 00    	jb     668b <get_cycle_freq+0x33b>
    6570:	45 69 e4 88 07 02 00 	imul   $0x20788,%r12d,%r12d
    6577:	45 85 e4             	test   %r12d,%r12d
    657a:	0f 84 14 ff ff ff    	je     6494 <get_cycle_freq+0x144>
    6580:	e8 8b f7 ff ff       	call   5d10 <measure_rdtsc_frequency>
    6585:	85 c0                	test   %eax,%eax
    6587:	0f 84 07 ff ff ff    	je     6494 <get_cycle_freq+0x144>
    658d:	41 8d 94 24 9f 86 01 	lea    0x1869f(%r12),%edx
    6594:	00 
    6595:	29 c2                	sub    %eax,%edx
    6597:	81 fa 3e 0d 03 00    	cmp    $0x30d3e,%edx
    659d:	76 61                	jbe    6600 <get_cycle_freq+0x2b0>
    659f:	48 8d 3d 6a 3a 00 00 	lea    0x3a6a(%rip),%rdi        # a010 <args_doc_str.3+0x1178>
    65a6:	e8 d5 c0 ff ff       	call   2680 <puts@plt>
    65ab:	e9 e4 fe ff ff       	jmp    6494 <get_cycle_freq+0x144>
    65b0:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    65b5:	e8 f6 f7 ff ff       	call   5db0 <cpuid_cpu_model>
    65ba:	83 f8 ff             	cmp    $0xffffffff,%eax
    65bd:	0f 84 9d fe ff ff    	je     6460 <get_cycle_freq+0x110>
    65c3:	83 7c 24 08 06       	cmpl   $0x6,0x8(%rsp)
    65c8:	0f 85 92 fe ff ff    	jne    6460 <get_cycle_freq+0x110>
    65ce:	8d 50 a2             	lea    -0x5e(%rax),%edx
    65d1:	83 e2 bf             	and    $0xffffffbf,%edx
    65d4:	0f 84 bd 00 00 00    	je     6697 <get_cycle_freq+0x347>
    65da:	83 f8 5c             	cmp    $0x5c,%eax
    65dd:	0f 85 7d fe ff ff    	jne    6460 <get_cycle_freq+0x110>
    65e3:	8b 05 73 99 00 00    	mov    0x9973(%rip),%eax        # ff5c <_cpuid+0x15c>
    65e9:	48 69 c0 00 f8 24 01 	imul   $0x124f800,%rax,%rax
    65f0:	8b 0d 62 99 00 00    	mov    0x9962(%rip),%ecx        # ff58 <_cpuid+0x158>
    65f6:	e9 0f fe ff ff       	jmp    640a <get_cycle_freq+0xba>
    65fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6600:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    6605:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    660c:	00 00 
    660e:	0f 85 95 00 00 00    	jne    66a9 <get_cycle_freq+0x359>
    6614:	48 83 c4 58          	add    $0x58,%rsp
    6618:	44 89 e0             	mov    %r12d,%eax
    661b:	5b                   	pop    %rbx
    661c:	41 5c                	pop    %r12
    661e:	c3                   	ret    
    661f:	48 8d 54 24 08       	lea    0x8(%rsp),%rdx
    6624:	48 8d 35 c0 3c 00 00 	lea    0x3cc0(%rip),%rsi        # a2eb <args_doc_str.3+0x1453>
    662b:	4c 89 c7             	mov    %r8,%rdi
    662e:	31 c0                	xor    %eax,%eax
    6630:	e8 0b bf ff ff       	call   2540 <__isoc99_sscanf@plt>
    6635:	66 0f ef c0          	pxor   %xmm0,%xmm0
    6639:	f3 0f 2a c3          	cvtsi2ss %ebx,%xmm0
    663d:	f3 0f 59 44 24 08    	mulss  0x8(%rsp),%xmm0
    6643:	f3 48 0f 2c d8       	cvttss2si %xmm0,%rbx
    6648:	41 89 dc             	mov    %ebx,%r12d
    664b:	85 db                	test   %ebx,%ebx
    664d:	0f 84 bd fe ff ff    	je     6510 <get_cycle_freq+0x1c0>
    6653:	e8 b8 f6 ff ff       	call   5d10 <measure_rdtsc_frequency>
    6658:	85 c0                	test   %eax,%eax
    665a:	0f 84 b0 fe ff ff    	je     6510 <get_cycle_freq+0x1c0>
    6660:	81 c3 9f 86 01 00    	add    $0x1869f,%ebx
    6666:	29 c3                	sub    %eax,%ebx
    6668:	81 fb 3e 0d 03 00    	cmp    $0x30d3e,%ebx
    666e:	76 90                	jbe    6600 <get_cycle_freq+0x2b0>
    6670:	48 8d 3d 99 39 00 00 	lea    0x3999(%rip),%rdi        # a010 <args_doc_str.3+0x1178>
    6677:	e8 04 c0 ff ff       	call   2680 <puts@plt>
    667c:	e9 8f fe ff ff       	jmp    6510 <get_cycle_freq+0x1c0>
    6681:	bb 40 42 0f 00       	mov    $0xf4240,%ebx
    6686:	e9 57 fe ff ff       	jmp    64e2 <get_cycle_freq+0x192>
    668b:	44 69 e3 a0 86 01 00 	imul   $0x186a0,%ebx,%r12d
    6692:	e9 e0 fe ff ff       	jmp    6577 <get_cycle_freq+0x227>
    6697:	8b 05 bf 98 00 00    	mov    0x98bf(%rip),%eax        # ff5c <_cpuid+0x15c>
    669d:	48 69 c0 00 36 6e 01 	imul   $0x16e3600,%rax,%rax
    66a4:	e9 47 ff ff ff       	jmp    65f0 <get_cycle_freq+0x2a0>
    66a9:	e8 c2 be ff ff       	call   2570 <__stack_chk_fail@plt>
    66ae:	66 90                	xchg   %ax,%ax

00000000000066b0 <_ops_rdtsc_init_base_freq>:
    66b0:	f3 0f 1e fa          	endbr64 
    66b4:	53                   	push   %rbx
    66b5:	48 89 fb             	mov    %rdi,%rbx
    66b8:	e8 93 fc ff ff       	call   6350 <get_cycle_freq>
    66bd:	85 c0                	test   %eax,%eax
    66bf:	74 0f                	je     66d0 <_ops_rdtsc_init_base_freq+0x20>
    66c1:	89 43 10             	mov    %eax,0x10(%rbx)
    66c4:	31 c0                	xor    %eax,%eax
    66c6:	5b                   	pop    %rbx
    66c7:	c3                   	ret    
    66c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    66cf:	00 
    66d0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    66d5:	5b                   	pop    %rbx
    66d6:	c3                   	ret    
    66d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    66de:	00 00 

00000000000066e0 <_ops_rdtscp_init_base_freq>:
    66e0:	f3 0f 1e fa          	endbr64 
    66e4:	53                   	push   %rbx
    66e5:	48 89 fb             	mov    %rdi,%rbx
    66e8:	e8 63 fc ff ff       	call   6350 <get_cycle_freq>
    66ed:	85 c0                	test   %eax,%eax
    66ef:	74 0f                	je     6700 <_ops_rdtscp_init_base_freq+0x20>
    66f1:	89 43 10             	mov    %eax,0x10(%rbx)
    66f4:	31 c0                	xor    %eax,%eax
    66f6:	5b                   	pop    %rbx
    66f7:	c3                   	ret    
    66f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    66ff:	00 
    6700:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    6705:	5b                   	pop    %rbx
    6706:	c3                   	ret    
    6707:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    670e:	00 00 

0000000000006710 <get_timestamp_from_name>:
    6710:	f3 0f 1e fa          	endbr64 
    6714:	48 85 ff             	test   %rdi,%rdi
    6717:	74 68                	je     6781 <get_timestamp_from_name+0x71>
    6719:	44 0f b6 17          	movzbl (%rdi),%r10d
    671d:	4c 8d 0d 7c 74 00 00 	lea    0x747c(%rip),%r9        # dba0 <all_sys_timestamp>
    6724:	4c 8d 05 15 7e 00 00 	lea    0x7e15(%rip),%r8        # e540 <rdtsc_ops>
    672b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6730:	49 8b 70 18          	mov    0x18(%r8),%rsi
    6734:	44 38 16             	cmp    %r10b,(%rsi)
    6737:	75 37                	jne    6770 <get_timestamp_from_name+0x60>
    6739:	45 84 d2             	test   %r10b,%r10b
    673c:	74 27                	je     6765 <get_timestamp_from_name+0x55>
    673e:	b8 01 00 00 00       	mov    $0x1,%eax
    6743:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6748:	0f b6 14 06          	movzbl (%rsi,%rax,1),%edx
    674c:	3a 14 07             	cmp    (%rdi,%rax,1),%dl
    674f:	75 1f                	jne    6770 <get_timestamp_from_name+0x60>
    6751:	84 d2                	test   %dl,%dl
    6753:	0f 94 c2             	sete   %dl
    6756:	48 83 f8 0f          	cmp    $0xf,%rax
    675a:	0f 94 c1             	sete   %cl
    675d:	48 83 c0 01          	add    $0x1,%rax
    6761:	08 ca                	or     %cl,%dl
    6763:	74 e3                	je     6748 <get_timestamp_from_name+0x38>
    6765:	4c 89 c0             	mov    %r8,%rax
    6768:	c3                   	ret    
    6769:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6770:	4d 8b 41 08          	mov    0x8(%r9),%r8
    6774:	49 83 c1 08          	add    $0x8,%r9
    6778:	4d 85 c0             	test   %r8,%r8
    677b:	75 b3                	jne    6730 <get_timestamp_from_name+0x20>
    677d:	4c 89 c0             	mov    %r8,%rax
    6780:	c3                   	ret    
    6781:	45 31 c0             	xor    %r8d,%r8d
    6784:	eb df                	jmp    6765 <get_timestamp_from_name+0x55>
    6786:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    678d:	00 00 00 

0000000000006790 <sys_stat_mem_init>:
    6790:	f3 0f 1e fa          	endbr64 
    6794:	41 54                	push   %r12
    6796:	31 f6                	xor    %esi,%esi
    6798:	31 c0                	xor    %eax,%eax
    679a:	55                   	push   %rbp
    679b:	53                   	push   %rbx
    679c:	48 89 fb             	mov    %rdi,%rbx
    679f:	48 8d 3d 57 3b 00 00 	lea    0x3b57(%rip),%rdi        # a2fd <args_doc_str.3+0x1465>
    67a6:	e8 e5 bc ff ff       	call   2490 <open@plt>
    67ab:	31 f6                	xor    %esi,%esi
    67ad:	48 8d 3d 57 3b 00 00 	lea    0x3b57(%rip),%rdi        # a30b <args_doc_str.3+0x1473>
    67b4:	89 c5                	mov    %eax,%ebp
    67b6:	31 c0                	xor    %eax,%eax
    67b8:	e8 d3 bc ff ff       	call   2490 <open@plt>
    67bd:	41 89 c4             	mov    %eax,%r12d
    67c0:	83 fd ff             	cmp    $0xffffffff,%ebp
    67c3:	74 1d                	je     67e2 <sys_stat_mem_init+0x52>
    67c5:	83 f8 ff             	cmp    $0xffffffff,%eax
    67c8:	74 0c                	je     67d6 <sys_stat_mem_init+0x46>
    67ca:	89 2b                	mov    %ebp,(%rbx)
    67cc:	89 43 04             	mov    %eax,0x4(%rbx)
    67cf:	31 c0                	xor    %eax,%eax
    67d1:	5b                   	pop    %rbx
    67d2:	5d                   	pop    %rbp
    67d3:	41 5c                	pop    %r12
    67d5:	c3                   	ret    
    67d6:	83 fd ff             	cmp    $0xffffffff,%ebp
    67d9:	74 07                	je     67e2 <sys_stat_mem_init+0x52>
    67db:	89 ef                	mov    %ebp,%edi
    67dd:	e8 0e bf ff ff       	call   26f0 <close@plt>
    67e2:	41 83 fc ff          	cmp    $0xffffffff,%r12d
    67e6:	74 08                	je     67f0 <sys_stat_mem_init+0x60>
    67e8:	44 89 e7             	mov    %r12d,%edi
    67eb:	e8 00 bf ff ff       	call   26f0 <close@plt>
    67f0:	48 8b 3d 09 7e 00 00 	mov    0x7e09(%rip),%rdi        # e600 <stderr@GLIBC_2.2.5>
    67f7:	48 8d 0d a2 40 00 00 	lea    0x40a2(%rip),%rcx        # a8a0 <__func__.2>
    67fe:	48 8d 15 4b 38 00 00 	lea    0x384b(%rip),%rdx        # a050 <args_doc_str.3+0x11b8>
    6805:	31 c0                	xor    %eax,%eax
    6807:	be 01 00 00 00       	mov    $0x1,%esi
    680c:	e8 7f be ff ff       	call   2690 <__fprintf_chk@plt>
    6811:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    6816:	eb b9                	jmp    67d1 <sys_stat_mem_init+0x41>
    6818:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    681f:	00 

0000000000006820 <sys_stat_mem_update>:
    6820:	f3 0f 1e fa          	endbr64 
    6824:	41 54                	push   %r12
    6826:	4c 8d 25 d3 8b 00 00 	lea    0x8bd3(%rip),%r12        # f400 <buf_meminfo.1>
    682d:	31 c9                	xor    %ecx,%ecx
    682f:	ba 00 08 00 00       	mov    $0x800,%edx
    6834:	55                   	push   %rbp
    6835:	48 89 fd             	mov    %rdi,%rbp
    6838:	53                   	push   %rbx
    6839:	8b 3f                	mov    (%rdi),%edi
    683b:	48 89 f3             	mov    %rsi,%rbx
    683e:	4c 89 e6             	mov    %r12,%rsi
    6841:	e8 aa bd ff ff       	call   25f0 <pread@plt>
    6846:	83 f8 ff             	cmp    $0xffffffff,%eax
    6849:	0f 84 c1 01 00 00    	je     6a10 <sys_stat_mem_update+0x1f0>
    684f:	8b 7d 04             	mov    0x4(%rbp),%edi
    6852:	48 8d 2d a7 83 00 00 	lea    0x83a7(%rip),%rbp        # ec00 <buf_vmstat.0>
    6859:	31 c9                	xor    %ecx,%ecx
    685b:	ba 00 08 00 00       	mov    $0x800,%edx
    6860:	48 89 ee             	mov    %rbp,%rsi
    6863:	e8 88 bd ff ff       	call   25f0 <pread@plt>
    6868:	83 f8 ff             	cmp    $0xffffffff,%eax
    686b:	0f 84 9f 01 00 00    	je     6a10 <sys_stat_mem_update+0x1f0>
    6871:	be 3a 00 00 00       	mov    $0x3a,%esi
    6876:	4c 89 e7             	mov    %r12,%rdi
    6879:	e8 c2 bb ff ff       	call   2440 <strchr@plt>
    687e:	ba 0a 00 00 00       	mov    $0xa,%edx
    6883:	31 f6                	xor    %esi,%esi
    6885:	48 8d 78 01          	lea    0x1(%rax),%rdi
    6889:	e8 b2 bd ff ff       	call   2640 <strtol@plt>
    688e:	be 3a 00 00 00       	mov    $0x3a,%esi
    6893:	48 8d 3d 82 8b 00 00 	lea    0x8b82(%rip),%rdi        # f41c <buf_meminfo.1+0x1c>
    689a:	89 03                	mov    %eax,(%rbx)
    689c:	e8 9f bb ff ff       	call   2440 <strchr@plt>
    68a1:	ba 0a 00 00 00       	mov    $0xa,%edx
    68a6:	31 f6                	xor    %esi,%esi
    68a8:	48 8d 78 01          	lea    0x1(%rax),%rdi
    68ac:	e8 8f bd ff ff       	call   2640 <strtol@plt>
    68b1:	be 3a 00 00 00       	mov    $0x3a,%esi
    68b6:	48 8d 3d 7b 8b 00 00 	lea    0x8b7b(%rip),%rdi        # f438 <buf_meminfo.1+0x38>
    68bd:	89 43 04             	mov    %eax,0x4(%rbx)
    68c0:	e8 7b bb ff ff       	call   2440 <strchr@plt>
    68c5:	ba 0a 00 00 00       	mov    $0xa,%edx
    68ca:	31 f6                	xor    %esi,%esi
    68cc:	48 8d 78 01          	lea    0x1(%rax),%rdi
    68d0:	e8 6b bd ff ff       	call   2640 <strtol@plt>
    68d5:	be 3a 00 00 00       	mov    $0x3a,%esi
    68da:	48 8d 3d 73 8b 00 00 	lea    0x8b73(%rip),%rdi        # f454 <buf_meminfo.1+0x54>
    68e1:	89 43 08             	mov    %eax,0x8(%rbx)
    68e4:	e8 57 bb ff ff       	call   2440 <strchr@plt>
    68e9:	ba 0a 00 00 00       	mov    $0xa,%edx
    68ee:	31 f6                	xor    %esi,%esi
    68f0:	48 8d 78 01          	lea    0x1(%rax),%rdi
    68f4:	e8 47 bd ff ff       	call   2640 <strtol@plt>
    68f9:	be 3a 00 00 00       	mov    $0x3a,%esi
    68fe:	48 8d 3d 87 8b 00 00 	lea    0x8b87(%rip),%rdi        # f48c <buf_meminfo.1+0x8c>
    6905:	89 43 0c             	mov    %eax,0xc(%rbx)
    6908:	e8 33 bb ff ff       	call   2440 <strchr@plt>
    690d:	ba 0a 00 00 00       	mov    $0xa,%edx
    6912:	31 f6                	xor    %esi,%esi
    6914:	48 8d 78 01          	lea    0x1(%rax),%rdi
    6918:	e8 23 bd ff ff       	call   2640 <strtol@plt>
    691d:	be 3a 00 00 00       	mov    $0x3a,%esi
    6922:	48 8d 3d 7f 8b 00 00 	lea    0x8b7f(%rip),%rdi        # f4a8 <buf_meminfo.1+0xa8>
    6929:	89 43 10             	mov    %eax,0x10(%rbx)
    692c:	e8 0f bb ff ff       	call   2440 <strchr@plt>
    6931:	ba 0a 00 00 00       	mov    $0xa,%edx
    6936:	31 f6                	xor    %esi,%esi
    6938:	48 8d 78 01          	lea    0x1(%rax),%rdi
    693c:	e8 ff bc ff ff       	call   2640 <strtol@plt>
    6941:	48 89 ef             	mov    %rbp,%rdi
    6944:	48 8d 35 cd 39 00 00 	lea    0x39cd(%rip),%rsi        # a318 <args_doc_str.3+0x1480>
    694b:	89 43 14             	mov    %eax,0x14(%rbx)
    694e:	e8 8d ba ff ff       	call   23e0 <strstr@plt>
    6953:	ba 0a 00 00 00       	mov    $0xa,%edx
    6958:	31 f6                	xor    %esi,%esi
    695a:	48 8d 68 07          	lea    0x7(%rax),%rbp
    695e:	48 89 ef             	mov    %rbp,%rdi
    6961:	e8 6a ba ff ff       	call   23d0 <strtoll@plt>
    6966:	48 89 ef             	mov    %rbp,%rdi
    6969:	be 0a 00 00 00       	mov    $0xa,%esi
    696e:	48 89 43 18          	mov    %rax,0x18(%rbx)
    6972:	e8 c9 ba ff ff       	call   2440 <strchr@plt>
    6977:	ba 0a 00 00 00       	mov    $0xa,%edx
    697c:	31 f6                	xor    %esi,%esi
    697e:	48 8d 68 09          	lea    0x9(%rax),%rbp
    6982:	48 89 ef             	mov    %rbp,%rdi
    6985:	e8 46 ba ff ff       	call   23d0 <strtoll@plt>
    698a:	48 89 ef             	mov    %rbp,%rdi
    698d:	be 0a 00 00 00       	mov    $0xa,%esi
    6992:	48 89 43 20          	mov    %rax,0x20(%rbx)
    6996:	e8 a5 ba ff ff       	call   2440 <strchr@plt>
    699b:	ba 0a 00 00 00       	mov    $0xa,%edx
    69a0:	31 f6                	xor    %esi,%esi
    69a2:	48 8d 68 08          	lea    0x8(%rax),%rbp
    69a6:	48 89 ef             	mov    %rbp,%rdi
    69a9:	e8 22 ba ff ff       	call   23d0 <strtoll@plt>
    69ae:	48 89 ef             	mov    %rbp,%rdi
    69b1:	be 0a 00 00 00       	mov    $0xa,%esi
    69b6:	48 89 43 28          	mov    %rax,0x28(%rbx)
    69ba:	e8 81 ba ff ff       	call   2440 <strchr@plt>
    69bf:	ba 0a 00 00 00       	mov    $0xa,%edx
    69c4:	31 f6                	xor    %esi,%esi
    69c6:	48 8d 68 09          	lea    0x9(%rax),%rbp
    69ca:	48 89 ef             	mov    %rbp,%rdi
    69cd:	e8 fe b9 ff ff       	call   23d0 <strtoll@plt>
    69d2:	48 8d 35 46 39 00 00 	lea    0x3946(%rip),%rsi        # a31f <args_doc_str.3+0x1487>
    69d9:	48 89 ef             	mov    %rbp,%rdi
    69dc:	48 89 43 30          	mov    %rax,0x30(%rbx)
    69e0:	e8 fb b9 ff ff       	call   23e0 <strstr@plt>
    69e5:	ba 0a 00 00 00       	mov    $0xa,%edx
    69ea:	31 f6                	xor    %esi,%esi
    69ec:	48 8d 78 0b          	lea    0xb(%rax),%rdi
    69f0:	e8 db b9 ff ff       	call   23d0 <strtoll@plt>
    69f5:	c7 43 40 01 00 00 00 	movl   $0x1,0x40(%rbx)
    69fc:	48 89 43 38          	mov    %rax,0x38(%rbx)
    6a00:	31 c0                	xor    %eax,%eax
    6a02:	5b                   	pop    %rbx
    6a03:	5d                   	pop    %rbp
    6a04:	41 5c                	pop    %r12
    6a06:	c3                   	ret    
    6a07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6a0e:	00 00 
    6a10:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    6a15:	eb eb                	jmp    6a02 <sys_stat_mem_update+0x1e2>
    6a17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6a1e:	00 00 

0000000000006a20 <sys_stat_mem_exit>:
    6a20:	f3 0f 1e fa          	endbr64 
    6a24:	53                   	push   %rbx
    6a25:	48 89 fb             	mov    %rdi,%rbx
    6a28:	8b 3f                	mov    (%rdi),%edi
    6a2a:	e8 c1 bc ff ff       	call   26f0 <close@plt>
    6a2f:	8b 7b 04             	mov    0x4(%rbx),%edi
    6a32:	e8 b9 bc ff ff       	call   26f0 <close@plt>
    6a37:	31 c0                	xor    %eax,%eax
    6a39:	5b                   	pop    %rbx
    6a3a:	c3                   	ret    
    6a3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006a40 <sys_stat_mem_get>:
    6a40:	f3 0f 1e fa          	endbr64 
    6a44:	83 fe 09             	cmp    $0x9,%esi
    6a47:	77 64                	ja     6aad <sys_stat_mem_get+0x6d>
    6a49:	48 8d 15 dc 3d 00 00 	lea    0x3ddc(%rip),%rdx        # a82c <args_doc_str.3+0x1994>
    6a50:	89 f1                	mov    %esi,%ecx
    6a52:	48 63 04 8a          	movslq (%rdx,%rcx,4),%rax
    6a56:	48 01 d0             	add    %rdx,%rax
    6a59:	3e ff e0             	notrack jmp *%rax
    6a5c:	0f 1f 40 00          	nopl   0x0(%rax)
    6a60:	48 8b 47 30          	mov    0x30(%rdi),%rax
    6a64:	c3                   	ret    
    6a65:	0f 1f 00             	nopl   (%rax)
    6a68:	48 8b 47 38          	mov    0x38(%rdi),%rax
    6a6c:	c3                   	ret    
    6a6d:	0f 1f 00             	nopl   (%rax)
    6a70:	48 63 47 04          	movslq 0x4(%rdi),%rax
    6a74:	c3                   	ret    
    6a75:	0f 1f 00             	nopl   (%rax)
    6a78:	48 63 47 08          	movslq 0x8(%rdi),%rax
    6a7c:	c3                   	ret    
    6a7d:	0f 1f 00             	nopl   (%rax)
    6a80:	48 63 47 0c          	movslq 0xc(%rdi),%rax
    6a84:	c3                   	ret    
    6a85:	0f 1f 00             	nopl   (%rax)
    6a88:	48 63 47 10          	movslq 0x10(%rdi),%rax
    6a8c:	c3                   	ret    
    6a8d:	0f 1f 00             	nopl   (%rax)
    6a90:	48 63 47 14          	movslq 0x14(%rdi),%rax
    6a94:	c3                   	ret    
    6a95:	0f 1f 00             	nopl   (%rax)
    6a98:	48 8b 47 18          	mov    0x18(%rdi),%rax
    6a9c:	c3                   	ret    
    6a9d:	0f 1f 00             	nopl   (%rax)
    6aa0:	48 8b 47 20          	mov    0x20(%rdi),%rax
    6aa4:	c3                   	ret    
    6aa5:	0f 1f 00             	nopl   (%rax)
    6aa8:	48 8b 47 28          	mov    0x28(%rdi),%rax
    6aac:	c3                   	ret    
    6aad:	48 83 ec 08          	sub    $0x8,%rsp
    6ab1:	89 f1                	mov    %esi,%ecx
    6ab3:	48 89 fa             	mov    %rdi,%rdx
    6ab6:	31 c0                	xor    %eax,%eax
    6ab8:	48 8d 35 51 36 00 00 	lea    0x3651(%rip),%rsi        # a110 <args_doc_str.3+0x1278>
    6abf:	bf 01 00 00 00       	mov    $0x1,%edi
    6ac4:	e8 d7 b8 ff ff       	call   23a0 <__printf_chk@plt>
    6ac9:	31 c0                	xor    %eax,%eax
    6acb:	48 83 c4 08          	add    $0x8,%rsp
    6acf:	c3                   	ret    

0000000000006ad0 <sys_stat_mem_get_delta>:
    6ad0:	f3 0f 1e fa          	endbr64 
    6ad4:	83 fa 09             	cmp    $0x9,%edx
    6ad7:	0f 87 ac 00 00 00    	ja     6b89 <sys_stat_mem_get_delta+0xb9>
    6add:	48 8d 0d 70 3d 00 00 	lea    0x3d70(%rip),%rcx        # a854 <args_doc_str.3+0x19bc>
    6ae4:	89 d2                	mov    %edx,%edx
    6ae6:	48 63 04 91          	movslq (%rcx,%rdx,4),%rax
    6aea:	48 01 c8             	add    %rcx,%rax
    6aed:	3e ff e0             	notrack jmp *%rax
    6af0:	48 8b 46 30          	mov    0x30(%rsi),%rax
    6af4:	48 2b 47 30          	sub    0x30(%rdi),%rax
    6af8:	c3                   	ret    
    6af9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6b00:	48 8b 46 38          	mov    0x38(%rsi),%rax
    6b04:	48 2b 47 38          	sub    0x38(%rdi),%rax
    6b08:	c3                   	ret    
    6b09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6b10:	8b 46 04             	mov    0x4(%rsi),%eax
    6b13:	2b 47 04             	sub    0x4(%rdi),%eax
    6b16:	48 98                	cltq   
    6b18:	c3                   	ret    
    6b19:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6b20:	8b 46 08             	mov    0x8(%rsi),%eax
    6b23:	2b 47 08             	sub    0x8(%rdi),%eax
    6b26:	48 98                	cltq   
    6b28:	c3                   	ret    
    6b29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6b30:	8b 46 0c             	mov    0xc(%rsi),%eax
    6b33:	2b 47 0c             	sub    0xc(%rdi),%eax
    6b36:	48 98                	cltq   
    6b38:	c3                   	ret    
    6b39:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6b40:	8b 46 10             	mov    0x10(%rsi),%eax
    6b43:	2b 47 10             	sub    0x10(%rdi),%eax
    6b46:	48 98                	cltq   
    6b48:	c3                   	ret    
    6b49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6b50:	8b 46 14             	mov    0x14(%rsi),%eax
    6b53:	2b 47 14             	sub    0x14(%rdi),%eax
    6b56:	48 98                	cltq   
    6b58:	c3                   	ret    
    6b59:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6b60:	48 8b 46 18          	mov    0x18(%rsi),%rax
    6b64:	48 2b 47 18          	sub    0x18(%rdi),%rax
    6b68:	c3                   	ret    
    6b69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6b70:	48 8b 46 20          	mov    0x20(%rsi),%rax
    6b74:	48 2b 47 20          	sub    0x20(%rdi),%rax
    6b78:	c3                   	ret    
    6b79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6b80:	48 8b 46 28          	mov    0x28(%rsi),%rax
    6b84:	48 2b 47 28          	sub    0x28(%rdi),%rax
    6b88:	c3                   	ret    
    6b89:	48 83 ec 08          	sub    $0x8,%rsp
    6b8d:	41 89 d0             	mov    %edx,%r8d
    6b90:	48 89 f1             	mov    %rsi,%rcx
    6b93:	48 89 fa             	mov    %rdi,%rdx
    6b96:	48 8d 35 93 35 00 00 	lea    0x3593(%rip),%rsi        # a130 <args_doc_str.3+0x1298>
    6b9d:	bf 01 00 00 00       	mov    $0x1,%edi
    6ba2:	31 c0                	xor    %eax,%eax
    6ba4:	e8 f7 b7 ff ff       	call   23a0 <__printf_chk@plt>
    6ba9:	31 c0                	xor    %eax,%eax
    6bab:	48 83 c4 08          	add    $0x8,%rsp
    6baf:	c3                   	ret    

0000000000006bb0 <sys_print_pmbench_info>:
    6bb0:	f3 0f 1e fa          	endbr64 
    6bb4:	48 8b 15 65 7a 00 00 	mov    0x7a65(%rip),%rdx        # e620 <argp_program_version@GLIBC_2.2.5>
    6bbb:	48 8d 35 68 37 00 00 	lea    0x3768(%rip),%rsi        # a32a <args_doc_str.3+0x1492>
    6bc2:	bf 01 00 00 00       	mov    $0x1,%edi
    6bc7:	31 c0                	xor    %eax,%eax
    6bc9:	e9 d2 b7 ff ff       	jmp    23a0 <__printf_chk@plt>
    6bce:	66 90                	xchg   %ax,%ax

0000000000006bd0 <sys_print_hostname>:
    6bd0:	f3 0f 1e fa          	endbr64 
    6bd4:	48 83 ec 08          	sub    $0x8,%rsp
    6bd8:	48 8d 3d e1 7d 00 00 	lea    0x7de1(%rip),%rdi        # e9c0 <uname_buf>
    6bdf:	e8 dc b7 ff ff       	call   23c0 <uname@plt>
    6be4:	4c 8d 05 16 7e 00 00 	lea    0x7e16(%rip),%r8        # ea01 <uname_buf+0x41>
    6beb:	89 05 cb 7d 00 00    	mov    %eax,0x7dcb(%rip)        # e9bc <uname_ret>
    6bf1:	85 c0                	test   %eax,%eax
    6bf3:	75 0b                	jne    6c00 <sys_print_hostname+0x30>
    6bf5:	4c 89 c0             	mov    %r8,%rax
    6bf8:	48 83 c4 08          	add    $0x8,%rsp
    6bfc:	c3                   	ret    
    6bfd:	0f 1f 00             	nopl   (%rax)
    6c00:	48 8d 3d 40 37 00 00 	lea    0x3740(%rip),%rdi        # a347 <args_doc_str.3+0x14af>
    6c07:	e8 e4 b8 ff ff       	call   24f0 <perror@plt>
    6c0c:	48 8d 3d 43 37 00 00 	lea    0x3743(%rip),%rdi        # a356 <args_doc_str.3+0x14be>
    6c13:	e8 68 ba ff ff       	call   2680 <puts@plt>
    6c18:	4c 8d 05 20 37 00 00 	lea    0x3720(%rip),%r8        # a33f <args_doc_str.3+0x14a7>
    6c1f:	48 83 c4 08          	add    $0x8,%rsp
    6c23:	4c 89 c0             	mov    %r8,%rax
    6c26:	c3                   	ret    
    6c27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6c2e:	00 00 

0000000000006c30 <sys_get_hostname>:
    6c30:	f3 0f 1e fa          	endbr64 
    6c34:	48 83 ec 08          	sub    $0x8,%rsp
    6c38:	48 8d 3d 81 7d 00 00 	lea    0x7d81(%rip),%rdi        # e9c0 <uname_buf>
    6c3f:	e8 7c b7 ff ff       	call   23c0 <uname@plt>
    6c44:	4c 8d 05 b6 7d 00 00 	lea    0x7db6(%rip),%r8        # ea01 <uname_buf+0x41>
    6c4b:	89 05 6b 7d 00 00    	mov    %eax,0x7d6b(%rip)        # e9bc <uname_ret>
    6c51:	85 c0                	test   %eax,%eax
    6c53:	75 0b                	jne    6c60 <sys_get_hostname+0x30>
    6c55:	4c 89 c0             	mov    %r8,%rax
    6c58:	48 83 c4 08          	add    $0x8,%rsp
    6c5c:	c3                   	ret    
    6c5d:	0f 1f 00             	nopl   (%rax)
    6c60:	48 8d 3d e0 36 00 00 	lea    0x36e0(%rip),%rdi        # a347 <args_doc_str.3+0x14af>
    6c67:	e8 84 b8 ff ff       	call   24f0 <perror@plt>
    6c6c:	4c 8d 05 cc 36 00 00 	lea    0x36cc(%rip),%r8        # a33f <args_doc_str.3+0x14a7>
    6c73:	48 83 c4 08          	add    $0x8,%rsp
    6c77:	4c 89 c0             	mov    %r8,%rax
    6c7a:	c3                   	ret    
    6c7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006c80 <sys_get_os_version_string>:
    6c80:	f3 0f 1e fa          	endbr64 
    6c84:	48 8d 05 35 7d 00 00 	lea    0x7d35(%rip),%rax        # e9c0 <uname_buf>
    6c8b:	85 ff                	test   %edi,%edi
    6c8d:	74 13                	je     6ca2 <sys_get_os_version_string+0x22>
    6c8f:	83 ff 04             	cmp    $0x4,%edi
    6c92:	48 8d 80 82 00 00 00 	lea    0x82(%rax),%rax
    6c99:	ba 00 00 00 00       	mov    $0x0,%edx
    6c9e:	48 0f 45 c2          	cmovne %rdx,%rax
    6ca2:	c3                   	ret    
    6ca3:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    6caa:	00 00 00 00 
    6cae:	66 90                	xchg   %ax,%ax

0000000000006cb0 <sys_get_cpu_arch>:
    6cb0:	f3 0f 1e fa          	endbr64 
    6cb4:	48 8d 05 09 7e 00 00 	lea    0x7e09(%rip),%rax        # eac4 <uname_buf+0x104>
    6cbb:	c3                   	ret    
    6cbc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006cc0 <sys_print_time_info>:
    6cc0:	f3 0f 1e fa          	endbr64 
    6cc4:	55                   	push   %rbp
    6cc5:	31 ff                	xor    %edi,%edi
    6cc7:	48 83 ec 60          	sub    $0x60,%rsp
    6ccb:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6cd2:	00 00 
    6cd4:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    6cd9:	31 c0                	xor    %eax,%eax
    6cdb:	e8 40 b8 ff ff       	call   2520 <time@plt>
    6ce0:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    6ce5:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    6ce9:	0f 84 89 00 00 00    	je     6d78 <sys_print_time_info+0xb8>
    6cef:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
    6cf4:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    6cf9:	48 89 ef             	mov    %rbp,%rdi
    6cfc:	e8 8f b8 ff ff       	call   2590 <ctime_r@plt>
    6d01:	48 8d 35 6e 36 00 00 	lea    0x366e(%rip),%rsi        # a376 <args_doc_str.3+0x14de>
    6d08:	bf 01 00 00 00       	mov    $0x1,%edi
    6d0d:	48 89 c2             	mov    %rax,%rdx
    6d10:	31 c0                	xor    %eax,%eax
    6d12:	e8 89 b6 ff ff       	call   23a0 <__printf_chk@plt>
    6d17:	48 89 ef             	mov    %rbp,%rdi
    6d1a:	e8 e1 b7 ff ff       	call   2500 <gmtime@plt>
    6d1f:	f3 0f 6f 00          	movdqu (%rax),%xmm0
    6d23:	c7 05 8b 7c 00 00 01 	movl   $0x1,0x7c8b(%rip)        # e9b8 <gl_goodtime>
    6d2a:	00 00 00 
    6d2d:	0f 29 05 4c 7c 00 00 	movaps %xmm0,0x7c4c(%rip)        # e980 <timestamp_time>
    6d34:	f3 0f 6f 48 10       	movdqu 0x10(%rax),%xmm1
    6d39:	0f 29 0d 50 7c 00 00 	movaps %xmm1,0x7c50(%rip)        # e990 <timestamp_time+0x10>
    6d40:	f3 0f 6f 50 20       	movdqu 0x20(%rax),%xmm2
    6d45:	0f 29 15 54 7c 00 00 	movaps %xmm2,0x7c54(%rip)        # e9a0 <timestamp_time+0x20>
    6d4c:	48 8b 40 30          	mov    0x30(%rax),%rax
    6d50:	48 89 05 59 7c 00 00 	mov    %rax,0x7c59(%rip)        # e9b0 <timestamp_time+0x30>
    6d57:	b8 01 00 00 00       	mov    $0x1,%eax
    6d5c:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx
    6d61:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    6d68:	00 00 
    6d6a:	75 1c                	jne    6d88 <sys_print_time_info+0xc8>
    6d6c:	48 83 c4 60          	add    $0x60,%rsp
    6d70:	5d                   	pop    %rbp
    6d71:	c3                   	ret    
    6d72:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6d78:	48 8d 3d e9 35 00 00 	lea    0x35e9(%rip),%rdi        # a368 <args_doc_str.3+0x14d0>
    6d7f:	e8 6c b7 ff ff       	call   24f0 <perror@plt>
    6d84:	31 c0                	xor    %eax,%eax
    6d86:	eb d4                	jmp    6d5c <sys_print_time_info+0x9c>
    6d88:	e8 e3 b7 ff ff       	call   2570 <__stack_chk_fail@plt>
    6d8d:	0f 1f 00             	nopl   (%rax)

0000000000006d90 <sys_get_time_info_value>:
    6d90:	f3 0f 1e fa          	endbr64 
    6d94:	83 ff 08             	cmp    $0x8,%edi
    6d97:	0f 87 9a 00 00 00    	ja     6e37 <sys_get_time_info_value+0xa7>
    6d9d:	48 8d 0d d8 3a 00 00 	lea    0x3ad8(%rip),%rcx        # a87c <args_doc_str.3+0x19e4>
    6da4:	89 fa                	mov    %edi,%edx
    6da6:	48 63 04 91          	movslq (%rcx,%rdx,4),%rax
    6daa:	48 01 c8             	add    %rcx,%rax
    6dad:	3e ff e0             	notrack jmp *%rax
    6db0:	8b 05 e6 7b 00 00    	mov    0x7be6(%rip),%eax        # e99c <timestamp_time+0x1c>
    6db6:	c3                   	ret    
    6db7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6dbe:	00 00 
    6dc0:	8b 05 da 7b 00 00    	mov    0x7bda(%rip),%eax        # e9a0 <timestamp_time+0x20>
    6dc6:	c3                   	ret    
    6dc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6dce:	00 00 
    6dd0:	8b 05 aa 7b 00 00    	mov    0x7baa(%rip),%eax        # e980 <timestamp_time>
    6dd6:	c3                   	ret    
    6dd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6dde:	00 00 
    6de0:	8b 05 9e 7b 00 00    	mov    0x7b9e(%rip),%eax        # e984 <timestamp_time+0x4>
    6de6:	c3                   	ret    
    6de7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6dee:	00 00 
    6df0:	8b 05 92 7b 00 00    	mov    0x7b92(%rip),%eax        # e988 <timestamp_time+0x8>
    6df6:	c3                   	ret    
    6df7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6dfe:	00 00 
    6e00:	8b 05 86 7b 00 00    	mov    0x7b86(%rip),%eax        # e98c <timestamp_time+0xc>
    6e06:	c3                   	ret    
    6e07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6e0e:	00 00 
    6e10:	8b 05 7a 7b 00 00    	mov    0x7b7a(%rip),%eax        # e990 <timestamp_time+0x10>
    6e16:	c3                   	ret    
    6e17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6e1e:	00 00 
    6e20:	8b 05 6e 7b 00 00    	mov    0x7b6e(%rip),%eax        # e994 <timestamp_time+0x14>
    6e26:	c3                   	ret    
    6e27:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6e2e:	00 00 
    6e30:	8b 05 62 7b 00 00    	mov    0x7b62(%rip),%eax        # e998 <timestamp_time+0x18>
    6e36:	c3                   	ret    
    6e37:	48 83 ec 08          	sub    $0x8,%rsp
    6e3b:	89 fa                	mov    %edi,%edx
    6e3d:	48 8d 35 1c 33 00 00 	lea    0x331c(%rip),%rsi        # a160 <args_doc_str.3+0x12c8>
    6e44:	31 c0                	xor    %eax,%eax
    6e46:	bf 01 00 00 00       	mov    $0x1,%edi
    6e4b:	e8 50 b5 ff ff       	call   23a0 <__printf_chk@plt>
    6e50:	31 c0                	xor    %eax,%eax
    6e52:	48 83 c4 08          	add    $0x8,%rsp
    6e56:	c3                   	ret    
    6e57:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6e5e:	00 00 

0000000000006e60 <sys_print_uuid>:
    6e60:	f3 0f 1e fa          	endbr64 
    6e64:	41 54                	push   %r12
    6e66:	4c 8d 25 d3 7a 00 00 	lea    0x7ad3(%rip),%r12        # e940 <uuid_str>
    6e6d:	55                   	push   %rbp
    6e6e:	48 83 ec 28          	sub    $0x28,%rsp
    6e72:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6e79:	00 00 
    6e7b:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    6e80:	31 c0                	xor    %eax,%eax
    6e82:	48 89 e5             	mov    %rsp,%rbp
    6e85:	48 89 ef             	mov    %rbp,%rdi
    6e88:	e8 33 b6 ff ff       	call   24c0 <uuid_generate@plt>
    6e8d:	4c 89 e6             	mov    %r12,%rsi
    6e90:	48 89 ef             	mov    %rbp,%rdi
    6e93:	e8 98 b6 ff ff       	call   2530 <uuid_unparse@plt>
    6e98:	31 c0                	xor    %eax,%eax
    6e9a:	4c 89 e2             	mov    %r12,%rdx
    6e9d:	bf 01 00 00 00       	mov    $0x1,%edi
    6ea2:	48 8d 35 e1 34 00 00 	lea    0x34e1(%rip),%rsi        # a38a <args_doc_str.3+0x14f2>
    6ea9:	e8 f2 b4 ff ff       	call   23a0 <__printf_chk@plt>
    6eae:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    6eb3:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    6eba:	00 00 
    6ebc:	75 0b                	jne    6ec9 <sys_print_uuid+0x69>
    6ebe:	48 83 c4 28          	add    $0x28,%rsp
    6ec2:	4c 89 e0             	mov    %r12,%rax
    6ec5:	5d                   	pop    %rbp
    6ec6:	41 5c                	pop    %r12
    6ec8:	c3                   	ret    
    6ec9:	e8 a2 b6 ff ff       	call   2570 <__stack_chk_fail@plt>
    6ece:	66 90                	xchg   %ax,%ax

0000000000006ed0 <sys_get_uuid>:
    6ed0:	f3 0f 1e fa          	endbr64 
    6ed4:	48 8d 05 65 7a 00 00 	lea    0x7a65(%rip),%rax        # e940 <uuid_str>
    6edb:	c3                   	ret    
    6edc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006ee0 <trace_marker_init>:
    6ee0:	f3 0f 1e fa          	endbr64 
    6ee4:	8b 05 2e 7a 00 00    	mov    0x7a2e(%rip),%eax        # e918 <params+0x58>
    6eea:	85 c0                	test   %eax,%eax
    6eec:	75 02                	jne    6ef0 <trace_marker_init+0x10>
    6eee:	c3                   	ret    
    6eef:	90                   	nop
    6ef0:	48 83 ec 08          	sub    $0x8,%rsp
    6ef4:	be 01 00 00 00       	mov    $0x1,%esi
    6ef9:	48 8d 3d 88 32 00 00 	lea    0x3288(%rip),%rdi        # a188 <args_doc_str.3+0x12f0>
    6f00:	31 c0                	xor    %eax,%eax
    6f02:	e8 89 b5 ff ff       	call   2490 <open@plt>
    6f07:	89 05 03 76 00 00    	mov    %eax,0x7603(%rip)        # e510 <trace_marker_fd>
    6f0d:	83 f8 ff             	cmp    $0xffffffff,%eax
    6f10:	74 0e                	je     6f20 <trace_marker_init+0x40>
    6f12:	48 83 c4 08          	add    $0x8,%rsp
    6f16:	c3                   	ret    
    6f17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6f1e:	00 00 
    6f20:	48 8d 3d 89 32 00 00 	lea    0x3289(%rip),%rdi        # a1b0 <args_doc_str.3+0x1318>
    6f27:	48 83 c4 08          	add    $0x8,%rsp
    6f2b:	e9 c0 b5 ff ff       	jmp    24f0 <perror@plt>

0000000000006f30 <trace_marker_exit>:
    6f30:	f3 0f 1e fa          	endbr64 
    6f34:	8b 3d d6 75 00 00    	mov    0x75d6(%rip),%edi        # e510 <trace_marker_fd>
    6f3a:	85 ff                	test   %edi,%edi
    6f3c:	79 02                	jns    6f40 <trace_marker_exit+0x10>
    6f3e:	c3                   	ret    
    6f3f:	90                   	nop
    6f40:	48 83 ec 08          	sub    $0x8,%rsp
    6f44:	e8 a7 b7 ff ff       	call   26f0 <close@plt>
    6f49:	83 f8 ff             	cmp    $0xffffffff,%eax
    6f4c:	74 0a                	je     6f58 <trace_marker_exit+0x28>
    6f4e:	48 83 c4 08          	add    $0x8,%rsp
    6f52:	c3                   	ret    
    6f53:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6f58:	48 8d 3d 79 32 00 00 	lea    0x3279(%rip),%rdi        # a1d8 <args_doc_str.3+0x1340>
    6f5f:	48 83 c4 08          	add    $0x8,%rsp
    6f63:	e9 88 b5 ff ff       	jmp    24f0 <perror@plt>
    6f68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    6f6f:	00 

0000000000006f70 <finish_touch>:
    6f70:	f3 0f 1e fa          	endbr64 
    6f74:	c3                   	ret    
    6f75:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    6f7c:	00 00 00 00 

0000000000006f80 <finish_histogram>:
    6f80:	f3 0f 1e fa          	endbr64 
    6f84:	48 89 fa             	mov    %rdi,%rdx
    6f87:	89 f0                	mov    %esi,%eax
    6f89:	83 fe 01             	cmp    $0x1,%esi
    6f8c:	7e 60                	jle    6fee <finish_histogram+0x6e>
    6f8e:	83 e8 02             	sub    $0x2,%eax
    6f91:	48 8d bf 00 10 00 00 	lea    0x1000(%rdi),%rdi
    6f98:	48 c1 e0 0c          	shl    $0xc,%rax
    6f9c:	4c 8d 8c 02 00 20 00 	lea    0x2000(%rdx,%rax,1),%r9
    6fa3:	00 
    6fa4:	4c 8d 87 00 08 00 00 	lea    0x800(%rdi),%r8
    6fab:	be 80 00 00 00       	mov    $0x80,%esi
    6fb0:	48 8d 46 80          	lea    -0x80(%rsi),%rax
    6fb4:	0f 1f 40 00          	nopl   0x0(%rax)
    6fb8:	48 8b 0c 07          	mov    (%rdi,%rax,1),%rcx
    6fbc:	48 01 0c 02          	add    %rcx,(%rdx,%rax,1)
    6fc0:	49 8b 0c 00          	mov    (%r8,%rax,1),%rcx
    6fc4:	48 01 8c 02 00 08 00 	add    %rcx,0x800(%rdx,%rax,1)
    6fcb:	00 
    6fcc:	48 83 c0 08          	add    $0x8,%rax
    6fd0:	48 39 c6             	cmp    %rax,%rsi
    6fd3:	75 e3                	jne    6fb8 <finish_histogram+0x38>
    6fd5:	48 83 ee 80          	sub    $0xffffffffffffff80,%rsi
    6fd9:	48 81 fe 80 08 00 00 	cmp    $0x880,%rsi
    6fe0:	75 ce                	jne    6fb0 <finish_histogram+0x30>
    6fe2:	48 81 c7 00 10 00 00 	add    $0x1000,%rdi
    6fe9:	4c 39 cf             	cmp    %r9,%rdi
    6fec:	75 b6                	jne    6fa4 <finish_histogram+0x24>
    6fee:	c3                   	ret    
    6fef:	90                   	nop

0000000000006ff0 <touch_report>:
    6ff0:	f3 0f 1e fa          	endbr64 
    6ff4:	48 8d 3d bd 38 00 00 	lea    0x38bd(%rip),%rdi        # a8b8 <__func__.2+0x18>
    6ffb:	e9 80 b6 ff ff       	jmp    2680 <puts@plt>

0000000000007000 <get_histogram_bucket>:
    7000:	f3 0f 1e fa          	endbr64 
    7004:	31 c9                	xor    %ecx,%ecx
    7006:	85 f6                	test   %esi,%esi
    7008:	48 63 d2             	movslq %edx,%rdx
    700b:	0f 95 c1             	setne  %cl
    700e:	48 c1 e2 07          	shl    $0x7,%rdx
    7012:	48 c1 e1 0b          	shl    $0xb,%rcx
    7016:	48 01 d1             	add    %rdx,%rcx
    7019:	48 8d 04 0f          	lea    (%rdi,%rcx,1),%rax
    701d:	c3                   	ret    
    701e:	66 90                	xchg   %ax,%ax

0000000000007020 <histogram_report>:
    7020:	f3 0f 1e fa          	endbr64 
    7024:	55                   	push   %rbp
    7025:	89 f5                	mov    %esi,%ebp
    7027:	53                   	push   %rbx
    7028:	48 89 fb             	mov    %rdi,%rbx
    702b:	48 8d 3d 85 39 00 00 	lea    0x3985(%rip),%rdi        # a9b7 <__func__.2+0x117>
    7032:	48 83 ec 08          	sub    $0x8,%rsp
    7036:	e8 45 b6 ff ff       	call   2680 <puts@plt>
    703b:	85 ed                	test   %ebp,%ebp
    703d:	7f 1e                	jg     705d <histogram_report+0x3d>
    703f:	48 8d 3d 8c 39 00 00 	lea    0x398c(%rip),%rdi        # a9d2 <__func__.2+0x132>
    7046:	e8 35 b6 ff ff       	call   2680 <puts@plt>
    704b:	48 83 c4 08          	add    $0x8,%rsp
    704f:	48 8d bb 00 08 00 00 	lea    0x800(%rbx),%rdi
    7056:	5b                   	pop    %rbx
    7057:	5d                   	pop    %rbp
    7058:	e9 fe d1 ff ff       	jmp    425b <dump_histogram_64>
    705d:	48 8d 3d 75 39 00 00 	lea    0x3975(%rip),%rdi        # a9d9 <__func__.2+0x139>
    7064:	e8 17 b6 ff ff       	call   2680 <puts@plt>
    7069:	48 89 df             	mov    %rbx,%rdi
    706c:	e8 ea d1 ff ff       	call   425b <dump_histogram_64>
    7071:	83 fd 63             	cmp    $0x63,%ebp
    7074:	7e c9                	jle    703f <histogram_report+0x1f>
    7076:	48 83 c4 08          	add    $0x8,%rsp
    707a:	5b                   	pop    %rbx
    707b:	5d                   	pop    %rbp
    707c:	c3                   	ret    
    707d:	0f 1f 00             	nopl   (%rax)

0000000000007080 <get_access_from_name>:
    7080:	f3 0f 1e fa          	endbr64 
    7084:	48 85 ff             	test   %rdi,%rdi
    7087:	74 68                	je     70f1 <get_access_from_name+0x71>
    7089:	44 0f b6 17          	movzbl (%rdi),%r10d
    708d:	4c 8d 0d 2c 6b 00 00 	lea    0x6b2c(%rip),%r9        # dbc0 <all_access_fn>
    7094:	4c 8d 05 05 75 00 00 	lea    0x7505(%rip),%r8        # e5a0 <touch_access>
    709b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    70a0:	49 8b 70 20          	mov    0x20(%r8),%rsi
    70a4:	44 38 16             	cmp    %r10b,(%rsi)
    70a7:	75 37                	jne    70e0 <get_access_from_name+0x60>
    70a9:	45 84 d2             	test   %r10b,%r10b
    70ac:	74 27                	je     70d5 <get_access_from_name+0x55>
    70ae:	b8 01 00 00 00       	mov    $0x1,%eax
    70b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    70b8:	0f b6 14 06          	movzbl (%rsi,%rax,1),%edx
    70bc:	3a 14 07             	cmp    (%rdi,%rax,1),%dl
    70bf:	75 1f                	jne    70e0 <get_access_from_name+0x60>
    70c1:	84 d2                	test   %dl,%dl
    70c3:	0f 94 c2             	sete   %dl
    70c6:	48 83 f8 0f          	cmp    $0xf,%rax
    70ca:	0f 94 c1             	sete   %cl
    70cd:	48 83 c0 01          	add    $0x1,%rax
    70d1:	08 ca                	or     %cl,%dl
    70d3:	74 e3                	je     70b8 <get_access_from_name+0x38>
    70d5:	4c 89 c0             	mov    %r8,%rax
    70d8:	c3                   	ret    
    70d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    70e0:	4d 8b 41 08          	mov    0x8(%r9),%r8
    70e4:	49 83 c1 08          	add    $0x8,%r9
    70e8:	4d 85 c0             	test   %r8,%r8
    70eb:	75 b3                	jne    70a0 <get_access_from_name+0x20>
    70ed:	4c 89 c0             	mov    %r8,%rax
    70f0:	c3                   	ret    
    70f1:	45 31 c0             	xor    %r8d,%r8d
    70f4:	eb df                	jmp    70d5 <get_access_from_name+0x55>
    70f6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    70fd:	00 00 00 

0000000000007100 <floatToXmlChar>:
    7100:	f3 0f 1e fa          	endbr64 
    7104:	53                   	push   %rbx
    7105:	be 39 00 00 00       	mov    $0x39,%esi
    710a:	b8 01 00 00 00       	mov    $0x1,%eax
    710f:	48 8d 1d ca 8f 00 00 	lea    0x8fca(%rip),%rbx        # 100e0 <tempbuf>
    7116:	48 8d 15 e4 38 00 00 	lea    0x38e4(%rip),%rdx        # aa01 <__func__.2+0x161>
    711d:	48 89 df             	mov    %rbx,%rdi
    7120:	48 83 ec 10          	sub    $0x10,%rsp
    7124:	f2 0f 11 44 24 08    	movsd  %xmm0,0x8(%rsp)
    712a:	e8 a1 b3 ff ff       	call   24d0 <xmlStrPrintf@plt>
    712f:	f2 0f 10 44 24 08    	movsd  0x8(%rsp),%xmm0
    7135:	41 89 c0             	mov    %eax,%r8d
    7138:	48 89 d8             	mov    %rbx,%rax
    713b:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
    713f:	74 0f                	je     7150 <floatToXmlChar+0x50>
    7141:	48 83 c4 10          	add    $0x10,%rsp
    7145:	5b                   	pop    %rbx
    7146:	c3                   	ret    
    7147:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    714e:	00 00 
    7150:	48 8d 35 b0 38 00 00 	lea    0x38b0(%rip),%rsi        # aa07 <__func__.2+0x167>
    7157:	bf 01 00 00 00       	mov    $0x1,%edi
    715c:	b8 01 00 00 00       	mov    $0x1,%eax
    7161:	e8 3a b2 ff ff       	call   23a0 <__printf_chk@plt>
    7166:	48 83 c4 10          	add    $0x10,%rsp
    716a:	48 8d 05 8a 38 00 00 	lea    0x388a(%rip),%rax        # a9fb <__func__.2+0x15b>
    7171:	5b                   	pop    %rbx
    7172:	c3                   	ret    
    7173:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    717a:	00 00 00 00 
    717e:	66 90                	xchg   %ax,%ax

0000000000007180 <signedIntToXmlChar>:
    7180:	f3 0f 1e fa          	endbr64 
    7184:	41 54                	push   %r12
    7186:	48 89 f9             	mov    %rdi,%rcx
    7189:	49 89 fc             	mov    %rdi,%r12
    718c:	48 8d 15 8f 38 00 00 	lea    0x388f(%rip),%rdx        # aa22 <__func__.2+0x182>
    7193:	53                   	push   %rbx
    7194:	48 8d 1d 45 8f 00 00 	lea    0x8f45(%rip),%rbx        # 100e0 <tempbuf>
    719b:	be 39 00 00 00       	mov    $0x39,%esi
    71a0:	31 c0                	xor    %eax,%eax
    71a2:	48 89 df             	mov    %rbx,%rdi
    71a5:	48 83 ec 08          	sub    $0x8,%rsp
    71a9:	e8 22 b3 ff ff       	call   24d0 <xmlStrPrintf@plt>
    71ae:	41 89 c0             	mov    %eax,%r8d
    71b1:	48 89 d8             	mov    %rbx,%rax
    71b4:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
    71b8:	74 0e                	je     71c8 <signedIntToXmlChar+0x48>
    71ba:	48 83 c4 08          	add    $0x8,%rsp
    71be:	5b                   	pop    %rbx
    71bf:	41 5c                	pop    %r12
    71c1:	c3                   	ret    
    71c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    71c8:	4c 89 e2             	mov    %r12,%rdx
    71cb:	48 8d 35 26 3c 00 00 	lea    0x3c26(%rip),%rsi        # adf8 <__func__.2+0x558>
    71d2:	bf 01 00 00 00       	mov    $0x1,%edi
    71d7:	31 c0                	xor    %eax,%eax
    71d9:	e8 c2 b1 ff ff       	call   23a0 <__printf_chk@plt>
    71de:	48 83 c4 08          	add    $0x8,%rsp
    71e2:	48 8d 05 12 38 00 00 	lea    0x3812(%rip),%rax        # a9fb <__func__.2+0x15b>
    71e9:	5b                   	pop    %rbx
    71ea:	41 5c                	pop    %r12
    71ec:	c3                   	ret    
    71ed:	0f 1f 00             	nopl   (%rax)

00000000000071f0 <unsignedIntToXmlChar>:
    71f0:	f3 0f 1e fa          	endbr64 
    71f4:	41 54                	push   %r12
    71f6:	48 89 f9             	mov    %rdi,%rcx
    71f9:	49 89 fc             	mov    %rdi,%r12
    71fc:	48 8d 15 8f 38 00 00 	lea    0x388f(%rip),%rdx        # aa92 <__func__.2+0x1f2>
    7203:	53                   	push   %rbx
    7204:	48 8d 1d d5 8e 00 00 	lea    0x8ed5(%rip),%rbx        # 100e0 <tempbuf>
    720b:	be 39 00 00 00       	mov    $0x39,%esi
    7210:	31 c0                	xor    %eax,%eax
    7212:	48 89 df             	mov    %rbx,%rdi
    7215:	48 83 ec 08          	sub    $0x8,%rsp
    7219:	e8 b2 b2 ff ff       	call   24d0 <xmlStrPrintf@plt>
    721e:	41 89 c0             	mov    %eax,%r8d
    7221:	48 89 d8             	mov    %rbx,%rax
    7224:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
    7228:	74 0e                	je     7238 <unsignedIntToXmlChar+0x48>
    722a:	48 83 c4 08          	add    $0x8,%rsp
    722e:	5b                   	pop    %rbx
    722f:	41 5c                	pop    %r12
    7231:	c3                   	ret    
    7232:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7238:	4c 89 e2             	mov    %r12,%rdx
    723b:	48 8d 35 d6 3b 00 00 	lea    0x3bd6(%rip),%rsi        # ae18 <__func__.2+0x578>
    7242:	bf 01 00 00 00       	mov    $0x1,%edi
    7247:	31 c0                	xor    %eax,%eax
    7249:	e8 52 b1 ff ff       	call   23a0 <__printf_chk@plt>
    724e:	48 83 c4 08          	add    $0x8,%rsp
    7252:	48 8d 05 a2 37 00 00 	lea    0x37a2(%rip),%rax        # a9fb <__func__.2+0x15b>
    7259:	5b                   	pop    %rbx
    725a:	41 5c                	pop    %r12
    725c:	c3                   	ret    
    725d:	0f 1f 00             	nopl   (%rax)

0000000000007260 <byteToXmlChar>:
    7260:	f3 0f 1e fa          	endbr64 
    7264:	41 54                	push   %r12
    7266:	44 0f b6 e7          	movzbl %dil,%r12d
    726a:	48 8d 15 86 38 00 00 	lea    0x3886(%rip),%rdx        # aaf7 <__func__.2+0x257>
    7271:	31 c0                	xor    %eax,%eax
    7273:	53                   	push   %rbx
    7274:	48 8d 1d 65 8e 00 00 	lea    0x8e65(%rip),%rbx        # 100e0 <tempbuf>
    727b:	44 89 e1             	mov    %r12d,%ecx
    727e:	be 39 00 00 00       	mov    $0x39,%esi
    7283:	48 89 df             	mov    %rbx,%rdi
    7286:	48 83 ec 08          	sub    $0x8,%rsp
    728a:	e8 41 b2 ff ff       	call   24d0 <xmlStrPrintf@plt>
    728f:	41 89 c0             	mov    %eax,%r8d
    7292:	48 89 d8             	mov    %rbx,%rax
    7295:	41 83 f8 ff          	cmp    $0xffffffff,%r8d
    7299:	74 0d                	je     72a8 <byteToXmlChar+0x48>
    729b:	48 83 c4 08          	add    $0x8,%rsp
    729f:	5b                   	pop    %rbx
    72a0:	41 5c                	pop    %r12
    72a2:	c3                   	ret    
    72a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    72a8:	44 89 e2             	mov    %r12d,%edx
    72ab:	48 8d 35 4a 38 00 00 	lea    0x384a(%rip),%rsi        # aafc <__func__.2+0x25c>
    72b2:	bf 01 00 00 00       	mov    $0x1,%edi
    72b7:	31 c0                	xor    %eax,%eax
    72b9:	e8 e2 b0 ff ff       	call   23a0 <__printf_chk@plt>
    72be:	48 83 c4 08          	add    $0x8,%rsp
    72c2:	48 8d 05 32 37 00 00 	lea    0x3732(%rip),%rax        # a9fb <__func__.2+0x15b>
    72c9:	5b                   	pop    %rbx
    72ca:	41 5c                	pop    %r12
    72cc:	c3                   	ret    
    72cd:	0f 1f 00             	nopl   (%rax)

00000000000072d0 <makeTimeInfoNode>:
    72d0:	f3 0f 1e fa          	endbr64 
    72d4:	41 56                	push   %r14
    72d6:	31 c9                	xor    %ecx,%ecx
    72d8:	48 8d 15 37 38 00 00 	lea    0x3837(%rip),%rdx        # ab16 <__func__.2+0x276>
    72df:	31 f6                	xor    %esi,%esi
    72e1:	41 55                	push   %r13
    72e3:	4c 8d 2d 38 37 00 00 	lea    0x3738(%rip),%r13        # aa22 <__func__.2+0x182>
    72ea:	41 54                	push   %r12
    72ec:	55                   	push   %rbp
    72ed:	48 8d 2d ec 8d 00 00 	lea    0x8dec(%rip),%rbp        # 100e0 <tempbuf>
    72f4:	48 83 ec 08          	sub    $0x8,%rsp
    72f8:	e8 13 b1 ff ff       	call   2410 <xmlNewChild@plt>
    72fd:	bf 06 00 00 00       	mov    $0x6,%edi
    7302:	49 89 c4             	mov    %rax,%r12
    7305:	e8 86 fa ff ff       	call   6d90 <sys_get_time_info_value>
    730a:	4c 89 ea             	mov    %r13,%rdx
    730d:	be 39 00 00 00       	mov    $0x39,%esi
    7312:	48 89 ef             	mov    %rbp,%rdi
    7315:	4c 63 f0             	movslq %eax,%r14
    7318:	31 c0                	xor    %eax,%eax
    731a:	4c 89 f1             	mov    %r14,%rcx
    731d:	e8 ae b1 ff ff       	call   24d0 <xmlStrPrintf@plt>
    7322:	48 89 e9             	mov    %rbp,%rcx
    7325:	83 f8 ff             	cmp    $0xffffffff,%eax
    7328:	0f 84 3a 02 00 00    	je     7568 <makeTimeInfoNode+0x298>
    732e:	48 8d 15 eb 37 00 00 	lea    0x37eb(%rip),%rdx        # ab20 <__func__.2+0x280>
    7335:	31 f6                	xor    %esi,%esi
    7337:	4c 89 e7             	mov    %r12,%rdi
    733a:	e8 d1 b0 ff ff       	call   2410 <xmlNewChild@plt>
    733f:	bf 05 00 00 00       	mov    $0x5,%edi
    7344:	e8 47 fa ff ff       	call   6d90 <sys_get_time_info_value>
    7349:	4c 89 ea             	mov    %r13,%rdx
    734c:	be 39 00 00 00       	mov    $0x39,%esi
    7351:	48 89 ef             	mov    %rbp,%rdi
    7354:	4c 63 f0             	movslq %eax,%r14
    7357:	31 c0                	xor    %eax,%eax
    7359:	4c 89 f1             	mov    %r14,%rcx
    735c:	e8 6f b1 ff ff       	call   24d0 <xmlStrPrintf@plt>
    7361:	48 8d 0d 78 8d 00 00 	lea    0x8d78(%rip),%rcx        # 100e0 <tempbuf>
    7368:	83 f8 ff             	cmp    $0xffffffff,%eax
    736b:	0f 84 1f 02 00 00    	je     7590 <makeTimeInfoNode+0x2c0>
    7371:	48 8d 15 ad 37 00 00 	lea    0x37ad(%rip),%rdx        # ab25 <__func__.2+0x285>
    7378:	31 f6                	xor    %esi,%esi
    737a:	4c 89 e7             	mov    %r12,%rdi
    737d:	e8 8e b0 ff ff       	call   2410 <xmlNewChild@plt>
    7382:	bf 04 00 00 00       	mov    $0x4,%edi
    7387:	e8 04 fa ff ff       	call   6d90 <sys_get_time_info_value>
    738c:	4c 89 ea             	mov    %r13,%rdx
    738f:	be 39 00 00 00       	mov    $0x39,%esi
    7394:	48 89 ef             	mov    %rbp,%rdi
    7397:	4c 63 f0             	movslq %eax,%r14
    739a:	31 c0                	xor    %eax,%eax
    739c:	4c 89 f1             	mov    %r14,%rcx
    739f:	e8 2c b1 ff ff       	call   24d0 <xmlStrPrintf@plt>
    73a4:	48 8d 0d 35 8d 00 00 	lea    0x8d35(%rip),%rcx        # 100e0 <tempbuf>
    73ab:	83 f8 ff             	cmp    $0xffffffff,%eax
    73ae:	0f 84 04 02 00 00    	je     75b8 <makeTimeInfoNode+0x2e8>
    73b4:	48 8d 15 6f 37 00 00 	lea    0x376f(%rip),%rdx        # ab2a <__func__.2+0x28a>
    73bb:	31 f6                	xor    %esi,%esi
    73bd:	4c 89 e7             	mov    %r12,%rdi
    73c0:	e8 4b b0 ff ff       	call   2410 <xmlNewChild@plt>
    73c5:	bf 03 00 00 00       	mov    $0x3,%edi
    73ca:	e8 c1 f9 ff ff       	call   6d90 <sys_get_time_info_value>
    73cf:	4c 89 ea             	mov    %r13,%rdx
    73d2:	be 39 00 00 00       	mov    $0x39,%esi
    73d7:	48 89 ef             	mov    %rbp,%rdi
    73da:	4c 63 f0             	movslq %eax,%r14
    73dd:	31 c0                	xor    %eax,%eax
    73df:	4c 89 f1             	mov    %r14,%rcx
    73e2:	e8 e9 b0 ff ff       	call   24d0 <xmlStrPrintf@plt>
    73e7:	48 8d 0d f2 8c 00 00 	lea    0x8cf2(%rip),%rcx        # 100e0 <tempbuf>
    73ee:	83 f8 ff             	cmp    $0xffffffff,%eax
    73f1:	0f 84 e9 01 00 00    	je     75e0 <makeTimeInfoNode+0x310>
    73f7:	48 8d 15 30 37 00 00 	lea    0x3730(%rip),%rdx        # ab2e <__func__.2+0x28e>
    73fe:	31 f6                	xor    %esi,%esi
    7400:	4c 89 e7             	mov    %r12,%rdi
    7403:	e8 08 b0 ff ff       	call   2410 <xmlNewChild@plt>
    7408:	bf 02 00 00 00       	mov    $0x2,%edi
    740d:	e8 7e f9 ff ff       	call   6d90 <sys_get_time_info_value>
    7412:	4c 89 ea             	mov    %r13,%rdx
    7415:	be 39 00 00 00       	mov    $0x39,%esi
    741a:	48 89 ef             	mov    %rbp,%rdi
    741d:	4c 63 f0             	movslq %eax,%r14
    7420:	31 c0                	xor    %eax,%eax
    7422:	4c 89 f1             	mov    %r14,%rcx
    7425:	e8 a6 b0 ff ff       	call   24d0 <xmlStrPrintf@plt>
    742a:	48 8d 0d af 8c 00 00 	lea    0x8caf(%rip),%rcx        # 100e0 <tempbuf>
    7431:	83 f8 ff             	cmp    $0xffffffff,%eax
    7434:	0f 84 ce 01 00 00    	je     7608 <makeTimeInfoNode+0x338>
    743a:	48 8d 15 f2 36 00 00 	lea    0x36f2(%rip),%rdx        # ab33 <__func__.2+0x293>
    7441:	31 f6                	xor    %esi,%esi
    7443:	4c 89 e7             	mov    %r12,%rdi
    7446:	e8 c5 af ff ff       	call   2410 <xmlNewChild@plt>
    744b:	bf 01 00 00 00       	mov    $0x1,%edi
    7450:	e8 3b f9 ff ff       	call   6d90 <sys_get_time_info_value>
    7455:	4c 89 ea             	mov    %r13,%rdx
    7458:	be 39 00 00 00       	mov    $0x39,%esi
    745d:	48 89 ef             	mov    %rbp,%rdi
    7460:	4c 63 f0             	movslq %eax,%r14
    7463:	31 c0                	xor    %eax,%eax
    7465:	4c 89 f1             	mov    %r14,%rcx
    7468:	e8 63 b0 ff ff       	call   24d0 <xmlStrPrintf@plt>
    746d:	48 8d 0d 6c 8c 00 00 	lea    0x8c6c(%rip),%rcx        # 100e0 <tempbuf>
    7474:	83 f8 ff             	cmp    $0xffffffff,%eax
    7477:	0f 84 b3 01 00 00    	je     7630 <makeTimeInfoNode+0x360>
    747d:	48 8d 15 b4 36 00 00 	lea    0x36b4(%rip),%rdx        # ab38 <__func__.2+0x298>
    7484:	31 f6                	xor    %esi,%esi
    7486:	4c 89 e7             	mov    %r12,%rdi
    7489:	e8 82 af ff ff       	call   2410 <xmlNewChild@plt>
    748e:	31 ff                	xor    %edi,%edi
    7490:	e8 fb f8 ff ff       	call   6d90 <sys_get_time_info_value>
    7495:	4c 89 ea             	mov    %r13,%rdx
    7498:	be 39 00 00 00       	mov    $0x39,%esi
    749d:	48 89 ef             	mov    %rbp,%rdi
    74a0:	4c 63 f0             	movslq %eax,%r14
    74a3:	31 c0                	xor    %eax,%eax
    74a5:	4c 89 f1             	mov    %r14,%rcx
    74a8:	e8 23 b0 ff ff       	call   24d0 <xmlStrPrintf@plt>
    74ad:	48 8d 0d 2c 8c 00 00 	lea    0x8c2c(%rip),%rcx        # 100e0 <tempbuf>
    74b4:	83 f8 ff             	cmp    $0xffffffff,%eax
    74b7:	0f 84 9b 01 00 00    	je     7658 <makeTimeInfoNode+0x388>
    74bd:	48 8d 15 78 36 00 00 	lea    0x3678(%rip),%rdx        # ab3c <__func__.2+0x29c>
    74c4:	31 f6                	xor    %esi,%esi
    74c6:	4c 89 e7             	mov    %r12,%rdi
    74c9:	e8 42 af ff ff       	call   2410 <xmlNewChild@plt>
    74ce:	bf 07 00 00 00       	mov    $0x7,%edi
    74d3:	e8 b8 f8 ff ff       	call   6d90 <sys_get_time_info_value>
    74d8:	4c 89 ea             	mov    %r13,%rdx
    74db:	be 39 00 00 00       	mov    $0x39,%esi
    74e0:	48 89 ef             	mov    %rbp,%rdi
    74e3:	4c 63 f0             	movslq %eax,%r14
    74e6:	31 c0                	xor    %eax,%eax
    74e8:	4c 89 f1             	mov    %r14,%rcx
    74eb:	e8 e0 af ff ff       	call   24d0 <xmlStrPrintf@plt>
    74f0:	48 8d 0d e9 8b 00 00 	lea    0x8be9(%rip),%rcx        # 100e0 <tempbuf>
    74f7:	83 f8 ff             	cmp    $0xffffffff,%eax
    74fa:	0f 84 80 01 00 00    	je     7680 <makeTimeInfoNode+0x3b0>
    7500:	48 8d 15 39 36 00 00 	lea    0x3639(%rip),%rdx        # ab40 <__func__.2+0x2a0>
    7507:	31 f6                	xor    %esi,%esi
    7509:	4c 89 e7             	mov    %r12,%rdi
    750c:	e8 ff ae ff ff       	call   2410 <xmlNewChild@plt>
    7511:	bf 08 00 00 00       	mov    $0x8,%edi
    7516:	e8 75 f8 ff ff       	call   6d90 <sys_get_time_info_value>
    751b:	4c 89 ea             	mov    %r13,%rdx
    751e:	be 39 00 00 00       	mov    $0x39,%esi
    7523:	48 89 ef             	mov    %rbp,%rdi
    7526:	4c 63 f0             	movslq %eax,%r14
    7529:	31 c0                	xor    %eax,%eax
    752b:	4c 89 f1             	mov    %r14,%rcx
    752e:	e8 9d af ff ff       	call   24d0 <xmlStrPrintf@plt>
    7533:	48 8d 0d a6 8b 00 00 	lea    0x8ba6(%rip),%rcx        # 100e0 <tempbuf>
    753a:	83 f8 ff             	cmp    $0xffffffff,%eax
    753d:	0f 84 65 01 00 00    	je     76a8 <makeTimeInfoNode+0x3d8>
    7543:	4c 89 e7             	mov    %r12,%rdi
    7546:	48 8d 15 f8 35 00 00 	lea    0x35f8(%rip),%rdx        # ab45 <__func__.2+0x2a5>
    754d:	31 f6                	xor    %esi,%esi
    754f:	e8 bc ae ff ff       	call   2410 <xmlNewChild@plt>
    7554:	48 83 c4 08          	add    $0x8,%rsp
    7558:	4c 89 e0             	mov    %r12,%rax
    755b:	5d                   	pop    %rbp
    755c:	41 5c                	pop    %r12
    755e:	41 5d                	pop    %r13
    7560:	41 5e                	pop    %r14
    7562:	c3                   	ret    
    7563:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7568:	4c 89 f2             	mov    %r14,%rdx
    756b:	48 8d 35 86 38 00 00 	lea    0x3886(%rip),%rsi        # adf8 <__func__.2+0x558>
    7572:	bf 01 00 00 00       	mov    $0x1,%edi
    7577:	31 c0                	xor    %eax,%eax
    7579:	e8 22 ae ff ff       	call   23a0 <__printf_chk@plt>
    757e:	48 8d 0d 76 34 00 00 	lea    0x3476(%rip),%rcx        # a9fb <__func__.2+0x15b>
    7585:	e9 a4 fd ff ff       	jmp    732e <makeTimeInfoNode+0x5e>
    758a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7590:	4c 89 f2             	mov    %r14,%rdx
    7593:	48 8d 35 5e 38 00 00 	lea    0x385e(%rip),%rsi        # adf8 <__func__.2+0x558>
    759a:	bf 01 00 00 00       	mov    $0x1,%edi
    759f:	31 c0                	xor    %eax,%eax
    75a1:	e8 fa ad ff ff       	call   23a0 <__printf_chk@plt>
    75a6:	48 8d 0d 4e 34 00 00 	lea    0x344e(%rip),%rcx        # a9fb <__func__.2+0x15b>
    75ad:	e9 bf fd ff ff       	jmp    7371 <makeTimeInfoNode+0xa1>
    75b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    75b8:	4c 89 f2             	mov    %r14,%rdx
    75bb:	48 8d 35 36 38 00 00 	lea    0x3836(%rip),%rsi        # adf8 <__func__.2+0x558>
    75c2:	bf 01 00 00 00       	mov    $0x1,%edi
    75c7:	31 c0                	xor    %eax,%eax
    75c9:	e8 d2 ad ff ff       	call   23a0 <__printf_chk@plt>
    75ce:	48 8d 0d 26 34 00 00 	lea    0x3426(%rip),%rcx        # a9fb <__func__.2+0x15b>
    75d5:	e9 da fd ff ff       	jmp    73b4 <makeTimeInfoNode+0xe4>
    75da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    75e0:	4c 89 f2             	mov    %r14,%rdx
    75e3:	48 8d 35 0e 38 00 00 	lea    0x380e(%rip),%rsi        # adf8 <__func__.2+0x558>
    75ea:	bf 01 00 00 00       	mov    $0x1,%edi
    75ef:	31 c0                	xor    %eax,%eax
    75f1:	e8 aa ad ff ff       	call   23a0 <__printf_chk@plt>
    75f6:	48 8d 0d fe 33 00 00 	lea    0x33fe(%rip),%rcx        # a9fb <__func__.2+0x15b>
    75fd:	e9 f5 fd ff ff       	jmp    73f7 <makeTimeInfoNode+0x127>
    7602:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7608:	4c 89 f2             	mov    %r14,%rdx
    760b:	48 8d 35 e6 37 00 00 	lea    0x37e6(%rip),%rsi        # adf8 <__func__.2+0x558>
    7612:	bf 01 00 00 00       	mov    $0x1,%edi
    7617:	31 c0                	xor    %eax,%eax
    7619:	e8 82 ad ff ff       	call   23a0 <__printf_chk@plt>
    761e:	48 8d 0d d6 33 00 00 	lea    0x33d6(%rip),%rcx        # a9fb <__func__.2+0x15b>
    7625:	e9 10 fe ff ff       	jmp    743a <makeTimeInfoNode+0x16a>
    762a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7630:	4c 89 f2             	mov    %r14,%rdx
    7633:	48 8d 35 be 37 00 00 	lea    0x37be(%rip),%rsi        # adf8 <__func__.2+0x558>
    763a:	bf 01 00 00 00       	mov    $0x1,%edi
    763f:	31 c0                	xor    %eax,%eax
    7641:	e8 5a ad ff ff       	call   23a0 <__printf_chk@plt>
    7646:	48 8d 0d ae 33 00 00 	lea    0x33ae(%rip),%rcx        # a9fb <__func__.2+0x15b>
    764d:	e9 2b fe ff ff       	jmp    747d <makeTimeInfoNode+0x1ad>
    7652:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7658:	4c 89 f2             	mov    %r14,%rdx
    765b:	48 8d 35 96 37 00 00 	lea    0x3796(%rip),%rsi        # adf8 <__func__.2+0x558>
    7662:	bf 01 00 00 00       	mov    $0x1,%edi
    7667:	31 c0                	xor    %eax,%eax
    7669:	e8 32 ad ff ff       	call   23a0 <__printf_chk@plt>
    766e:	48 8d 0d 86 33 00 00 	lea    0x3386(%rip),%rcx        # a9fb <__func__.2+0x15b>
    7675:	e9 43 fe ff ff       	jmp    74bd <makeTimeInfoNode+0x1ed>
    767a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7680:	4c 89 f2             	mov    %r14,%rdx
    7683:	48 8d 35 6e 37 00 00 	lea    0x376e(%rip),%rsi        # adf8 <__func__.2+0x558>
    768a:	bf 01 00 00 00       	mov    $0x1,%edi
    768f:	31 c0                	xor    %eax,%eax
    7691:	e8 0a ad ff ff       	call   23a0 <__printf_chk@plt>
    7696:	48 8d 0d 5e 33 00 00 	lea    0x335e(%rip),%rcx        # a9fb <__func__.2+0x15b>
    769d:	e9 5e fe ff ff       	jmp    7500 <makeTimeInfoNode+0x230>
    76a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    76a8:	4c 89 f2             	mov    %r14,%rdx
    76ab:	48 8d 35 46 37 00 00 	lea    0x3746(%rip),%rsi        # adf8 <__func__.2+0x558>
    76b2:	bf 01 00 00 00       	mov    $0x1,%edi
    76b7:	31 c0                	xor    %eax,%eax
    76b9:	e8 e2 ac ff ff       	call   23a0 <__printf_chk@plt>
    76be:	48 8d 0d 36 33 00 00 	lea    0x3336(%rip),%rcx        # a9fb <__func__.2+0x15b>
    76c5:	e9 79 fe ff ff       	jmp    7543 <makeTimeInfoNode+0x273>

Disassembly of section .fini:

00000000000076cc <_fini>:
    76cc:	f3 0f 1e fa          	endbr64 
    76d0:	48 83 ec 08          	sub    $0x8,%rsp
    76d4:	48 83 c4 08          	add    $0x8,%rsp
    76d8:	c3                   	ret    
